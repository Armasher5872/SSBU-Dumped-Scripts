unsafe extern "C" fn effect_appeallwr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 3.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("toonlink_appeal_sweat"), Hash40::new("head"), 0, -1, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("toonlink_appeal_sword"), Hash40::new("top"), 0, 7.5, 2, 0, 0, 20, 1, 1, 2, 0, 10, 30, 10, true);
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("toonlink_appeal_sword"), Hash40::new("top"), 0, 6.5, 2, 0, 0, 200, 1, 1, 2, 0, 10, 30, 10, true);
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("toonlink_appeal_sword"), Hash40::new("top"), 0, 6.5, 2, 0, -20, -25, 1, 1, 2, 0, 10, 30, 10, true);
    }
    frame(lua_state, 33.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("toonlink_appeal_sword"), Hash40::new("top"), 0, 7.5, 2, 0, -20, 190, 1, 1, 2, 0, 10, 30, 10, true);
    }
    frame(lua_state, 41.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("toonlink_appeal_sword"), Hash40::new("top"), 0, 7.5, 2, 0, -20, 20, 1, 1, 2, 0, 10, 30, 10, true);
    }
    frame(lua_state, 69.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("toonlink_appeal_sweat_b"), Hash40::new("head"), 2.5, 1, 0, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_appeallwr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("vc_toonlink_004"));
        PLAY_SE(agent, Hash40::new("se_toonlink_appeal_swing_s"));
    }
    wait(lua_state, 10.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_toonlink_appeal_swing_s"));
    }
    wait(lua_state, 9.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_toonlink_appeal_swing_m"));
    }
    wait(lua_state, 7.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_toonlink_appeal_swing_m"));
    }
    wait(lua_state, 10.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_toonlink_appeal_swing_m"));
    }
    wait(lua_state, 8.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_toonlink_appeal_swing_s"));
    }
    frame(lua_state, 64.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_toonlink_005"));
    }
}

unsafe extern "C" fn expression_appeallwr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 8, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 7, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 6, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 33.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 6, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 41.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}