unsafe extern "C" fn game_finalattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WorkModule::set_int64(boma, hash40("final_attack") as i64, *FIGHTER_ELIGHT_INSTANCE_WORK_ID_INT_ESWORD_INHERIT_OPEN_MOTION_KIND);
    }
    frame(lua_state, 1.0);
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            PostureModule::scale(boma, 1, 0);
            0x3de840(-1268740023, 2.9);
            CAM_ZOOM_IN_arg5(0, -0.3);
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 1, 0);
            0x3de840(-1268740023, 2.9);
            CAM_ZOOM_IN_arg5(0, 0.3);
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
        }
    }
}
frame(lua_state, 2.0);
if is_excute(agent) {
    ArticleModule::generate_article(boma, *FIGHTER_EFLAME_GENERATE_ARTICLE_BLAZEPILLAR, false, -1);
    WorkModule::on_flag(boma, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
}
frame(lua_state, 6.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RESET);
}
frame(lua_state, 12.0);
if is_excute(agent) {
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 0, 0, 35, 0);
}
frame(lua_state, 144.0);
if is_excute(agent) {
    ArticleModule::set_flag(boma, *FIGHTER_EFLAME_GENERATE_ARTICLE_DIVER, true, *WEAPON_ELEMENT_DIVER_INSTANCE_WORK_ID_FLAG_FINAL_ATTACK_DETACH);
}
}

unsafe extern "C" fn effect_finalattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_eflame_final2"), false, false, false);
    }
    frame(lua_state, 5.0);
    frame(lua_state, 8.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("eflame_final_sword_arc"), Hash40::new("sword1"), 0, 0, 0, 0, 90, 0, 1, false);
    }
    frame(lua_state, 36.0);
    frame(lua_state, 92.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("eflame_final_aura"), false, true);
        EFFECT_OFF_KIND(agent, Hash40::new("eflame_final_sword_fire"), false, true);
        EFFECT_OFF_KIND(agent, Hash40::new("eflame_final_sword_beam"), false, true);
        EFFECT_OFF_KIND(agent, Hash40::new("eflame_final_sword_body"), false, true);
        EFFECT_FOLLOW(agent, Hash40::new("eflame_sword_close"), Hash40::new("sword1"), 0, 0, 0, 0, 90, 0, 1, true);
    }
}

unsafe extern "C" fn sound_finalattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_eflame_final03"));
    }
    frame(lua_state, 120.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_eflame_final04"));
    }
}

unsafe extern "C" fn expression_finalattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 128.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitll"), 6, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 143.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 7, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}