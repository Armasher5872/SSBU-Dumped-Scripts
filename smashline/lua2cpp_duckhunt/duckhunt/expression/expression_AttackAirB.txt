#[acmd_script( agent = "duckhunt", script = "expression_attackairb", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_attackairb(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("top"), *ATTACK_DIRECTION_Z_MINUS, *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_X);
        AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 5.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 7.0);
    if macros::is_excute(fighter) {
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
    }
    frame(fighter.lua_state_agent, 19.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
}