#[acmd_script( agent = "inkling", script = "expression_attack100end", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_attack100end(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 6.0);
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_INK_SUCCESS);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if macros::is_excute(fighter) {
            macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 0);
            methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohit_attacks"), 0, false);
            ControlModule::set_rumble(fighter.module_accessor);
        }
        else{
        if macros::is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
            ControlModule::set_rumble(fighter.module_accessor);
        }
    }
}
frame(fighter.lua_state_agent, 47.0);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_BOY);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT(fighter);
    }
}
}