methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_FOLLOW(0x13b5725ec2, hash40("bust"), -3, -3.5, 4.2, 0, 0, 0, 1, true)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	EFFECT_FOLLOW(0x13b5725ec2, hash40("bust"), -3, -3.5, -4.2, 0, 0, 0, 1, true)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
get_value_float(SO_VAR_FLOAT_LR)
0x1483f0(84648550082, 0)
0x1483f0()
0x1483f0()
if(0x1483f0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1483f0()){
		EFFECT_FOLLOW(0x12c419ddce, hash40("top"), 0, -3, 0, 0, -90, 0, 1.5, true)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1483f0()){
			EFFECT_FOLLOW(0x12c419ddce, hash40("top"), 0, -3, 0, 0, 90, 0, 1.5, true)
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
			0x1483f0()
		}
	}
}
