#[acmd_script( agent = "captain", script = "expression_specialsstart" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_specialsstart(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(fighter.lua_state_agent, 5.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 14.0);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 7);
	}
	frame(fighter.lua_state_agent, 17.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_rush"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 21.0);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3, true);
	}
	frame(fighter.lua_state_agent, 34.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_landl"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 41.0);
	if macros::is_excute(fighter) {
		macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	}
	frame(fighter.lua_state_agent, 44.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_lands"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 67.0);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 10);
	}
