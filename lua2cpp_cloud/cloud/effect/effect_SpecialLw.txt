frame(Frame=3)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT(0x179a789ecc, hash40("top"), 6, 24, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=11)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT_FOLLOW(0x19118ada3a, hash40("top"), 0, 2, 0, 0, 0, 0, 1, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=12)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	LANDING_EFFECT(hash40("sys_v_smoke_a"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=13)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT_FOLLOW_WORK(FIGHTER_CLOUD_INSTANCE_WORK_ID_INT_EFFECT_KIND_SWORD_FLARE_LB, hash40("haver"), 0, 0, 0, 0, 0, 0, 1, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	LAST_EFFECT_SET_OFFSET_TO_CAMERA_FLAT(0.5)
	0x180150()
	AFTER_IMAGE4_ON_arg29(0x15815750b5, 0x10444db313, 7, hash40("haver"), 0, 1.5, -1.2, hash40("haver"), 0, 20.5, -1.2, true, hash40("null"), hash40("haver"), 0, 0, 0, 0, 0, 0, 1, 0, EFFECT_AXIS_X, 0, TRAIL_BLEND_ALPHA, 101, TRAIL_CULL_NONE, 1.4, 0.1)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=15)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT_FOLLOW(0x16226261d6, hash40("top"), 0, 11, 0, 0, 0, 0, 1, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	EFFECT_OFF_KIND(0x15e1a094a7, false, false)
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=16)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT(0x18889d4808, hash40("haver"), 0, 12, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	LAST_EFFECT_SET_RATE(0.8)
	0x180150()
	LANDING_EFFECT(hash40("sys_whirlwind_l"), hash40("top"), 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=19)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT(0x18889d4808, hash40("haver"), 0, 8, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	LAST_EFFECT_SET_RATE(0.8)
	0x180150()
}
frame(Frame=23)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AFTER_IMAGE_OFF(6)
	0x180150()
}
frame(Frame=24)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	LANDING_EFFECT(hash40("sys_whirlwind_l"), hash40("top"), 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=28)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	EFFECT_OFF_KIND_WORK(FIGHTER_CLOUD_INSTANCE_WORK_ID_INT_EFFECT_KIND_SWORD_FLARE_LB, false, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
