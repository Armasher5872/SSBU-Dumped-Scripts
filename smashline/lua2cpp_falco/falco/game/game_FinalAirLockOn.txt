if macros::is_excute(fighter) {
	macros::CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 15, 0, 0);
	camera(*MA_MSC_CMD_CAMERA_CAM_RECT, -5, -5, 20, -20);
}
macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING);
if(0x11d3a0(false, true)){;
	if macros::is_excute(fighter) {
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING);
	}
}
if macros::is_excute(fighter) {
	ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING);
	ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING);
	ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING);
	ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING);
	BattleObjectWorld__scale_z();
	methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(0, 1.0);
	ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_FALCO_GENERATE_ARTICLE_ARWING, false);
	macros::SLOW_OPPONENT(fighter, 4, 30);
}
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
if(0x11d3a0(false, false)){;
	frame(fighter.lua_state_agent, 5.0);
	if macros::is_excute(fighter) {
		SlowModule::set_whole(fighter.module_accessor, 2, 0);
		macros::FT_SET_FINAL_FEAR_FACE(fighter, 25);
	}
}
get_value_float(*SO_VAR_FLOAT_LR);
if(0x11d3a0(0, 0)){;
	if macros::is_excute(fighter) {
		REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finallockon02.nuanmb"), false, false);
	}
	else{;
	if macros::is_excute(fighter) {
		PostureModule::scale(fighter.module_accessor, 4, 0);
		0x11d3a0(149605315, 1.2);
		CAM_ZOOM_IN_arg5(0, 0);
	}
	else{;
	if macros::is_excute(fighter) {
		REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finallockon.nuanmb"), false, false);
	}
	if macros::is_excute(fighter) {
		macros::FT_START_CUTIN(fighter);
	}
}
}
}
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
SlowModule::clear_whole(fighter.module_accessor);
macros::CAM_ZOOM_OUT(fighter);
}
frame(fighter.lua_state_agent, 28.0);
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 3.0, 80, 100, 200, 0, 17.0, 0.0, 14.0, 20.0, Some(0.0), Some(14.0), Some(36.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
}
wait(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
macros::REMOVE_FINAL_SCREEN_EFFECT(fighter, 0);
}
frame(fighter.lua_state_agent, 34.0);
if macros::is_excute(fighter) {
macros::CAM_ZOOM_OUT(fighter);
camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
}
