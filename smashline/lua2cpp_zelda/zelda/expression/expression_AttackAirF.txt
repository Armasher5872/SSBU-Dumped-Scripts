#[acmd_script( agent = "zelda", script = "expression_attackairf" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackairf(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        WorkModule::set_int64(fighter.module_accessor, Hash40::new("rbkind_attackll"), FIGHTER_ZELDA_INSTANCE_WORK_ID_INT_RUMBLE_HIT_KIND_1);
        WorkModule::set_int64(fighter.module_accessor, Hash40::new("rbkind_attackm"), FIGHTER_ZELDA_INSTANCE_WORK_ID_INT_RUMBLE_HIT_KIND_2);
    }
    frame(fighter.lua_state_agent, 6.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
}