#[acmd_script( agent = "miiswordsman", script = "expression_attackairf", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attackairf(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("haver"), *ATTACK_DIRECTION_Y);
        AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 10.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 12.0);
    if macros::is_excute(fighter) {
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0);
    }
    frame(fighter.lua_state_agent, 16.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 21.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
        notify_event_msc_cmd(0x26769bd1de, 0, 30, 8);
    }
}