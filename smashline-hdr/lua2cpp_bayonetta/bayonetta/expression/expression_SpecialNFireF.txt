#[acmd_script( agent = "bayonetta", script = "expression_specialnfiref", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialnfiref(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 1, 210, 2, 0.01, -10, 10, 20, 20, 10);
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_NONE);
    }
    frame(lua_state, 2.0);
    WorkModule::is_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX);
    if(0x1cb400(false, true)){
        if is_excute(fighter) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
            QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
        }
        else{
        if is_excute(fighter) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_63_bullet"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
}
frame(lua_state, 6.0);
WorkModule::is_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX);
if(0x1cb400(false, true)){
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
    }
    else{
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_63_bullet"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}
}
frame(lua_state, 17.0);
WorkModule::is_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX);
if(0x1cb400(false, true)){
if is_excute(fighter) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
else{
if is_excute(fighter) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_63_bullet"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
}
}
frame(lua_state, 21.0);
WorkModule::is_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX);
if(0x1cb400(false, true)){
if is_excute(fighter) {
ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
else{
if is_excute(fighter) {
ControlModule::set_rumble(boma, Hash40::new("rbkind_63_bullet"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
}
}
}