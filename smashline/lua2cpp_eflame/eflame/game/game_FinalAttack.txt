#[acmd_script( agent = "eflame", script = "game_finalattack", category = ACMD_GAME, low_priority )]
unsafe fn game_finalattack(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        WorkModule::set_int64(fighter.module_accessor, hash40("final_attack") as i64, *FIGHTER_ELIGHT_INSTANCE_WORK_ID_INT_ESWORD_INHERIT_OPEN_MOTION_KIND);
    }
    frame(fighter.lua_state_agent, 1.0);
    if get_value_float(fighter, *SO_VAR_FLOAT_LR) < 0.0 {
        if macros::is_excute(fighter) {
            PostureModule::scale(fighter.module_accessor, 1, 0);
            0x3de840(-1268740023, 2.9);
            CAM_ZOOM_IN_arg5(0, -0.3);
            camera!(fighter, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
        }
        else{
        if macros::is_excute(fighter) {
            PostureModule::scale(fighter.module_accessor, 1, 0);
            0x3de840(-1268740023, 2.9);
            CAM_ZOOM_IN_arg5(0, 0.3);
            camera!(fighter, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
        }
    }
}
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
    ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_EFLAME_GENERATE_ARTICLE_BLAZEPILLAR, false, -1);
    WorkModule::on_flag(fighter.module_accessor, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
}
frame(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
    macros::CAM_ZOOM_OUT(fighter);
    camera!(fighter, *MA_MSC_CMD_CAMERA_CAM_RESET);
}
frame(fighter.lua_state_agent, 12.0);
if macros::is_excute(fighter) {
    camera!(fighter, *MA_MSC_CMD_CAMERA_CAM_RECT, 0, 0, 35, 0);
}
frame(fighter.lua_state_agent, 144.0);
if macros::is_excute(fighter) {
    ArticleModule::set_flag(fighter.module_accessor, *FIGHTER_EFLAME_GENERATE_ARTICLE_DIVER, true, *WEAPON_ELEMENT_DIVER_INSTANCE_WORK_ID_FLAG_FINAL_ATTACK_DETACH);
}
}