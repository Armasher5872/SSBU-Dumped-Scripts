#[acmd_script( agent = "falco", script = "effect_speciallw", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_speciallw(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        EFFECT_FLW_POS(agent, Hash40::new("falco_ref_loop"), Hash40::new("reflector"), 1.4, -0.6, 0, 0, 0, 0, 1, true);
        EffectModule::preset_limit_num(boma, 2);
        EFFECT_FOLLOW(agent, Hash40::new("falco_ref_flash"), Hash40::new("reflector"), 1.4, -0.6, 0, 0, 0, 0, 1, true);
        FLASH(agent, 1, 1, 1, 0.627);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        FLASH(agent, 0, 1, 1, 0.431);
        FLASH_FRM(agent, 20, 0, 0.706, 0.392, 0);
    }
    frame(lua_state, 4.0);
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("falco_ref_start"), Hash40::new("reflector"), 1.4, -0.6, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        COL_NORMAL(agent);
    }
    frame(lua_state, 32.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("falco_ref_loop"), false, false);
        EFFECT_OFF_KIND(agent, Hash40::new("falco_ref_ref"), false, false);
        EFFECT_OFF_KIND(agent, Hash40::new("falco_ref_flash"), true, false);
        EFFECT_FLW_POS(agent, Hash40::new("sys_flash"), Hash40::new("reflector"), 1.4, -0.6, -0.5, 0, 0, 0, 0.5, true);
    }
}