methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, ID=0, Damage=9.0, Angle=140, KBG=88, FKB=0, BKB=35, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=3.0, Angle=361, KBG=100, FKB=0, BKB=40, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
IS_EXIST_ARTICLE(FIGHTER_PEACH_GENERATE_ARTICLE_KINOPIO)
0xe4440(false, true)
0xe4440()
0xe4440()
if(0xe4440()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe4440()){
		methodlib::L2CValue::as_hash()const(FIGHTER_PEACH_GENERATE_ARTICLE_KINOPIO, hash40("throw_b"))
		ArticleModule::change_motion()
		0xe4440()
		0xe4440()
	}
}
frame(Frame=20)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.0, Angle=70, KBG=200, FKB=0, BKB=10, Size=6.2, X=0.0, Y=7.2, Z=-6.8, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_B, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_HIP)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	AttackModule::set_catch_only_all(true, false)
	0xe4440()
	0xe4440()
	CHECK_FINISH_CAMERA(-10, 5)
	0xe4440()
	0xe4440()
}
frame(Frame=22)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	ATK_HIT_ABS(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, hash40("throw"), FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT, FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP, FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	AttackModule::clear_all()
}
frame(Frame=38)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	ArticleModule::remove_exist(FIGHTER_PEACH_GENERATE_ARTICLE_KINOPIO)
	0xe4440()
}
frame(Frame=45)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	REVERSE_LR()
}
