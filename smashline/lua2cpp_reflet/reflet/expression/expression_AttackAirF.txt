#[acmd_script( agent = "reflet", script = "expression_attackairf" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackairf(fighter: &mut L2CAgentBase) {
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("sword"), *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_X);
        AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 10.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 12.0);
    execute(12);
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
        if macros::is_excute(fighter) {
            macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashl"), 0);
        }
        else{;
        if macros::is_excute(fighter) {
            macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 0);
        }
    }
}
}