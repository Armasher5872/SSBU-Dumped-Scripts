unsafe extern "C" fn game_specialsfend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if(0x2508e0(*FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_INT_STRENGTH, *FIGHTER_DOLLY_STRENGTH_W)){
        if is_excute(agent) {
            MotionModule::set_rate(boma, 1.2);
        }
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        MotionModule::set_rate(boma, 1);
    }
}

unsafe extern "C" fn effect_specialsfend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("dolly_drive_tail"), false, true);
    }
    frame(lua_state, 3.0);
    if(0x2508e0(*FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_INT_STRENGTH, *FIGHTER_DOLLY_STRENGTH_W)){
        if is_excute(agent) {
            LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 2, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, false);
            LAST_EFFECT_SET_RATE(agent, 1.3);
        }
        else{
        if is_excute(agent) {
            LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 2, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false);
            LAST_EFFECT_SET_RATE(agent, 1.3);
        }
    }
}
}

unsafe extern "C" fn sound_specialsfend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        STOP_SE(agent, Hash40::new("se_dolly_special_sf02_s"));
        STOP_SE(agent, Hash40::new("se_dolly_special_sf03_s"));
        STOP_SE(agent, Hash40::new("se_dolly_special_sf02_l"));
        STOP_SE(agent, Hash40::new("se_dolly_special_sf03_l"));
        STOP_SE(agent, Hash40::new("se_dolly_special_sf03_command_s"));
        STOP_SE(agent, Hash40::new("se_dolly_special_sf03_command_l"));
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_dolly_special_sf04"));
    }
}

unsafe extern "C" fn expression_specialsfend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_landl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}