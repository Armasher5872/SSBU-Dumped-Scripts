PostureModule::scale(fighter.module_accessor);
if(0x154f30(-1599779927, 1.4)){;
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 3.0, 361, 100, 0, 70, 12.0, 0.0, 6.0, 0.0, Some(0.0), Some(6.0), Some(9.0), 3.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
}else{;
PostureModule::scale(fighter.module_accessor);
if(0x154f30(-1599779927, 0.5)){;
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 3.0, 361, 100, 0, 70, 12.0, 0.0, 6.0, -10.0, Some(0.0), Some(6.0), Some(15.0), 3.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
}else{;
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 2.0, 361, 100, 0, 70, 12.0, 0.0, 6.0, 0.0, Some(0.0), Some(6.0), Some(9.0), 3.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
}}}}}if macros::is_excute(fighter) {
AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
}wait(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
PostureModule::scale(fighter.module_accessor, 10, 0);
0x154f30(-1599779927, 1.8);
CAM_ZOOM_IN_arg5(0, 0);
camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 5);
}