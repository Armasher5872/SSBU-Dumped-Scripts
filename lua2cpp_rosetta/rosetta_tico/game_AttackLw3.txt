methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11dd00()){
	SEARCH(WEAPON_ROSETTA_TICO_SEARCH_KIND_FREE_ATTACK_LR, 0, hash40("top"), 7.0, 0.0, 6.0, 3.0, 0.0, 6.0, -3.0, COLLISION_KIND_MASK_HIT, HIT_STATUS_MASK_NORMAL, 60, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false)
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
}
wait(Frames=1)
0x11dd00()
0x11dd00()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11dd00()){
	search(MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR_ALL)
	0x11dd00()
	0x11dd00()
}
0x11dd00(0)
frame(Frame=7)
0x11dd00()
0x11dd00()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11dd00()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.5, Angle=30, KBG=120, FKB=0, BKB=35, Size=4.5, X=0.0, Y=3.0, Z=4.0, X2=0.0, Y2=3.0, Z2=8.5, Hitlag=1.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_HEAD)
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	0x11dd00()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0x11dd00()
	0x11dd00()
}
wait(Frames=6)
0x11dd00()
0x11dd00()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11dd00()){
	AttackModule::clear_all()
}
