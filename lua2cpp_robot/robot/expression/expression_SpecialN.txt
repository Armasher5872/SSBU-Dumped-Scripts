methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_TPART)
	0x104a50()
	0x104a50()
	0x104a50()
}
frame(Frame=23)
0x104a50()
0x104a50()
WorkModule::get_float(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLOAT_BEAM_ENERGY_VALUE)
WorkModule::get_param_float(1400315939, hash40("param_special_n"), hash40("strong_shoot_energy"))
0x104a50(1422936)
0x104a50()
0x104a50()
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_beaml"), 0, false)
		ControlModule::set_rumble()
	}
	else{
		WorkModule::get_float(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLOAT_BEAM_ENERGY_VALUE)
		WorkModule::get_param_float(1400315939, hash40("param_special_n"), hash40("miss_shoot_energy"))
		0x104a50(304)
		0x104a50()
		0x104a50()
		0x104a50()
		0x104a50()
		if(0x104a50()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				methodlib::L2CValue::as_hash()const(hash40("rbkind_beams"), 0, false)
				ControlModule::set_rumble()
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x104a50()){
					methodlib::L2CValue::as_hash()const(hash40("rbkind_blank"), 0, false)
					ControlModule::set_rumble()
					0x104a50()
					0x104a50()
					0x104a50()
				}
			}
		}
	}
}
frame(Frame=25)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x104a50()
	RUMBLE_HIT(hash40("rbkind_explosion"), 0)
	0x104a50()
	0x104a50()
}
