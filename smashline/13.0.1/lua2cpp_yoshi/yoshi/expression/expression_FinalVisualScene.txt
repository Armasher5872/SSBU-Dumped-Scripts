frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase_sp"), 0, false);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase_sp"), 0);
}frame(fighter.lua_state_agent, 20.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_down"), 0, true);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_down"), 0);
}frame(fighter.lua_state_agent, 30.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_31_cypher"), 0, true);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_31_cypher"), 0);
}frame(fighter.lua_state_agent, 85.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase"), 0);
}frame(fighter.lua_state_agent, 86.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_elecattack"), 0);
}frame(fighter.lua_state_agent, 139.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase"), 0);
}frame(fighter.lua_state_agent, 140.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_spinattack"), 0, true);
ControlModule::set_rumble(boma);
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_spinattack"), 0);
}frame(fighter.lua_state_agent, 172.0);
if macros::is_excute(fighter) {
RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_damage_visual"), 80);
}if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackl"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackl"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackl"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackl"), 9, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 10.0);
