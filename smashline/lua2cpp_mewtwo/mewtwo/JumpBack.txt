unsafe extern "C" fn effect_jumpback(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("sys_jump_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, false);
    }
}

unsafe extern "C" fn sound_jumpback(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 2.0);
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_STATUS_JUMP_FLAG_GIMMICK_SPRING_JUMP_FROM_RING);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_mewtwo_jump01"));
    }
}

unsafe extern "C" fn expression_jumpback(agent: &mut L2CAgentBase) {
    macros::IS_FIGHTER_STATUS_KIND(agent, *FIGHTER_STATUS_KIND_GIMMICK_SPRING_JUMP);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_bounce"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        else {
        macros::IS_FIGHTER_STATUS_KIND(agent, *FIGHTER_STATUS_KIND_WARPSTAR_JUMP);
        if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
            if macros::is_excute(agent) {
                ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_none"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
            }
            else {
            if macros::is_excute(agent) {
                ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_jump"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
            }
        }
    }
}
}
}