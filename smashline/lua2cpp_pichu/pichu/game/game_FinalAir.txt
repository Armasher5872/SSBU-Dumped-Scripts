#[acmd_script( agent = "pichu", script = "game_finalair" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalair(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        macros::WHOLE_HIT(fighter, *HIT_STATUS_XLU);
        macros::CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(fighter, 9, 45);
    }
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
        frame(fighter.lua_state_agent, 10.0);
        if macros::is_excute(fighter) {
            macros::FT_SET_FINAL_FEAR_FACE(fighter, 60);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            macros::FT_START_CUTIN(fighter);
            macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 70, 70, 30, 0, 5.5, 0.0, 0.0, 5.0, Some(0.0), Some(0.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.3, 40, 70, 30, 0, 5.5, 0.0, 10.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, false, -1, false);
            AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, false, -1, false);
        }
        else{;
        if macros::is_excute(fighter) {
            PostureModule::scale(fighter.module_accessor, 3, 0);
            0x103370(1867797157, 2.2);
            CAM_ZOOM_IN_arg5(0, 0);
            macros::FT_START_CUTIN(fighter);
            macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 70, 70, 30, 0, 5.5, 0.0, 0.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.3, 40, 70, 30, 0, 5.5, 0.0, 10.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, false, -1, false);
            AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, false, -1, false);
        }
    }
}
frame(fighter.lua_state_agent, 11.0);
if macros::is_excute(fighter) {
    macros::FT_ADD_DAMAGE(fighter, 0.45);
}
frame(fighter.lua_state_agent, 18.0);
if macros::is_excute(fighter) {
    macros::FT_ADD_DAMAGE(fighter, 0.45);
}
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
    macros::FT_ADD_DAMAGE(fighter, 0.45);
}
frame(fighter.lua_state_agent, 32.0);
if macros::is_excute(fighter) {
    macros::FT_ADD_DAMAGE(fighter, 0.45);
}
frame(fighter.lua_state_agent, 35.0);
if macros::is_excute(fighter) {
    macros::CAM_ZOOM_OUT(fighter);
}
frame(fighter.lua_state_agent, 39.0);
if macros::is_excute(fighter) {
    macros::FT_ADD_DAMAGE(fighter, 0.45);
}
frame(fighter.lua_state_agent, 42.0);
if macros::is_excute(fighter) {
    macros::FT_ADD_DAMAGE(fighter, 0.45);
    macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 1.0, 50, 100, 75, 0, 5.5, 0.0, 0.0, 5.0, Some(0.0), Some(0.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
    macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 1.0, 20, 100, 40, 0, 5.5, 0.0, 10.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
}
frame(fighter.lua_state_agent, 50.0);
if macros::is_excute(fighter) {
    AttackModule::clear_all(fighter.module_accessor);
}
}