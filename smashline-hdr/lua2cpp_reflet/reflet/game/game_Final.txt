unsafe extern "C" fn game_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_XLU);
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_THUNDER, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_SWORD, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
        WorkModule::off_flag(boma, *FIGHTER_REFLET_STATUS_FINAL_FLAG_REQUEST_LOOP_DAMAGE_MOTION);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 25.0);
    frame(lua_state, 37.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_GIGA_FIRE, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 41.0);
    frame(lua_state, 48.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_FIRE, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 53.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_THUNDER, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 57.0);
    frame(lua_state, 62.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 71.0);
    frame(lua_state, 87.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 90.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_GIGA_FIRE, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 96.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_FIRE, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 100.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_THUNDER, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 105.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 118.0);
    frame(lua_state, 130.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 136.0);
    frame(lua_state, 141.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_GIGA_FIRE, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 148.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_FIRE, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 154.0);
    frame(lua_state, 161.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_THUNDER, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 165.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 171.0);
    frame(lua_state, 187.0);
    frame(lua_state, 207.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.3, 90, 100, 50, 0, 23.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_ELEC, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
        WorkModule::on_flag(boma, *FIGHTER_REFLET_STATUS_FINAL_FLAG_ATTACK_END);
        WorkModule::on_flag(boma, *FIGHTER_REFLET_STATUS_FINAL_FLAG_REQUEST_LOOP_DAMAGE_MOTION);
        WorkModule::set_int64(boma, hash40("fall_damage") as i64, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_REQUEST_LOOP_DAMAGE_MOTION);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 220.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *FIGHTER_REFLET_MAGIC_KIND_GIGA_FIRE, *FIGHTER_REFLET_STATUS_FINAL_WORK_INT_ATTACK_MAGIC_KIND);
    }
    frame(lua_state, 262.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_REFLET_STATUS_FINAL_FLAG_TARGET_NOREAC_OFF);
    }
    frame(lua_state, 263.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 18.0, 268, 118, 0, 70, 25.0, 0.0, 8.0, 0.0, None, None, None, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_REFLET_FINAL_FIRE, *ATTACK_REGION_NONE);
        AttackModule::set_force_reaction(boma, 0, true, false);
        AttackModule::set_final_finish_cut_in(boma, 0, true, false, 90, false);
    }
    frame(lua_state, 264.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
        WorkModule::off_flag(boma, *FIGHTER_REFLET_STATUS_FINAL_FLAG_ATTACK_END);
    }
}