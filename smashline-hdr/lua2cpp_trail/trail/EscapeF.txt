unsafe extern "C" fn game_escapef(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 19.0);
    if is_excute(agent) {
        REVERSE_LR(agent);
    }
}

unsafe extern "C" fn effect_escapef(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("top"), 0, 4.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), 0, 0, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
}

unsafe extern "C" fn sound_escapef(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_escape"));
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_trail_step_right_s"));
    }
    frame(lua_state, 34.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_trail_step_left_m"));
    }
}

unsafe extern "C" fn expression_escapef(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 3.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_81_escapefb"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 21.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 6);
    }
    frame(lua_state, 28.0);
    if ItemModule::is_have_item(boma, 0) {
        if is_excute(agent) {
            FT_MOTION_INTP_WAIT_ITEM(agent, false, 0.02);
        }
    }
    frame(lua_state, 31.0);
    if is_excute(agent) {
        FT_MOTION_INTP_WAIT_ITEM(agent, false, 0.08);
    }
    frame(lua_state, 42.0);
    if is_excute(agent) {
        FT_MOTION_INTP_WAIT_ITEM(agent, false, 0);
    }
}