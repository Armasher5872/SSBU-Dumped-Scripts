frame(Frame=2)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING)
	0x142050()
}
frame(Frame=13)
0x142050()
0x142050()
WorkModule::is_flag(FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON)
0x142050(false, true)
0x142050()
0x142050()
if(0x142050()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x142050()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=11.0, Angle=270, KBG=100, FKB=0, BKB=20, Size=4.5, X=0.0, Y=-8.0, Z=-0.6, X2=0.0, Y2=-4.0, Z2=-0.6, Hitlag=1.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_A, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_SWORD)
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=11.0, Angle=70, KBG=100, FKB=0, BKB=20, Size=4.5, X=0.0, Y=-8.0, Z=-0.6, X2=0.0, Y2=-4.0, Z2=-0.6, Hitlag=1.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_G, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_SWORD)
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
	}
}
frame(Frame=16)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	ATTACK(ID=0, Part=0, Bone=hash40("sword"), Damage=12.0, Angle=40, KBG=80, FKB=0, BKB=55, Size=4.2, X=0.0, Y=6.5, Z=0.0, X2=0.0, Y2=-1.0, Z2=0.0, Hitlag=1.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_SWORD)
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	AttackModule::clear(ID=1)
	0x142050()
}
frame(Frame=18)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	ATTACK(ID=0, Part=0, Bone=hash40("sword"), Damage=8.0, Angle=65, KBG=80, FKB=0, BKB=45, Size=3.0, X=0.0, Y=8.0, Z=0.0, X2=0.0, Y2=2.0, Z2=0.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_SWORD)
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=25)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	AttackModule::clear_all()
}
frame(Frame=27)
0x142050()
0x142050()
0x142050(FIGHTER_REFLET_INSTANCE_WORK_ID_INT_THUNDER_SWORD_CURRENT_POINT, 0)
0x142050()
0x142050()
if(0x142050()){
	WorkModule::is_flag(FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON)
	0x142050(false, true)
	0x142050()
	0x142050()
	if(0x142050()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x142050()){
			VisibilityModule::set_int64(hash40("sword"), hash40("sword_normal"))
			0x142050()
			0x142050()
			WorkModule::off_flag(Flag=FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON)
			0x142050()
		}
	}
}
0x142050(0)
frame(Frame=33)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	battle_object()
	methodlib::L2CValue::L2CValue(void*)()
}
else{
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x142050()){
		ATTACK(ID=0, Part=0, Bone=hash40("sword"), Damage=7.2, Angle=361, KBG=80, FKB=0, BKB=55, Size=3.7, X=0.0, Y=6.5, Z=0.0, X2=0.0, Y2=-1.0, Z2=0.0, Hitlag=0.7, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
		0x142050()
	}
}
wait(Frames=3)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	ATTACK(ID=0, Part=0, Bone=hash40("sword"), Damage=6.0, Angle=361, KBG=80, FKB=0, BKB=45, Size=2.5, X=0.0, Y=6.5, Z=0.0, X2=0.0, Y2=-1.0, Z2=0.0, Hitlag=0.7, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=25)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	AttackModule::clear_all()
}
else{
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const(-1, 0)
	throwaway_sword()
	0x142050(2864, 3184)
	0x142050()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=48)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	WorkModule::off_flag(Flag=FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING)
	0x142050()
}
