if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
}
if macros::is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_egg"));
	macros::HIT_NODE(fighter, Hash40::new("hip"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("bust"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("snout"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("legr"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("legl"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("kneer"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("kneel"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("toer"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("toel"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("tail2"), *HIT_STATUS_OFF);
	macros::HIT_NODE(fighter, Hash40::new("rot"), *HIT_STATUS_NORMAL);
}
frame(0, 14);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_awaken"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
	ItemModule::set_have_item_visibility(fighter.module_accessor, true);
	ItemModule::set_attach_item_visibility(fighter.module_accessor, true);
}
