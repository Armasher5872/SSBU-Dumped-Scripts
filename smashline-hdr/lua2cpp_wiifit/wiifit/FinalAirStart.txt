unsafe extern "C" fn game_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 10, 75);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 60);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), false, false);
        }
        else {
        if is_excute(agent) {
            PostureModule::scale(boma, 3, 0);
            0x12ac70(1530964934, 1.8);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
        }
    }
}
frame(lua_state, 30.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 56.0);
if is_excute(agent) {
    AttackModule::clear_all(boma);
}
}

unsafe extern "C" fn effect_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_wiifit_final"), false, false, false);
    }
    frame(lua_state, 1.0);
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("wiifit_final_pose1"), Hash40::new("neck"), 0, 0, 0, 0, 0, 0, 1, true);
        LAST_EFFECT_SET_RATE(agent, 1);
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("wiifit_final_pose1"), false, true);
    }
}

unsafe extern "C" fn sound_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SEQUENCE(agent, Hash40::new("seq_wiifit_rnd_final"));
    }
}

unsafe extern "C" fn expression_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        START_INFO_FLASH_EYE(agent);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 51.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_impact"), 8, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}