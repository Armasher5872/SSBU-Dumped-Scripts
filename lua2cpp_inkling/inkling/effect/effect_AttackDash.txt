methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EFFECT_FOLLOW(0x14ab915845, hash40("head"), 2, 2, 0, 0, 0, 0, 1.2, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B)
0x13d360(-1305339890)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LAST_PARTICLE_SET_COLOR()
}
0x13d360(0)
0x13d360()
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EffectModule::enable_sync_init_pos_last()
}
frame(Frame=8)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EFFECT_FOLLOW(0x14ab915845, hash40("bust"), 0, 0, 0, 0, 0, 0, 1, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B)
0x13d360(-1305339890)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LAST_PARTICLE_SET_COLOR()
}
0x13d360(0)
0x13d360()
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EffectModule::enable_sync_init_pos_last()
	EFFECT_FOLLOW_NO_STOP(hash40("sys_attack_speedline"), hash40("top"), 0, 6.5, -5, 0, 0, 0, 0.9, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	LAST_PARTICLE_SET_COLOR(0.67, 1.11, 1)
	0x13d360()
	0x13d360()
	0x13d360()
	EFFECT_FOLLOW_RND(hash40("sys_attack_line_b"), hash40("top"), 0, 7, -6.5, 0, 0, 0, 0.85, 0, 0, 0, 0, 0, 0, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
frame(Frame=19)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EFFECT_OFF_KIND(0x1879f98da8, false, true)
	0x13d360()
	0x13d360()
	0x13d360()
}
frame(Frame=21)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("top"), 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
frame(Frame=24)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("top"), 4, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
