unsafe extern "C" fn game_finalair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 1, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 5, 30);
        VisibilityModule::set_int64(agent.module_accessor, hash40("weapon") as i64, hash40("weapon_normal") as i64);
    }
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 60);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            FT_START_CUTIN_arg1(true);
        }
        else {
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 4, 0);
            0x103920(1808763720, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN_arg1(true);
        }
        frame(agent.lua_state_agent, 25.0);
        if macros::is_excute(agent) {
            macros::CAM_ZOOM_OUT(agent);
        }
    }
}
frame(agent.lua_state_agent, 30.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 1, Hash40::new("top"), 0.0, 40, 100, 100, 0, 20.0, 0.0, 10.0, 0.0, None, None, None, 0.9, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(agent.lua_state_agent, 60.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RESET);
}
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if macros::is_excute(agent) {
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -50, 0, 0);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8);
    }
    else {
    if macros::is_excute(agent) {
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 50, 0, 0);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8);
    }
}
}
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 0.2, 367, 100, 45, 5, 6.5, 0.0, 10.0, 200.0, Some(0.0), Some(10.0), Some(200.0), 0.9, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 5, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 0.2, 10, 100, 45, 5, 6.5, 0.0, 10.0, 15.0, Some(0.0), Some(10.0), Some(200.0), 0.9, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 5, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
AttackModule::set_final_finish_cut_in(agent.module_accessor, 0, true, true, -1, false);
AttackModule::set_final_finish_cut_in(agent.module_accessor, 1, true, true, -1, false);
}
frame(agent.lua_state_agent, 230.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 231.0);
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 5.0, 361, 128, 0, 80, 9.0, 0.0, 10.0, 15.0, Some(0.0), Some(10.0), Some(200.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 5, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
AttackModule::set_force_reaction(agent.module_accessor, 0, true, false);
AttackModule::set_final_finish_cut_in(agent.module_accessor, 0, true, true, -1, false);
}
frame(agent.lua_state_agent, 240.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 317.0);
if macros::is_excute(agent) {
cancel(*MA_MSC_CMD_CANCEL_ENABLE_CANCEL);
}
}

unsafe extern "C" fn effect_finalair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_ptrainer_final"), false, false, false);
    }
    frame(agent.lua_state_agent, 60.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("finptrainer_solar_beam"), Hash40::new("top"), 0, 8.5, 11, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_finalair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 60.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_pfushigisou_final01"));
        macros::PLAY_STATUS(agent, Hash40::new("se_pfushigisou_final_lp"));
    }
    frame(agent.lua_state_agent, 245.0);
    if macros::is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
}

unsafe extern "C" fn expression_finalair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::START_INFO_FLASH_EYE(agent);
    }
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    frame(agent.lua_state_agent, 60.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosionm"), 14, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 75.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 95.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosionm"), 14, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 110.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 130.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosionm"), 14, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 145.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 167.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosionm"), 14, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 182.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 204.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosionm"), 8, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 213.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 24, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 238.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_elecattacks"), 26, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}