FT_MOTION_RATE(FSM=0.57)
0xfda50()
frame(Frame=7)
0xfda50()
0xfda50()
FT_MOTION_RATE(FSM=1)
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=9.0, Angle=96, KBG=113, FKB=0, BKB=46, Size=6.5, X=0.0, Y=17.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_magic"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_MAGIC, Type=ATTACK_REGION_PSI)
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=7.0, Angle=96, KBG=113, FKB=0, BKB=46, Size=4.0, X=0.0, Y=9.0, Z=1.5, X2=0.0, Y2=9.0, Z2=-1.5, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PSI)
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
}
frame(Frame=9)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	AttackModule::clear(ID=1)
	0xfda50()
}
frame(Frame=11)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	AttackModule::clear_all()
}
