unsafe extern "C" fn game_attackragedrivecatch(agent: &mut L2CAgentBase) {
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
        FighterSpecializer_Demon::set_devil(agent.module_accessor, true, 5);
        if macros::is_excute(agent) {
            macros::WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
        }
        is_vr_mode();
        if(0x3cfb70(false, false)){
            battle_object_module_accessor();
            methodlib::L2CValue::L2CValue(void*)();
        }
        else {
        methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
    }
    methodlib::L2CValue::as_pointer()const();
    is_one_on_one_including_thrown();
    if(0x3cfb70(false, true)){
        if macros::is_excute(agent) {
            battle_object_module_accessor();
            methodlib::L2CValue::L2CValue(void*)();
        }
        else {
        methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
    }
}
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_scale();
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_stage();
if WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA) {
    if WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_ENABLE_MOTION_CAMERA) {
        if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA) {
            if macros::is_excute(agent) {
                macros::REQ_MOTION_CAMERA(agent, Hash40::new("d03speciallwcatch.nuanmb)", false);
            }
        }
    }
}
if macros::is_excute(agent) {
    macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
}
frame(agent.lua_state_agent, 3.0);
FighterSpecializer_Demon::set_devil(agent.module_accessor, true, 3);
frame(agent.lua_state_agent, 30.0);
if macros::is_excute(agent) {
    WorkModule::set_int(agent.module_accessor, *HIT_STATUS_INVINCIBLE, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS);
    WorkModule::on_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE);
}
}
else {
FighterSpecializer_Demon::set_devil(agent.module_accessor, true, 5);
if macros::is_excute(agent) {
macros::WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
}
is_vr_mode();
if(0x3cfb70(false, false)){
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
}
else {
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
is_one_on_one_including_thrown();
if(0x3cfb70(false, true)){
if macros::is_excute(agent) {
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
}
else {
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
}
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_scale();
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_stage();
if WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA) {
if WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_ENABLE_MOTION_CAMERA) {
if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA) {
if macros::is_excute(agent) {
    macros::REQ_MOTION_CAMERA(agent, Hash40::new("d03speciallwcatch.nuanmb)", false);
}
}
}
}
if macros::is_excute(agent) {
macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
}
frame(agent.lua_state_agent, 3.0);
FighterSpecializer_Demon::set_devil(agent.module_accessor, true, 3);
frame(agent.lua_state_agent, 40.0);
if macros::is_excute(agent) {
WorkModule::set_int(agent.module_accessor, *HIT_STATUS_INVINCIBLE, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS);
WorkModule::on_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE);
}
}
}

unsafe extern "C" fn effect_attackragedrivecatch(agent: &mut L2CAgentBase) {
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
        if macros::is_excute(agent) {
            EffectModule::req_screen(agent.module_accessor, Hash40::new("demon_ragedrive_bg"), true, false, false);
            macros::EFFECT_OFF_KIND(agent, Hash40::new("demon_rage_aura"), false, false);
            macros::EFFECT_OFF_KIND(agent, Hash40::new("demon_rage_aura2"), false, false);
            WorkModule::on_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_DISABLE_EFFECT);
            macros::EFFECT(agent, Hash40::new("demon_hit_normal_m"), Hash40::new("handl"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
            macros::EFFECT(agent, Hash40::new("demon_hit_normal_shock_m"), Hash40::new("handl"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
            macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_ragedrive_start"), Hash40::new("hip"), 0, 0, 0, 0, 0, 0, 1, false);
            macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_devil_start"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
            macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_devil_start_aura"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
            macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_devil_start_elec"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
            macros::FLASH(agent, 0.25, 0.08, 0.6, 0.4);
            macros::FLASH_SET_DIRECTION(agent, -1, 0, 0);
            macros::BURN_COLOR(agent, 8, 3, 36, 0.4);
            ColorBlendModule::set_disable_camera_depth_influence(agent.module_accessor, true);
        }
        frame(agent.lua_state_agent, 1.0);
        if macros::is_excute(agent) {
            macros::FLASH_FRM(agent, 3, 0.45, 0.45, 2, 0.1);
            macros::BURN_COLOR_FRAME(agent, 4, 3.8, 12, 36, 0.6);
        }
        frame(agent.lua_state_agent, 3.0);
        if macros::is_excute(agent) {
            macros::LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), -1.5, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
        }
        frame(agent.lua_state_agent, 47.0);
        if macros::is_excute(agent) {
            macros::EFFECT_FOLLOW(agent, Hash40::new("demon_ragedrive_speedline"), Hash40::new("rot"), 0, -5, -3, 0, 180, 0, 0.5, true);
        }
    }
    else {
    if macros::is_excute(agent) {
        macros::EFFECT_OFF_KIND(agent, Hash40::new("demon_rage_aura"), false, false);
        macros::EFFECT_OFF_KIND(agent, Hash40::new("demon_rage_aura2"), false, false);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_DISABLE_EFFECT);
        macros::EFFECT_FOLLOW(agent, Hash40::new("sys_catch"), Hash40::new("handl"), 0, 0, 0, 0, 0, 0, 1, true);
        macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_ragedrive_start"), Hash40::new("hip"), 0, 0, 0, 0, 0, 0, 1, false);
        macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_devil_start"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
        macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_devil_start_aura"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
        macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("demon_devil_start_elec"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
        macros::FLASH(agent, 0.25, 0.08, 0.6, 0.4);
        macros::FLASH_SET_DIRECTION(agent, -1, 0, 0);
        macros::BURN_COLOR(agent, 8, 3, 36, 0.4);
        ColorBlendModule::set_disable_camera_depth_influence(agent.module_accessor, true);
    }
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::FLASH_FRM(agent, 3, 0.45, 0.45, 2, 0.1);
        macros::BURN_COLOR_FRAME(agent, 4, 3.8, 12, 36, 0.6);
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        macros::LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), -1.5, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
    }
    frame(agent.lua_state_agent, 47.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("demon_ragedrive_speedline"), Hash40::new("rot"), 0, -5, -3, 0, 180, 0, 0.5, true);
    }
}
}

unsafe extern "C" fn sound_attackragedrivecatch(agent: &mut L2CAgentBase) {
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
        frame(agent.lua_state_agent, 2.0);
        if FighterCutInManager::is_play_motion_camera(agent.module_accessor) {
            if macros::is_excute(agent) {
                macros::PLAY_SE(agent, Hash40::new("se_demon_commandsuccess"));
                macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive"));
            }
            else {
            if macros::is_excute(agent) {
                macros::PLAY_SE(agent, Hash40::new("se_demon_commandsuccess"));
                macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_mild"));
            }
        }
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_01"));
        macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_hit"));
        macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_up"));
    }
    frame(agent.lua_state_agent, 44.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_down"));
    }
    frame(agent.lua_state_agent, 46.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_02"));
    }
}
else {
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_mild"));
}
frame(agent.lua_state_agent, 2.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_01"));
}
frame(agent.lua_state_agent, 6.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_hit"));
    macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_up"));
}
frame(agent.lua_state_agent, 44.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_down"));
}
frame(agent.lua_state_agent, 46.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_ragedrive_02"));
}
}
}

unsafe extern "C" fn expression_attackragedrivecatch(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
        if macros::is_excute(agent) {
            slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
            ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_80_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        frame(agent.lua_state_agent, 13.0);
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_furafura"), 16, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
    else {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_80_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 13.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_furafura"), 16, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}
}