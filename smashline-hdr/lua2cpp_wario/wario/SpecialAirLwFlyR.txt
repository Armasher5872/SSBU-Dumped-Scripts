unsafe extern "C" fn game_specialairlwflyr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    FT_MOTION_RATE(agent, 1.5);
    frame(lua_state, 3.0);
    if is_excute(agent) {
        damage!(agent, *MA_MSC_DAMAGE_DAMAGE_NO_REACTION, *DAMAGE_NO_REACTION_MODE_ALWAYS, 0);
    }
    frame(lua_state, 7.0);
    FT_MOTION_RATE(agent, 1.0);
    frame(lua_state, 9.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 27.0, 35, 75, 0, 50, 11.0, 0.0, 0.0, 0.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_BOMB, *ATTACK_REGION_NONE);
        WorkModule::on_flag(boma, *FIGHTER_WARIO_STATUS_SPECIAL_LW_FLAG_JUMP);
        WorkModule::on_flag(boma, *FIGHTER_WARIO_STATUS_SPECIAL_LW_FLAG_CRITICAL_HIT);
    }
    frame(lua_state, 11.0);
    if is_excute(agent) {
        damage!(agent, *MA_MSC_DAMAGE_DAMAGE_NO_REACTION, *DAMAGE_NO_REACTION_MODE_NORMAL, 0);
        WorkModule::off_flag(boma, *FIGHTER_WARIO_STATUS_SPECIAL_LW_FLAG_CRITICAL_HIT);
        ATTACK(agent, 0, 0, Hash40::new("top"), 20.0, 80, 100, 0, 0, 7.0, 0.0, 9.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_BOMB, *ATTACK_REGION_NONE);
    }
    wait(lua_state, 16.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
}

unsafe extern "C" fn effect_specialairlwflyr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("wario_ppe_flash"), Hash40::new("hip"), 1, -3, 0, 0, -90, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("wario_ppe_fly_3"), Hash40::new("top"), 0, 0, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
        else {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("wario_ppe_fly_3"), Hash40::new("top"), 0, 0, 0, 0, -90, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
    }
}
frame(lua_state, 8.0);
if is_excute(agent) {
    EFFECT_FOLLOW(agent, Hash40::new("wario_ppe_fly_2"), Hash40::new("hip"), 1, -3, 0, 0, 0, 0, 1, true);
}
frame(lua_state, 10.0);
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("wario_ppe_fly"), Hash40::new("top"), 0, -4, 0, 0, 90, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    else {
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("wario_ppe_fly"), Hash40::new("top"), 0, -4, 0, 0, -90, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
}
}
if is_excute(agent) {
FLASH(agent, 1, 1, 1, 0.745);
}
frame(lua_state, 11.0);
if is_excute(agent) {
FLASH(agent, 1, 0.502, 0, 0.314);
}
frame(lua_state, 15.0);
if is_excute(agent) {
FLASH_FRM(agent, 25, 1, 0, 0, 0);
}
frame(lua_state, 40.0);
if is_excute(agent) {
COL_NORMAL(agent);
}
}

unsafe extern "C" fn sound_specialairlwflyr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 5.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_wario_special_l04"));
        SET_PLAY_INHIVIT(agent, Hash40::new("se_wario_special_l04"), 20);
    }
}

unsafe extern "C" fn expression_specialairlwflyr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 7.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_explosionl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        RUMBLE_HIT(agent, Hash40::new("rbkind_attack_critical"), 0);
    }
    frame(lua_state, 11.0);
    if is_excute(agent) {
        AREA_WIND_2ND_RAD(1, 1.8, 0.02, 1000, 1, 0, 4, 42);
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        AreaModule::erase_wind(boma, 1);
    }
}