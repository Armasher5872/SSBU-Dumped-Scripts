GET_VOICE_VARIATION()
0x43c10(0, 0)
0x43c10()
if(0x43c10()){
	GET_VOICE_REGION()
	0x43c10(0, VOICE_DEFAULT)
	0x43c10()
	if(0x43c10()){
		frame(Frame=55)
		0x43c10()
		0x43c10()
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x43c10()){
			PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
		}
		else{
			GET_VOICE_REGION()
			0x43c10(0, VOICE_US_EN)
			0x43c10()
			if(0x43c10()){
				frame(Frame=60)
				0x43c10()
				0x43c10()
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x43c10()){
					PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
				}
				else{
					GET_VOICE_REGION()
					0x43c10(0, VOICE_US_FR)
					0x43c10()
					if(0x43c10()){
						frame(Frame=60)
						0x43c10()
						0x43c10()
						methodlib::L2CValue::operatorbool()const(is_excute)
						if(0x43c10()){
							PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
						}
						else{
							GET_VOICE_REGION()
							0x43c10(0, VOICE_EU_EN)
							0x43c10()
							if(0x43c10()){
								frame(Frame=60)
								0x43c10()
								0x43c10()
								methodlib::L2CValue::operatorbool()const(is_excute)
								if(0x43c10()){
									PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
								}
								else{
									GET_VOICE_REGION()
									0x43c10(0, VOICE_EU_FR)
									0x43c10()
									if(0x43c10()){
										frame(Frame=60)
										0x43c10()
										0x43c10()
										methodlib::L2CValue::operatorbool()const(is_excute)
										if(0x43c10()){
											PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
										}
										else{
											GET_VOICE_REGION()
											0x43c10(0, VOICE_EU_IT)
											0x43c10()
											if(0x43c10()){
												frame(Frame=60)
												0x43c10()
												0x43c10()
												methodlib::L2CValue::operatorbool()const(is_excute)
												if(0x43c10()){
													PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
													0x43c10()
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
else{
	GET_VOICE_VARIATION(0)
	0x43c10(0, 1)
	0x43c10()
	if(0x43c10()){
		GET_VOICE_REGION()
		0x43c10(0, VOICE_DEFAULT)
		0x43c10()
		if(0x43c10()){
			frame(Frame=50)
			0x43c10()
			0x43c10()
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x43c10()){
				PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
			}
			else{
				GET_VOICE_REGION()
				0x43c10(0, VOICE_US_EN)
				0x43c10()
				if(0x43c10()){
					frame(Frame=50)
					0x43c10()
					0x43c10()
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x43c10()){
						PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
					}
					else{
						GET_VOICE_REGION()
						0x43c10(0, VOICE_US_FR)
						0x43c10()
						if(0x43c10()){
							frame(Frame=50)
							0x43c10()
							0x43c10()
							methodlib::L2CValue::operatorbool()const(is_excute)
							if(0x43c10()){
								PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
							}
							else{
								GET_VOICE_REGION()
								0x43c10(0, VOICE_EU_EN)
								0x43c10()
								if(0x43c10()){
									frame(Frame=50)
									0x43c10()
									0x43c10()
									methodlib::L2CValue::operatorbool()const(is_excute)
									if(0x43c10()){
										PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
									}
									else{
										GET_VOICE_REGION()
										0x43c10(0, VOICE_EU_FR)
										0x43c10()
										if(0x43c10()){
											frame(Frame=50)
											0x43c10()
											0x43c10()
											methodlib::L2CValue::operatorbool()const(is_excute)
											if(0x43c10()){
												PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
											}
											else{
												GET_VOICE_REGION()
												0x43c10(0, VOICE_EU_IT)
												0x43c10()
												if(0x43c10()){
													frame(Frame=50)
													0x43c10()
													0x43c10()
													methodlib::L2CValue::operatorbool()const(is_excute)
													if(0x43c10()){
														PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
														0x43c10()
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	else{
		GET_VOICE_VARIATION(0)
		0x43c10(0, 2)
		0x43c10()
		if(0x43c10()){
			GET_VOICE_REGION()
			0x43c10(0, VOICE_DEFAULT)
			0x43c10()
			if(0x43c10()){
				frame(Frame=55)
				0x43c10()
				0x43c10()
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x43c10()){
					PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
				}
				else{
					GET_VOICE_REGION()
					0x43c10(0, VOICE_US_EN)
					0x43c10()
					if(0x43c10()){
						frame(Frame=60)
						0x43c10()
						0x43c10()
						methodlib::L2CValue::operatorbool()const(is_excute)
						if(0x43c10()){
							PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
						}
						else{
							GET_VOICE_REGION()
							0x43c10(0, VOICE_US_FR)
							0x43c10()
							if(0x43c10()){
								frame(Frame=60)
								0x43c10()
								0x43c10()
								methodlib::L2CValue::operatorbool()const(is_excute)
								if(0x43c10()){
									PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
								}
								else{
									GET_VOICE_REGION()
									0x43c10(0, VOICE_EU_EN)
									0x43c10()
									if(0x43c10()){
										frame(Frame=60)
										0x43c10()
										0x43c10()
										methodlib::L2CValue::operatorbool()const(is_excute)
										if(0x43c10()){
											PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
										}
										else{
											GET_VOICE_REGION()
											0x43c10(0, VOICE_EU_FR)
											0x43c10()
											if(0x43c10()){
												frame(Frame=60)
												0x43c10()
												0x43c10()
												methodlib::L2CValue::operatorbool()const(is_excute)
												if(0x43c10()){
													PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
												}
												else{
													GET_VOICE_REGION()
													0x43c10(0, VOICE_EU_IT)
													0x43c10()
													if(0x43c10()){
														frame(Frame=60)
														0x43c10()
														0x43c10()
														methodlib::L2CValue::operatorbool()const(is_excute)
														if(0x43c10()){
															PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
															0x43c10()
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		else{
			GET_VOICE_VARIATION(0)
			0x43c10(0, 3)
			0x43c10()
			if(0x43c10()){
				GET_VOICE_REGION()
				0x43c10(0, VOICE_DEFAULT)
				0x43c10()
				if(0x43c10()){
					frame(Frame=50)
					0x43c10()
					0x43c10()
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x43c10()){
						PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
					}
					else{
						GET_VOICE_REGION()
						0x43c10(0, VOICE_US_EN)
						0x43c10()
						if(0x43c10()){
							frame(Frame=50)
							0x43c10()
							0x43c10()
							methodlib::L2CValue::operatorbool()const(is_excute)
							if(0x43c10()){
								PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
							}
							else{
								GET_VOICE_REGION()
								0x43c10(0, VOICE_US_FR)
								0x43c10()
								if(0x43c10()){
									frame(Frame=50)
									0x43c10()
									0x43c10()
									methodlib::L2CValue::operatorbool()const(is_excute)
									if(0x43c10()){
										PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
									}
									else{
										GET_VOICE_REGION()
										0x43c10(0, VOICE_EU_EN)
										0x43c10()
										if(0x43c10()){
											frame(Frame=50)
											0x43c10()
											0x43c10()
											methodlib::L2CValue::operatorbool()const(is_excute)
											if(0x43c10()){
												PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
											}
											else{
												GET_VOICE_REGION()
												0x43c10(0, VOICE_EU_FR)
												0x43c10()
												if(0x43c10()){
													frame(Frame=50)
													0x43c10()
													0x43c10()
													methodlib::L2CValue::operatorbool()const(is_excute)
													if(0x43c10()){
														PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
													}
													else{
														GET_VOICE_REGION()
														0x43c10(0, VOICE_EU_IT)
														0x43c10()
														if(0x43c10()){
															frame(Frame=50)
															0x43c10()
															0x43c10()
															methodlib::L2CValue::operatorbool()const(is_excute)
															if(0x43c10()){
																PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																0x43c10()
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			else{
				GET_VOICE_VARIATION(0)
				0x43c10(0, 4)
				0x43c10()
				if(0x43c10()){
					GET_VOICE_REGION()
					0x43c10(0, VOICE_DEFAULT)
					0x43c10()
					if(0x43c10()){
						frame(Frame=55)
						0x43c10()
						0x43c10()
						methodlib::L2CValue::operatorbool()const(is_excute)
						if(0x43c10()){
							PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
						}
						else{
							GET_VOICE_REGION()
							0x43c10(0, VOICE_US_EN)
							0x43c10()
							if(0x43c10()){
								frame(Frame=60)
								0x43c10()
								0x43c10()
								methodlib::L2CValue::operatorbool()const(is_excute)
								if(0x43c10()){
									PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
								}
								else{
									GET_VOICE_REGION()
									0x43c10(0, VOICE_US_FR)
									0x43c10()
									if(0x43c10()){
										frame(Frame=60)
										0x43c10()
										0x43c10()
										methodlib::L2CValue::operatorbool()const(is_excute)
										if(0x43c10()){
											PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
										}
										else{
											GET_VOICE_REGION()
											0x43c10(0, VOICE_EU_EN)
											0x43c10()
											if(0x43c10()){
												frame(Frame=60)
												0x43c10()
												0x43c10()
												methodlib::L2CValue::operatorbool()const(is_excute)
												if(0x43c10()){
													PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
												}
												else{
													GET_VOICE_REGION()
													0x43c10(0, VOICE_EU_FR)
													0x43c10()
													if(0x43c10()){
														frame(Frame=60)
														0x43c10()
														0x43c10()
														methodlib::L2CValue::operatorbool()const(is_excute)
														if(0x43c10()){
															PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
														}
														else{
															GET_VOICE_REGION()
															0x43c10(0, VOICE_EU_IT)
															0x43c10()
															if(0x43c10()){
																frame(Frame=60)
																0x43c10()
																0x43c10()
																methodlib::L2CValue::operatorbool()const(is_excute)
																if(0x43c10()){
																	PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																	0x43c10()
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				else{
					GET_VOICE_VARIATION(0)
					0x43c10(0, 5)
					0x43c10()
					if(0x43c10()){
						GET_VOICE_REGION()
						0x43c10(0, VOICE_DEFAULT)
						0x43c10()
						if(0x43c10()){
							frame(Frame=50)
							0x43c10()
							0x43c10()
							methodlib::L2CValue::operatorbool()const(is_excute)
							if(0x43c10()){
								PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
							}
							else{
								GET_VOICE_REGION()
								0x43c10(0, VOICE_US_EN)
								0x43c10()
								if(0x43c10()){
									frame(Frame=50)
									0x43c10()
									0x43c10()
									methodlib::L2CValue::operatorbool()const(is_excute)
									if(0x43c10()){
										PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
									}
									else{
										GET_VOICE_REGION()
										0x43c10(0, VOICE_US_FR)
										0x43c10()
										if(0x43c10()){
											frame(Frame=50)
											0x43c10()
											0x43c10()
											methodlib::L2CValue::operatorbool()const(is_excute)
											if(0x43c10()){
												PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
											}
											else{
												GET_VOICE_REGION()
												0x43c10(0, VOICE_EU_EN)
												0x43c10()
												if(0x43c10()){
													frame(Frame=50)
													0x43c10()
													0x43c10()
													methodlib::L2CValue::operatorbool()const(is_excute)
													if(0x43c10()){
														PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
													}
													else{
														GET_VOICE_REGION()
														0x43c10(0, VOICE_EU_FR)
														0x43c10()
														if(0x43c10()){
															frame(Frame=50)
															0x43c10()
															0x43c10()
															methodlib::L2CValue::operatorbool()const(is_excute)
															if(0x43c10()){
																PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
															}
															else{
																GET_VOICE_REGION()
																0x43c10(0, VOICE_EU_IT)
																0x43c10()
																if(0x43c10()){
																	frame(Frame=50)
																	0x43c10()
																	0x43c10()
																	methodlib::L2CValue::operatorbool()const(is_excute)
																	if(0x43c10()){
																		PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																		0x43c10()
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
					else{
						GET_VOICE_VARIATION(0)
						0x43c10(0, 6)
						0x43c10()
						if(0x43c10()){
							GET_VOICE_REGION()
							0x43c10(0, VOICE_DEFAULT)
							0x43c10()
							if(0x43c10()){
								frame(Frame=55)
								0x43c10()
								0x43c10()
								methodlib::L2CValue::operatorbool()const(is_excute)
								if(0x43c10()){
									PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
								}
								else{
									GET_VOICE_REGION()
									0x43c10(0, VOICE_US_EN)
									0x43c10()
									if(0x43c10()){
										frame(Frame=60)
										0x43c10()
										0x43c10()
										methodlib::L2CValue::operatorbool()const(is_excute)
										if(0x43c10()){
											PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
										}
										else{
											GET_VOICE_REGION()
											0x43c10(0, VOICE_US_FR)
											0x43c10()
											if(0x43c10()){
												frame(Frame=60)
												0x43c10()
												0x43c10()
												methodlib::L2CValue::operatorbool()const(is_excute)
												if(0x43c10()){
													PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
												}
												else{
													GET_VOICE_REGION()
													0x43c10(0, VOICE_EU_EN)
													0x43c10()
													if(0x43c10()){
														frame(Frame=60)
														0x43c10()
														0x43c10()
														methodlib::L2CValue::operatorbool()const(is_excute)
														if(0x43c10()){
															PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
														}
														else{
															GET_VOICE_REGION()
															0x43c10(0, VOICE_EU_FR)
															0x43c10()
															if(0x43c10()){
																frame(Frame=60)
																0x43c10()
																0x43c10()
																methodlib::L2CValue::operatorbool()const(is_excute)
																if(0x43c10()){
																	PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																}
																else{
																	GET_VOICE_REGION()
																	0x43c10(0, VOICE_EU_IT)
																	0x43c10()
																	if(0x43c10()){
																		frame(Frame=60)
																		0x43c10()
																		0x43c10()
																		methodlib::L2CValue::operatorbool()const(is_excute)
																		if(0x43c10()){
																			PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																			0x43c10()
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
						else{
							GET_VOICE_VARIATION(0)
							0x43c10(0, 7)
							0x43c10()
							if(0x43c10()){
								GET_VOICE_REGION()
								0x43c10(0, VOICE_DEFAULT)
								0x43c10()
								if(0x43c10()){
									frame(Frame=50)
									0x43c10()
									0x43c10()
									methodlib::L2CValue::operatorbool()const(is_excute)
									if(0x43c10()){
										PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
									}
									else{
										GET_VOICE_REGION()
										0x43c10(0, VOICE_US_EN)
										0x43c10()
										if(0x43c10()){
											frame(Frame=50)
											0x43c10()
											0x43c10()
											methodlib::L2CValue::operatorbool()const(is_excute)
											if(0x43c10()){
												PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
											}
											else{
												GET_VOICE_REGION()
												0x43c10(0, VOICE_US_FR)
												0x43c10()
												if(0x43c10()){
													frame(Frame=50)
													0x43c10()
													0x43c10()
													methodlib::L2CValue::operatorbool()const(is_excute)
													if(0x43c10()){
														PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
													}
													else{
														GET_VOICE_REGION()
														0x43c10(0, VOICE_EU_EN)
														0x43c10()
														if(0x43c10()){
															frame(Frame=50)
															0x43c10()
															0x43c10()
															methodlib::L2CValue::operatorbool()const(is_excute)
															if(0x43c10()){
																PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
															}
															else{
																GET_VOICE_REGION()
																0x43c10(0, VOICE_EU_FR)
																0x43c10()
																if(0x43c10()){
																	frame(Frame=50)
																	0x43c10()
																	0x43c10()
																	methodlib::L2CValue::operatorbool()const(is_excute)
																	if(0x43c10()){
																		PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																	}
																	else{
																		GET_VOICE_REGION()
																		0x43c10(0, VOICE_EU_IT)
																		0x43c10()
																		if(0x43c10()){
																			frame(Frame=50)
																			0x43c10()
																			0x43c10()
																			methodlib::L2CValue::operatorbool()const(is_excute)
																			if(0x43c10()){
																				PLAY_SE(hash40("vc_ptrainer_win_plizardon"))
																				0x43c10()
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								0x43c10(0)
							}
						}
					}
				}
			}
		}
	}
}
