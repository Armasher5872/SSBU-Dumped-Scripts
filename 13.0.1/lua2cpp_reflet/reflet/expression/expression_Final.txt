if(is_excute){
	ItemModule::set_have_item_visibility(false)
	WorkModule::on_flag(Flag=FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE)
}
frame(Frame=7)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_M)
}
frame(Frame=8)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 10, false)
	ControlModule::set_rumble()
}
frame(Frame=20)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 10, false)
	ControlModule::set_rumble()
}
frame(Frame=25)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=31)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 9, false)
	ControlModule::set_rumble()
}
frame(Frame=41)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=42)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 4, false)
	ControlModule::set_rumble()
}
frame(Frame=48)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_M)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 8, false)
	ControlModule::set_rumble()
}
frame(Frame=57)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=62)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 7, false)
	ControlModule::set_rumble()
}
frame(Frame=71)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 14, false)
	ControlModule::set_rumble()
}
frame(Frame=87)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_M)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 18, false)
	ControlModule::set_rumble()
}
frame(Frame=96)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=106)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 13, false)
	ControlModule::set_rumble()
}
frame(Frame=118)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=119)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 12, false)
	ControlModule::set_rumble()
}
frame(Frame=130)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_M)
}
frame(Frame=132)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 15, false)
	ControlModule::set_rumble()
}
frame(Frame=136)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=148)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 6, false)
	ControlModule::set_rumble()
}
frame(Frame=154)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=155)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashm"), 20, false)
	ControlModule::set_rumble()
}
frame(Frame=165)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
}
frame(Frame=171)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_M)
}
frame(Frame=176)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 10, false)
	ControlModule::set_rumble()
}
frame(Frame=187)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_S)
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashm"), 14, false)
	ControlModule::set_rumble()
}
frame(Frame=202)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 0, false)
	ControlModule::set_rumble()
}
frame(Frame=207)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_M)
}
frame(Frame=216)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
}
frame(Frame=220)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_smashhold1"), 0, true)
	ControlModule::set_rumble()
}
frame(Frame=260)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
}
frame(Frame=263)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_L)
	RUMBLE_HIT(hash40("rbkind_explosionl"), 0)
}
