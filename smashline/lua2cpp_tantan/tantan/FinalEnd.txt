unsafe extern "C" fn game_finalend(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::ATTACK_ABS(agent, *FIGHTER_TANTAN_ATTACK_ABSOLUTE_KIND_FINAL, 0, 15.0, 55, 110, 0, 78, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_ABS_SET);
        macros::CAM_ZOOM_OUT(agent);
    }
    frame(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
    }
    frame(agent.lua_state_agent, 120.0);
}

unsafe extern "C" fn effect_finalend(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::CANCEL_FILL_SCREEN(agent, 0, 1);
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_tantan_final_end"), false, false, false);
        macros::EFFECT_OFF_KIND(agent, Hash40::new("tantan_final_beam"), true, true);
        macros::EFFECT_OFF_KIND(agent, Hash40::new("tantan_final_knock"), true, true);
        macros::EFFECT_OFF_KIND(agent, Hash40::new("tantan_final_beam_hit"), true, true);
        macros::EFFECT_FLW_POS(agent, Hash40::new("tantan_final_after"), Hash40::new("handl"), 4, 0, 0, 0, 0, 0, 0.5, true);
    }
}

unsafe extern "C" fn expression_finalend(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 30.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 51.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohit_attacks"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}