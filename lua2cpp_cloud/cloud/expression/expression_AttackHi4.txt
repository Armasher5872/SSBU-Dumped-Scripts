methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x180150()
	0x180150()
	0x180150()
	ItemModule::set_have_item_visibility(false)
	0x180150()
}
frame(Frame=7)
0x180150()
0x180150()
execute(7)
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	methodlib::L2CValue::as_hash()const(hash40("haver"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x180150()
	0x180150()
	0x180150()
	ItemModule::set_have_item_visibility(false)
	0x180150()
}
frame(Frame=13)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=15)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	RUMBLE_HIT(hash40("rbkind_slashl"), 0)
	0x180150()
	0x180150()
}
