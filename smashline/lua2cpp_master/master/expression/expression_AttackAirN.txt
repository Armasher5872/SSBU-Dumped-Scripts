if macros::is_excute(fighter) {
	ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
}
frame(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 6, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 0);
}
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 5, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
wait(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 5, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
wait(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 5, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
wait(fighter.lua_state_agent, 7.0);
frame(fighter.lua_state_agent, 28.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
}
frame(fighter.lua_state_agent, 53.0);
if macros::is_excute(fighter) {
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_REQ_EFFECT_AURA);
}
