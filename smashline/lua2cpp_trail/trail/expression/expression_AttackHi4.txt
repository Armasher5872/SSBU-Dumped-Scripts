#[acmd_script( agent = "trail", script = "expression_attackhi4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackhi4(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(fighter.lua_state_agent, 7.0);
	execute(7);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
		macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_81_attacks2"), 0);
	}
	frame(fighter.lua_state_agent, 14.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 17.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_smash_hi_nohit"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
		macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_81_smash_hi"), 0);
	}
	frame(fighter.lua_state_agent, 50.0);
	ItemModule::is_have_item(fighter.module_accessor, 0);
	if(0x4ae890(false, true)){;
		if macros::is_excute(fighter) {
			macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.05);
		}
	}
	frame(fighter.lua_state_agent, 57.0);
	if macros::is_excute(fighter) {
		macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.08);
	}
	frame(fighter.lua_state_agent, 64.0);
	if macros::is_excute(fighter) {
		macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
	}
