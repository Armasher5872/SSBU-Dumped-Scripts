unsafe extern "C" fn effect_appealhi2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("trail_stopga"), Hash40::new("top"), 1.3, 11.5, -0.3, 0, 0, 0, 1.03, true);
        }
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("trail_stopga_number"), Hash40::new("top"), 1.3, 11.5, -0.3, -5, -135, -3.5, 1, true);
    }
    else {
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("trail_stopga"), Hash40::new("top"), -1.3, 11.5, 0.3, 0, 0, 0, 1.03, true);
    }
}
frame(lua_state, 20.0);
if is_excute(agent) {
    EFFECT_FLW_POS(agent, Hash40::new("trail_stopga_number"), Hash40::new("top"), -1.3, 11.5, 0.3, -5, 135, 3.5, 1, true);
}
frame(lua_state, 23.0);
if is_excute(agent) {
    EFFECT_FOLLOW(agent, Hash40::new("trail_stopga_flash"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(lua_state, 24.0);
if is_excute(agent) {
    LANDING_EFFECT(agent, Hash40::new("sys_v_smoke_a"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.65, 0, 0, 0, 0, 0, 0, false);
}
}

unsafe extern "C" fn sound_appealhi2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_appeal_h03"));
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_trail_appeal_h01"));
    }
    frame(lua_state, 27.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_appeal_h03_02"));
    }
}

unsafe extern "C" fn expression_appealhi2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 24.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_81_appealhi3"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}