IS_EXIST_ARTICLE(WEAPON_ELIGHT_BUNSHIN_GENERATE_ARTICLE_ESWORD)
if(0x357740(false, true)){
	if(is_excute){
		methodlib::L2CValue::as_hash()const(WEAPON_ELIGHT_BUNSHIN_GENERATE_ARTICLE_ESWORD, WEAPON_ELIGHT_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, hash40("to_open"), 10, 10, false, false, 0, false, true, false)
		ArticleModule::add_motion_partial()
	}
}
frame(0, 4)
if(is_excute){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.5, Angle=0, KBG=100, FKB=35, BKB=20, Size=6.5, X=0.0, Y=12.0, Z=40.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.6, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=2.5, Angle=10, KBG=100, FKB=30, BKB=20, Size=5.0, X=0.0, Y=7.0, Z=21.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.6, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_A, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=2.5, Angle=0, KBG=100, FKB=35, BKB=20, Size=6.5, X=0.0, Y=12.0, Z=40.0, X2=0.0, Y2=9.0, Z2=21.0, Hitlag=0.6, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=2.5, Angle=170, KBG=100, FKB=10, BKB=20, Size=6.0, X=0.0, Y=12.0, Z=50.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.6, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_G, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	ATTACK(ID=4, Part=0, Bone=hash40("top"), Damage=2.5, Angle=220, KBG=100, FKB=10, BKB=20, Size=6.0, X=0.0, Y=12.0, Z=50.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.6, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_A, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	AttackModule::set_no_finish_camera(0, true, false)
	AttackModule::set_no_finish_camera(1, true, false)
	AttackModule::set_no_finish_camera(2, true, false)
	AttackModule::set_no_finish_camera(3, true, false)
	AttackModule::set_no_finish_camera(4, true, false)
}
frame(Frame=5)
if(is_excute){
	AttackModule::clear_all()
}
frame(Frame=9)
if(is_excute){
	VisibilityModule::set_whole(false)
}
