methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x11a050()
	0x11a050()
	0x11a050()
}
frame(Frame=2)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_R, 3)
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
}
frame(Frame=5)
0x11a050()
0x11a050()
execute(5)
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_R)
	0x11a050()
	0x11a050()
	0x11a050()
}
frame(Frame=8)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 2)
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
}
frame(Frame=15)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	methodlib::L2CValue::as_hash()const(0x0f8cc03dee, 0, false)
	ControlModule::set_rumble()
	0x11a050()
	0x11a050()
	0x11a050()
}
frame(Frame=16)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	VisibilityModule::set_int64(hash40("monster"), 0x0e77d3f33e)
	0x11a050()
	0x11a050()
	RUMBLE_HIT(hash40("rbkind_attackl"), 0)
	0x11a050()
	0x11a050()
}
frame(Frame=30)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	VisibilityModule::set_int64(hash40("monster"), hash40("monster_disp_off"))
	0x11a050()
	0x11a050()
}
