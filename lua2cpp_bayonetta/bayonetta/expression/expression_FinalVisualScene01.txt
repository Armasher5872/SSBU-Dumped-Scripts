methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	notify_event_msc_cmd(0x25fd66ecef, 0, 0, 1)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	VisibilityModule::set_int64(hash40("gun_hand"), 0x11f99798bf)
	0x1cb230()
	0x1cb230()
}
frame(Frame=1)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase_sp"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	RUMBLE_FINAL_TARGET(hash40("rbkind_erase_sp"), 0)
	0x1cb230()
	0x1cb230()
}
frame(Frame=16)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_impact"), 12, true)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	RUMBLE_FINAL_TARGET(hash40("rbkind_impact"), 12)
	0x1cb230()
	0x1cb230()
}
frame(Frame=20)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	notify_event_msc_cmd(0x25fd66ecef, 18, -1, 0)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=32)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_loopattack"), 0, true)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	RUMBLE_FINAL_TARGET(hash40("rbkind_loopattack"), 0)
	0x1cb230()
	0x1cb230()
}
frame(Frame=85)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	RUMBLE_FINAL_TARGET(hash40("rbkind_erase"), 0)
	0x1cb230()
	0x1cb230()
}
frame(Frame=105)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackl"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=135)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackl"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=161)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackl"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=192)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attack_critical"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=248)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_spinattack"), 30, true)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	RUMBLE_FINAL_TARGET(hash40("rbkind_spinattack"), 30)
	0x1cb230()
	0x1cb230()
}
