unsafe extern "C" fn game_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    FT_MOTION_RATE(agent, 1.1);
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 6, 60);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 60);
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstart.nuanmb"), false);
            FT_START_CUTIN(agent);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 4, 0);
            0x10acc0(1436709314, 2.2);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 6);
        }
    }
}
frame(lua_state, 27.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
}
}

unsafe extern "C" fn effect_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_ridley_final"), false, false, false);
    }
    frame(lua_state, 1.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("ridley_final_roar"), Hash40::new("virtualmouth"), 0, 0, 0, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("ridley_final_aura"), Hash40::new("top"), 0, 0, -3, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE_NO_3D(agent, Hash40::new("vc_ridley_final01"));
        PLAY_SE(agent, Hash40::new("se_ridley_final01"));
    }
}

unsafe extern "C" fn expression_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        START_INFO_FLASH_EYE(agent);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
}