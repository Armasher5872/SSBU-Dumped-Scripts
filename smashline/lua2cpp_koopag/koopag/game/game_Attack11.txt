frame(fighter.lua_state_agent, 1.0);
macros::FT_MOTION_RATE(fighter, 1);
frame(fighter.lua_state_agent, 5.0);
macros::FT_MOTION_RATE(fighter, 1);
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("handl"), 6.0, 80, 100, 70, 0, 10.0, 6.0, -0.1, 0.6, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
	macros::ATTACK(fighter, 1, 0, Hash40::new("arml"), 6.0, 80, 100, 70, 0, 10.0, 8.0, -0.7, -0.2, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
	macros::ATTACK(fighter, 2, 0, Hash40::new("shoulderl"), 6.0, 80, 100, 70, 0, 10.0, 4.0, 0.1, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
}
frame(fighter.lua_state_agent, 29.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
}
macros::FT_MOTION_RATE(fighter, 1);
frame(fighter.lua_state_agent, 36.0);
if macros::is_excute(fighter) {
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_ATTACK_FLAG_ENABLE_COMBO);
}
macros::FT_MOTION_RATE(fighter, 1);
