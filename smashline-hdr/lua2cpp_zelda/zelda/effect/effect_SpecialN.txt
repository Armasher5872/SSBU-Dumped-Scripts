#[acmd_script( agent = "zelda", script = "effect_specialn", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_specialn(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    frame(lua_state, 4.0);
    if is_excute(fighter) {
        EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_flash"), Hash40::new("havel"), 0, 0, 0, -0.0, 0.0, 0.0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
        EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_flash"), Hash40::new("haver"), 0, 0, 0, 0.0, 0.0, 0.0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
    }
    frame(lua_state, 5.0);
    if sv_animcmd::get_value_float(fighter, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(fighter) {
            EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), -3.5, 13, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
        else{
        if is_excute(fighter) {
            EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), 3.5, 13, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
    }
}
frame(lua_state, 8.0);
if get_value_float(fighter.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(fighter) {
        EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_l"), Hash40::new("top"), 0, 8, 0, 0, 0, 0, 1, true);
    }
    else{
    if is_excute(fighter) {
        EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_r"), Hash40::new("top"), 0, 8, 0, 0, 0, 0, 1, true);
    }
}
}
frame(lua_state, 9.0);
if is_excute(fighter) {
EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -5, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
}
frame(lua_state, 12.0);
if get_value_float(fighter.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
if is_excute(fighter) {
    LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_r"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
else{
if is_excute(fighter) {
    LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
}
}
for _ in 0..6 {
wait(lua_state, 2.0);
if is_excute(fighter) {
COL_NORMAL(fighter);
}
wait(lua_state, 2.0);
}
}