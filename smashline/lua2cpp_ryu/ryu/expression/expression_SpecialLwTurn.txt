#[acmd_script( agent = "ryu", script = "expression_speciallwturn" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_speciallwturn(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        AREA_WIND_2ND_arg10(0, 0.6, 70, 8, 0.4, 0, 12, 40, 12, 80);
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
    }
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_1)){;
        frame(fighter.lua_state_agent, 10.0);
        if macros::is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
            ControlModule::set_rumble(fighter.module_accessor);
        }
    }
    frame(fighter.lua_state_agent, 11.0);
    if macros::is_excute(fighter) {
        macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
    }
    else{;
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_2)){;
        frame(fighter.lua_state_agent, 10.0);
        if macros::is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
            ControlModule::set_rumble(fighter.module_accessor);
        }
        frame(fighter.lua_state_agent, 11.0);
        if macros::is_excute(fighter) {
            macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
            macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
        }
        else{;
        frame(fighter.lua_state_agent, 0.0);
        if macros::is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 0, false);
            ControlModule::set_rumble(fighter.module_accessor);
        }
        frame(fighter.lua_state_agent, 11.0);
        if macros::is_excute(fighter) {
            macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
            macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attack_critical"), 0);
        }
    }
}
}
frame(fighter.lua_state_agent, 42.0);
if macros::is_excute(fighter) {
AreaModule::erase_wind(fighter.module_accessor, 0);
}
frame(fighter.lua_state_agent, 54.0);
if macros::is_excute(fighter) {
ItemModule::set_have_item_visibility(fighter.module_accessor, true);
notify_event_msc_cmd(0x23c33f3bdc);
}
}