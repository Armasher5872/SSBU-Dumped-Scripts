wait_loop_sync_mot();
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_INK_SUCCESS);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_attack100_01"));
}}frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_attack100_01"));
}frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_attack100_01"));
}frame(fighter.lua_state_agent, 13.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_attack100_01"));
}else{;
frame(fighter.lua_state_agent, 0.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_airshot"));
}}frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_airshot"));
}frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
macros::PLAY_SE(fighter, Hash40::new("se_inkling_airshot"));
}frame(fighter.lua_state_agent, 13.0);
macros::PLAY_SE(fighter, Hash40::new("se_inkling_airshot"));
