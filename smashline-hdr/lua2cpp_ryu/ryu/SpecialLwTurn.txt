unsafe extern "C" fn game_speciallwturn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        REVERSE_LR(agent);
    }
    frame(lua_state, 11.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_FLAG_DISABLE_SUPER_ARMOR);
    }
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_1)){
        if is_excute(agent) {
            ATTACK(agent, 0, 0, Hash40::new("top"), 12.0, 60, 10, 0, 100, 3.5, 0.0, 10.5, -13.5, Some(0.0), Some(10.5), Some(-2.0), 2.0, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_F, false, 15, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_saving"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_RYU_KICK, *ATTACK_REGION_PUNCH);
            AttackModule::set_attack_level(boma, 0, *FIGHTER_RYU_SAVING_LV_1 as u8);
        }
        else{
        if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_2)){
            if is_excute(agent) {
                ATTACK(agent, 0, 0, Hash40::new("top"), 10.0, 60, 100, 0, 0, 4.3, 0.0, 10.5, -13.5, Some(0.0), Some(10.5), Some(-2.0), 2.5, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_F, false, 22, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_saving"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_RYU_KICK, *ATTACK_REGION_PUNCH);
                ATTACK(agent, 1, 0, Hash40::new("top"), 10.0, 60, 100, 0, 0, 4.3, 0.0, 10.5, -13.5, Some(0.0), Some(10.5), Some(-2.0), 2.5, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_F, false, 22, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_saving"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_RYU_KICK, *ATTACK_REGION_PUNCH);
                AttackModule::set_attack_level(boma, 0, *FIGHTER_RYU_SAVING_LV_2 as u8);
                AttackModule::set_attack_level(boma, 1, *FIGHTER_RYU_SAVING_LV_2 as u8);
                AttackModule::set_no_finish_camera(boma, 0, true, false);
                AttackModule::set_no_finish_camera(boma, 1, true, false);
            }
            else{
            if is_excute(agent) {
                ATTACK(agent, 0, 0, Hash40::new("top"), 17.0, 60, 100, 0, 0, 5.4, 0.0, 10.5, -13.5, Some(0.0), Some(10.5), Some(-2.0), 2.3, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_saving"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_RYU_KICK, *ATTACK_REGION_PUNCH);
                ATTACK(agent, 1, 0, Hash40::new("top"), 17.0, 60, 100, 0, 0, 5.4, 0.0, 10.5, -13.5, Some(0.0), Some(10.5), Some(-2.0), 2.3, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_saving"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_RYU_KICK, *ATTACK_REGION_PUNCH);
                AttackModule::set_attack_level(boma, 0, *FIGHTER_RYU_SAVING_LV_3 as u8);
                AttackModule::set_attack_level(boma, 1, *FIGHTER_RYU_SAVING_LV_3 as u8);
                AttackModule::set_no_finish_camera(boma, 0, true, false);
                AttackModule::set_no_finish_camera(boma, 1, true, false);
            }
        }
    }
}
}
frame(lua_state, 13.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
}
frame(lua_state, 15.0);
if is_excute(agent) {
WorkModule::on_flag(boma, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_FLAG_REVERSE_MATERIAL_ANIM);
}
}

unsafe extern "C" fn effect_speciallwturn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_1)){
        frame(lua_state, 8.0);
        if is_excute(agent) {
            FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), -2, 0, 5, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
        }
    }
    frame(lua_state, 9.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 1, 0, 5, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 3, 0, 5, 0, 0, 0, 0.85, 0, 0, 0, 0, 0, 0, false);
    }
    else{
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_2)){
        frame(lua_state, 8.0);
        if is_excute(agent) {
            FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), -2, 0, 5, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
        }
        frame(lua_state, 9.0);
        if is_excute(agent) {
            FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 1, 0, 5, 0, 0, 0, 0.85, 0, 0, 0, 0, 0, 0, false);
        }
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FOOT_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -3, 0, 5, 0, 0, 0, 0.85, 0, 0, 0, 0, 0, 0, false);
        }
        else{
        if is_excute(agent) {
            FLASH(agent, 1, 1, 0.392, 0.784);
        }
        wait(lua_state, 3.0);
        if is_excute(agent) {
            COL_NORMAL(agent);
        }
        wait(lua_state, 2.0);
        if is_excute(agent) {
            FLASH(agent, 1, 1, 1, 0.667);
        }
        wait(lua_state, 1.0);
        if is_excute(agent) {
            COL_NORMAL(agent);
        }
        wait(lua_state, 1.0);
        if is_excute(agent) {
            FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), -2, 0, 5, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
        }
        wait(lua_state, 1.0);
        if is_excute(agent) {
            FLASH(agent, 1, 1, 0.392, 0.588);
            FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 1, 0, 5, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
        }
        wait(lua_state, 1.0);
        if is_excute(agent) {
            FOOT_EFFECT(agent, Hash40::new("sys_sliding_smoke"), Hash40::new("top"), 3, 0, 5.5, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
        }
        wait(lua_state, 1.0);
        if is_excute(agent) {
            COL_NORMAL(agent);
            FOOT_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -8, 0, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
            LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
        frame(lua_state, 10.0);
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("ryu_savingattack_impact"), Hash40::new("top"), 14, 10.5, 3.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
    }
}
}
frame(lua_state, 10.0);
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
if is_excute(agent) {
    EFFECT(agent, Hash40::new("ryu_savingattack_line_l"), Hash40::new("top"), -4, 10.5, 2, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true);
}
else{
if is_excute(agent) {
    EFFECT(agent, Hash40::new("ryu_savingattack_line_r"), Hash40::new("top"), 4.9, 10.5, 2, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true);
}
}
}
}

unsafe extern "C" fn sound_speciallwturn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 6.0);
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_INT_STRENGTH, 0)){
        wait(lua_state, 2.0);
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_ryu_special_l02"));
            PLAY_SE(agent, Hash40::new("vc_ryu_special_l02"));
        }
        else{
        if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_INT_STRENGTH, 1)){
            if is_excute(agent) {
                PLAY_SE(agent, Hash40::new("se_ryu_special_l03"));
                PLAY_SE(agent, Hash40::new("vc_ryu_special_l03"));
            }
            else{
            if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_INT_STRENGTH, 2)){
                wait(lua_state, 2.0);
                if is_excute(agent) {
                    PLAY_SE(agent, Hash40::new("se_ryu_special_l04"));
                    PLAY_SE(agent, Hash40::new("vc_ryu_special_l04"));
                }
            }
        }
    }
}
}
}

unsafe extern "C" fn expression_speciallwturn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        AREA_WIND_2ND_arg10(agent, 0, 0.6, 70, 8, 0.4, 0, 12, 40, 12, 80);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_1)){
        frame(lua_state, 10.0);
        if is_excute(agent) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
    frame(lua_state, 11.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_S);
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 0);
    }
    else{
    if(0x183460(*FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_LW_INT_SAVING_LV, FIGHTER_RYU_SAVING_LV_2)){
        frame(lua_state, 10.0);
        if is_excute(agent) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        frame(lua_state, 11.0);
        if is_excute(agent) {
            QUAKE(agent, *CAMERA_QUAKE_KIND_M);
            RUMBLE_HIT(agent, Hash40::new("rbkind_attackl"), 0);
        }
        else{
        frame(lua_state, 0.0);
        if is_excute(agent) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        frame(lua_state, 11.0);
        if is_excute(agent) {
            QUAKE(agent, *CAMERA_QUAKE_KIND_L);
            RUMBLE_HIT(agent, Hash40::new("rbkind_attack_critical"), 0);
        }
    }
}
}
frame(lua_state, 42.0);
if is_excute(agent) {
AreaModule::erase_wind(boma, 0);
}
frame(lua_state, 54.0);
if is_excute(agent) {
ItemModule::set_have_item_visibility(boma, true, 0);
notify_event_msc_cmd!(agent, Hash40::new_raw(0x23c33f3bdc));
}
}