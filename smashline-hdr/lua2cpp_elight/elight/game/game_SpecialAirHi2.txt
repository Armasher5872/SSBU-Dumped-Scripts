#[acmd_script( agent = "elight", script = "game_specialairhi2", category = ACMD_GAME, low_priority )]
unsafe fn game_specialairhi2(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    frame(lua_state, 1.0);
    if is_excute(fighter) {
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x2127e37c07), *GROUND_CLIFF_CHECK_KIND_NONE);
    }
    IS_EXIST_ARTICLE(fighter, *FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD);
    if(0x357740(false, true)){
        if is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(*FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD, *WEAPON_ELIGHT_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, Hash40::new("to_open"), 5, 5, false, false, 0, false, true, false);
            ArticleModule::add_motion_partial(boma);
        }
    }
    MotionModule::is_changing(boma);
    if(0x357740(false, true)){
        if is_excute(fighter) {
            WorkModule::on_flag(boma, *FIGHTER_ELIGHT_INSTANCE_WORK_ID_FLAG_ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING);
        }
    }
    frame(lua_state, 12.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_ELIGHT_GENERATE_ARTICLE_SPREADBULLET);
    }
    frame(lua_state, 13.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_ELIGHT_GENERATE_ARTICLE_SPREADBULLET);
    }
    frame(lua_state, 14.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_ELIGHT_GENERATE_ARTICLE_SPREADBULLET);
    }
    frame(lua_state, 15.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_ELIGHT_GENERATE_ARTICLE_SPREADBULLET);
    }
    frame(lua_state, 16.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_ELIGHT_GENERATE_ARTICLE_SPREADBULLET);
    }
    frame(lua_state, 18.0);
    IS_EXIST_ARTICLE(fighter, *FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD);
    if(0x357740(false, true)){
        if is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(*FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD, *WEAPON_ELIGHT_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, Hash40::new("to_close"), 5, 5, false, false, 0, false, true, false);
            ArticleModule::add_motion_partial(boma);
        }
    }
    MotionModule::is_changing(boma);
    if(0x357740(false, true)){
        if is_excute(fighter) {
            WorkModule::on_flag(boma, *FIGHTER_ELIGHT_INSTANCE_WORK_ID_FLAG_ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING);
        }
    }
}