#[acmd_script( agent = "sonic", script = "effect_specialsdashlw", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_specialsdashlw(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if WorkModule::is_flag(boma, *FIGHTER_SONIC_STATUS_SPECIAL_S_DASH_FLAG_MAX_CHARGE) {
        if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if is_excute(agent) {
                EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("sonic_spinwind"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.8, true);
                LAST_EFFECT_SET_COLOR(agent, 1, 0.928, 0.65);
            }
            else{
            if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
                if is_excute(agent) {
                    EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("sonic_spinwind"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.8, true);
                    LAST_EFFECT_SET_COLOR(agent, 0.711, 0.931, 1);
                }
                if is_excute(agent) {
                    FLASH(agent, 1, 1, 1, 0.13);
                }
                wait(lua_state, 3.0);
                if is_excute(agent) {
                    COL_NORMAL(agent);
                }
                wait(lua_state, 4.0);
                if is_excute(agent) {
                    FLASH(agent, 1, 1, 0.275, 0.196);
                }
                wait(lua_state, 3.0);
                if is_excute(agent) {
                    COL_NORMAL(agent);
                }
                wait(lua_state, 2.0);
            }
            else{
            if is_excute(agent) {
                EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("sonic_spinwind"), Hash40::new("sphere"), 0, 0, 0, 0, -90, 0, 0.8, true);
                LAST_EFFECT_SET_COLOR(agent, 0.711, 0.931, 1);
            }
        }
    }
}
}
if is_excute(agent) {
EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("sonic_spintrace"), Hash40::new("top"), 0, 5, 0, 0, 0, 0, 1, true);
EffectModule::enable_sync_init_pos_last(boma);
}
}