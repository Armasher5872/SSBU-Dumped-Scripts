methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EFFECT(hash40("sys_smash_flash"), hash40("top"), 0, 12.5, -3.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
WorkModule::is_flag(FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_INK_SUCCESS)
0x13d360(false, true)
0x13d360()
0x13d360()
if(0x13d360()){
	frame(Frame=17)
	0x13d360()
	0x13d360()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x13d360()){
		LANDING_EFFECT(hash40("sys_v_smoke_a"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		EFFECT(0x16a544a923, hash40("top"), 0, 20, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
		0x13d360()
	}
}
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B)
0x13d360(-1305339890)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LAST_PARTICLE_SET_COLOR()
}
0x13d360(0)
0x13d360()
0x13d360()
frame(Frame=0)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LANDING_EFFECT(hash40("sys_v_smoke_a"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	EFFECT(0x17b8178bd6, hash40("top"), 0, 20, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B)
0x13d360(-1305339890)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LAST_PARTICLE_SET_COLOR()
}
0x13d360(0)
0x13d360()
0x13d360()
0x13d360()
