frame(Frame=9)
0x3a08f0()
0x3a08f0()
get_value_float(SO_VAR_FLOAT_LR)
0x3a08f0(0, 0)
0x3a08f0()
0x3a08f0()
if(0x3a08f0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3a08f0()){
		EFFECT_FOLLOW_ALPHA(0x1268a10460, hash40("top"), -1.5, 23.6, 1.5, -90, 0, 0, 1, true, 0.6)
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		LAST_EFFECT_SET_COLOR(3, 1.2, 0.5)
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		LAST_EFFECT_SET_RATE(1.2)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x3a08f0()){
			EFFECT_FOLLOW_ALPHA(0x1268a10460, hash40("top"), 1.5, 23.6, 1.5, -90, 0, 0, 1, true, 0.6)
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			LAST_EFFECT_SET_COLOR(3, 1.2, 0.5)
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			LAST_EFFECT_SET_RATE(1.2)
			0x3a08f0()
		}
	}
}
frame(Frame=10)
0x3a08f0()
0x3a08f0()
get_value_float(SO_VAR_FLOAT_LR)
0x3a08f0(0, 0)
0x3a08f0()
0x3a08f0()
if(0x3a08f0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3a08f0()){
		EFFECT_FOLLOW_ALPHA(hash40("sys_attack_speedline"), hash40("top"), -1, 14, 1, -90, 0, 0, 0.9, true, 0.8)
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		LAST_EFFECT_SET_RATE(1)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x3a08f0()){
			EFFECT_FOLLOW_ALPHA(hash40("sys_attack_speedline"), hash40("top"), 1, 14, 1, -90, 0, 0, 0.9, true, 0.8)
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			LAST_EFFECT_SET_RATE(1)
			0x3a08f0()
		}
	}
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), -1, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false)
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=12)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	EFFECT(hash40("sys_smash_flash_s"), hash40("throw"), 0, -2.5, -1.5, 0, 0, 0, 1.4, 2, 3, 3, 0, 0, 0, true)
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=15)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	EFFECT_OFF_KIND(hash40("sys_attack_speedline"), true, true)
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=34)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	LANDING_EFFECT(hash40("sys_landing_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, false)
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
