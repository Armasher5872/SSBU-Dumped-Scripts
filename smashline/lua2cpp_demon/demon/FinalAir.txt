unsafe extern "C" fn game_finalair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::WHOLE_HIT(agent, *HIT_STATUS_XLU);
    }
    frame(agent.lua_state_agent, 1.0);
    if WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_FINAL_FLAG_DEMON_DOJO_ZOOM) {
        if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if macros::is_excute(agent) {
                PostureModule::scale(agent.module_accessor, 1, 0);
                0x3cfb70(-1037516665, 2);
                CAM_ZOOM_IN_arg5(0, -0.1);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
            }
            else{
            if get_value_float(agent.lua_state_agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET) < 0.0 {
                if macros::is_excute(agent) {
                    PostureModule::scale(agent.module_accessor, 1, 0);
                    0x3cfb70(-1037516665, 2);
                    CAM_ZOOM_IN_arg5(0, -0.3);
                    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
                }
                else{
                if macros::is_excute(agent) {
                    PostureModule::scale(agent.module_accessor, 1, 0);
                    0x3cfb70(-1037516665, 2);
                    CAM_ZOOM_IN_arg5(0, 0.1);
                    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
                }
                else{
                if macros::is_excute(agent) {
                    PostureModule::scale(agent.module_accessor, 1, 0);
                    0x3cfb70(-1037516665, 2);
                    CAM_ZOOM_IN_arg5(0, 0.3);
                    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
                }
            }
        }
    }
}
}
}
frame(agent.lua_state_agent, 3.0);
if macros::is_excute(agent) {
WorkModule::on_flag(agent.module_accessor, *FIGHTER_DEMON_STATUS_FINAL_FLAG_END_FINAL);
}
frame(agent.lua_state_agent, 5.0);
if macros::is_excute(agent) {
macros::CAM_ZOOM_OUT(agent);
}
frame(agent.lua_state_agent, 15.0);
if macros::is_excute(agent) {
WorkModule::on_flag(agent.module_accessor, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
}
}

unsafe extern "C" fn effect_finalair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::CANCEL_FILL_SCREEN(agent, 1, 0);
        macros::CANCEL_FILL_SCREEN(agent, 0, 0);
    }
    if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if macros::is_excute(agent) {
            EffectModule::req_screen(agent.module_accessor, Hash40::new_raw(0x16229f767c), false, false, false);
        }
        else{
        if macros::is_excute(agent) {
            EffectModule::req_screen(agent.module_accessor, Hash40::new_raw(0x16d8904b1f), false, false, false);
        }
    }
}
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("demon_final_smoke"), true, true);
    macros::EFFECT_OFF_KIND(agent, Hash40::new("demon_final_sparks"), true, true);
    macros::EFFECT_FOLLOW(agent, Hash40::new("demon_final_wind"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 4.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x3cfb70(-1037516665, 0)){
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new_raw(0x16229f767c), false, false, false);
    }
    else{
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new_raw(0x16d8904b1f), false, false, false);
    }
}
}
}

unsafe extern "C" fn sound_finalair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_demon_final03"));
    }
    frame(agent.lua_state_agent, 110.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_demon_final04"));
        macros::STOP_SE(agent, Hash40::new("se_demon_final03"));
    }
}

unsafe extern "C" fn expression_finalair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        ItemModule::set_attach_item_visibility(agent.module_accessor, false);
    }
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_attach_item_visibility(agent.module_accessor, false);
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_80_spbeam2"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 5.0);
    for _ in 0..19 {
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    wait(agent.lua_state_agent, 5.0);
}
frame(agent.lua_state_agent, 110.0);
if macros::is_excute(agent) {
    macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
}
}