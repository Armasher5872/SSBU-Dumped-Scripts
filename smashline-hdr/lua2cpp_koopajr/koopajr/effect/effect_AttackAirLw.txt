#[acmd_script( agent = "koopajr", script = "effect_attackairlw", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_attackairlw(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 15.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("clownattachl2"), 5, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, true);
        LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(lua_state, 16.0);
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT_FOLLOW_RND(agent, Hash40::new("sys_spin_wind_s"), Hash40::new("clownattachl2"), 4.5, 0, 0, 0, 0, 90, 0.25, 3, 2, 2, 10, 360, 10, true);
            LAST_EFFECT_SET_RATE(agent, 1.5);
        }
    }
    for _ in 0..5 {
    wait(lua_state, 2.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_RND(agent, Hash40::new("sys_spin_wind"), Hash40::new("clownattachl2"), 3, 0, 0, 0, 0, 90, 0.35, 3, 2, 2, 10, 360, 10, true);
        LAST_EFFECT_SET_RATE(agent, 2);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_RND(agent, Hash40::new("sys_spin_wind"), Hash40::new("clownattachl2"), 1, 0, 0, 0, 0, 90, 0.5, 3, 2, 2, 10, 360, 10, true);
        LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    wait(lua_state, 2.0);
}
for _ in 0..5 {
if is_excute(agent) {
    EFFECT_FOLLOW_RND(agent, Hash40::new("sys_spin_wind_s"), Hash40::new("clownattachl2"), 4.5, 0, 0, 180, 0, 90, 0.25, 3, 1, 1, 10, 360, 10, true);
    LAST_EFFECT_SET_RATE(agent, 1.5);
}
wait(lua_state, 2.0);
if is_excute(agent) {
    EFFECT_FOLLOW_RND(agent, Hash40::new("sys_spin_wind"), Hash40::new("clownattachl2"), 3, 0, 0, 180, 0, 90, 0.35, 3, 1, 1, 10, 360, 10, true);
    LAST_EFFECT_SET_RATE(agent, 2);
}
wait(lua_state, 2.0);
if is_excute(agent) {
    EFFECT_FOLLOW_RND(agent, Hash40::new("sys_spin_wind"), Hash40::new("clownattachl2"), 1, 0, 0, 180, 0, 90, 0.5, 3, 1, 1, 10, 360, 10, true);
    LAST_EFFECT_SET_RATE(agent, 1.5);
}
wait(lua_state, 2.0);
}
}