unsafe extern "C" fn game_throwb(agent: &mut L2CAgentBase) {
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_RED)){
        if macros::is_excute(agent) {
            macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 7.2, 45, 60, 0, 50, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
        }
        else{
        if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_YELLOW)){
            if macros::is_excute(agent) {
                macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 9.0, 45, 60, 0, 50, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
            }
            else{
            if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_BLUE)){
                if macros::is_excute(agent) {
                    macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 15.3, 45, 60, 0, 50, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
                }
                else{
                if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_WHITE)){
                    if macros::is_excute(agent) {
                        macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 9.0, 45, 60, 0, 50, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_purple"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
                    }
                    else{
                    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_VIOLET)){
                        if macros::is_excute(agent) {
                            macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 9.0, 45, 60, 0, 50, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
                        }
                    }
                }
            }
        }
    }
}
}
}
}
frame(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
macros::WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
}
frame(agent.lua_state_agent, 8.0);
if macros::is_excute(agent) {
macros::REVERSE_LR(agent);
}
frame(agent.lua_state_agent, 20.0);
if macros::is_excute(agent) {
macros::CHECK_FINISH_CAMERA(agent, 0, 0);
lua_bind::FighterCutInManager::set_throw_finish_zoom_rate(singletons::FighterCutInManager(), 1.3);
lua_bind::FighterCutInManager::set_throw_finish_offset(singletons::FighterCutInManager(), Vector3f{x: 10.0, y: 0.0, z: 0.0});
}
frame(agent.lua_state_agent, 21.0);
if macros::is_excute(agent) {
macros::WHOLE_HIT(agent, *HIT_STATUS_NORMAL);
}
}

unsafe extern "C" fn effect_throwb(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 16, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
    }
    frame(agent.lua_state_agent, 5.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("sys_smash_flash_s"), Hash40::new("top"), 0, 20, 2, 0, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 17.0);
    if macros::is_excute(agent) {
        macros::EFFECT_ALPHA(agent, Hash40::new("sys_attack_speedline"), Hash40::new("top"), 0, 23, -3, 135, 0, 0, 1, 0, 0, 0, 0, 0, 0, true, 0.3);
        macros::EFFECT(agent, Hash40::new("pikmin_grab_dash"), Hash40::new("top"), 0, 11, -3, 135, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 20.0);
    if macros::is_excute(agent) {
        macros::LANDING_EFFECT(agent, Hash40::new("sys_crown"), Hash40::new("top"), 16, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
    }
    frame(agent.lua_state_agent, 21.0);
    if macros::is_excute(agent) {
        macros::EFFECT_OFF_KIND(agent, Hash40::new("pikmin_grab_dash"), false, true);
    }
}

unsafe extern "C" fn sound_throwb(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_common_throw_01"));
    }
    wait(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_common_throw_02"));
    }
}

unsafe extern "C" fn expression_throwb(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 20.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_M);
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}