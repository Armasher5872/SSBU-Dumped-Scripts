if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 4, true);
}
frame(fighter.lua_state_agent, 8.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
}
frame(fighter.lua_state_agent, 14.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 20.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 26.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 32.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattack"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 36.0);
if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 15);
}
frame(fighter.lua_state_agent, 37.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
