methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	EFFECT(0x127b2fdb2c, hash40("top"), 2, 7, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=2)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	LANDING_EFFECT(hash40("sys_whirlwind_r"), hash40("top"), -1, 0, -1, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=13)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	LANDING_EFFECT(hash40("sys_whirlwind_r"), hash40("top"), -1, 0, -1, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=24)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	LANDING_EFFECT(hash40("sys_whirlwind_r"), hash40("top"), -1, 0, -1, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=35)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	AFTER_IMAGE_OFF(4)
	0x190e30()
}
frame(Frame=48)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	LANDING_EFFECT(hash40("sys_landing_smoke_s"), hash40("top"), 0, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, true)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=50)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	EFFECT_OFF_KIND(0x127b2fdb2c, false, true)
	0x190e30()
	0x190e30()
	0x190e30()
	AFTER_IMAGE4_ON_WORK_arg29(FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_TEX_SWORD, FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_TEX_SWORD_ADD, 4, hash40("haver"), 0, 0.2, 0, hash40("haver"), -0.0, 11.5, 0, true, FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_ID_SWORD_FLARE, hash40("haver"), 0, 0, 0, 0, 0, 0, 1, 0, EFFECT_AXIS_Y, 0, TRAIL_BLEND_ALPHA, 101, TRAIL_CULL_NONE, 2, 0.2)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=55)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	AFTER_IMAGE_OFF(2)
	0x190e30()
}
frame(Frame=58)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	AFTER_IMAGE4_ON_WORK_arg29(FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_TEX_SWORD, FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_TEX_SWORD_ADD, 4, hash40("haver"), 0, 0.2, 0, hash40("haver"), -0.0, 11.5, 0, true, FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_ID_SWORD_FLARE, hash40("haver"), 0, 0, 0, 0, 0, 0, 1, 0, EFFECT_AXIS_Y, 0, TRAIL_BLEND_ALPHA, 101, TRAIL_CULL_NONE, 2, 0.2)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=70)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	AFTER_IMAGE_OFF(4)
	0x190e30()
}
