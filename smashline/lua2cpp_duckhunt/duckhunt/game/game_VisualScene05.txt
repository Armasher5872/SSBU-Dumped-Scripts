#[acmd_script( agent = "duckhunt", script = "game_visualscene05" , category = ACMD_GAME , low_priority)]
unsafe fn game_visualscene05(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
	}
	frame(fighter.lua_state_agent, 5.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 10.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 15.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 20.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 25.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 30.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 35.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 40.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 45.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 50.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 55.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
	frame(fighter.lua_state_agent, 60.0);
	if macros::is_excute(fighter) {
		macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_DUCKHUNT_FINAL, 0, 2.0, 361, 80, 1, 90, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		AttackModule::set_no_dead_all(fighter.module_accessor, true, true);
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DUCKHUNT_STATUS_WORK_ID_FLAG_FINAL_ABS_HIT);
	}
