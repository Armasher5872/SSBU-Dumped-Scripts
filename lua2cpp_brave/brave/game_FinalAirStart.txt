methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	SLOW_OPPONENT(30, 60)
	0x239f70()
	0x239f70()
}
WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
0x239f70(false, false)
0x239f70()
0x239f70()
if(0x239f70()){
	frame(Frame=9)
	0x239f70()
	0x239f70()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x239f70()){
		FT_SET_FINAL_FEAR_FACE(50)
		0x239f70()
		REQ_FINAL_START_CAMERA(hash40("d04finalstart.nuanmb"), true)
		0x239f70()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x239f70()){
			PostureModule::scale(4, 0)
			0x239f70(584385346, 2.1)
			0x239f70()
			CAM_ZOOM_IN_arg5(0, 0)
			0x239f70()
			0x239f70()
			0x239f70()
			0x239f70()
			0x239f70()
			0x239f70()
			FT_START_CUTIN()
		}
	}
}
frame(Frame=50)
0x239f70()
0x239f70()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	CAM_ZOOM_OUT()
}
frame(Frame=56)
0x239f70()
0x239f70()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=7.0, Angle=60, KBG=25, FKB=0, BKB=25, Size=8.0, X=0.0, Y=3.0, Z=5.0, X2=0.0, Y2=3.0, Z2=4.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	AttackModule::set_no_dead_all(true, false)
	0x239f70()
	0x239f70()
}
frame(Frame=57)
0x239f70()
0x239f70()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=7.0, Angle=60, KBG=25, FKB=0, BKB=25, Size=18.0, X=0.0, Y=11.0, Z=14.0, X2=0.0, Y2=11.0, Z2=15.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	AttackModule::set_no_dead_all(true, false)
	0x239f70()
	0x239f70()
}
frame(Frame=59)
0x239f70()
0x239f70()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=7.0, Angle=60, KBG=25, FKB=0, BKB=25, Size=18.0, X=0.0, Y=11.0, Z=15.0, X2=0.0, Y2=22.0, Z2=11.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	0x239f70()
	AttackModule::set_no_dead_all(true, false)
	0x239f70()
	0x239f70()
}
frame(Frame=65)
0x239f70()
0x239f70()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	AttackModule::clear_all()
}
frame(Frame=70)
0x239f70()
0x239f70()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x239f70()){
	WorkModule::on_flag(Flag=FIGHTER_BRAVE_STATUS_FINAL_FLAG_END_FINAL)
	0x239f70()
}
