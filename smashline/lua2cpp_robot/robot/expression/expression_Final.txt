#[acmd_script( agent = "robot", script = "expression_final", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_final(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 2.0);
    for _ in 0..5 {
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_beamss"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(agent.lua_state_agent, 11.0);
}
frame(agent.lua_state_agent, 127.0);
for _ in 0..5 {
if macros::is_excute(agent) {
    ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_beamss"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
wait(agent.lua_state_agent, 11.0);
}
frame(agent.lua_state_agent, 200.0);
if macros::is_excute(agent) {
ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_erase_sp"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(agent.lua_state_agent, 201.0);
if macros::is_excute(agent) {
ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosionm"), 10, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(agent.lua_state_agent, 212.0);
if macros::is_excute(agent) {
ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
}
}