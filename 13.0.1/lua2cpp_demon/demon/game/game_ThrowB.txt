is_vr_mode()
if(0x3cfb70(false, false)){
	battle_object_module_accessor()
	methodlib::L2CValue::L2CValue(void*)()
}
else{
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
}
methodlib::L2CValue::as_pointer()const()
is_one_on_one_including_thrown()
if(0x3cfb70(false, true)){
	if(is_excute){
		battle_object_module_accessor()
		methodlib::L2CValue::L2CValue(void*)()
	}
	else{
		methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	}
}
methodlib::L2CValue::as_pointer()const()
check_disabled_motion_camera_of_scale()
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const()
check_disabled_motion_camera_of_stage()
WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA)
if(0x3cfb70(false, true)){
	if(is_excute){
		CHECK_VALID_START_CAMERA(0, 7, 0, 35, 0, 0, false)
	}
}
WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA)
if(0x3cfb70(false, false)){
	WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
	if(0x3cfb70(false, false)){
		if(is_excute){
			REQ_MOTION_CAMERA(hash40("e01throwb.nuanmb"), false)
		}
	}
}
if(is_excute){
	PostureModule::scale(7, 0)
	0x3cfb70(-1037516665, 1.5)
	CAM_ZOOM_IN_arg5(0, 0)
}
frame(Frame=27)
if(is_excute){
	REVERSE_LR()
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, ID=0, Damage=0.0, Angle=58, KBG=340, FKB=0, BKB=34, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=3.0, Angle=361, KBG=100, FKB=0, BKB=40, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
}
frame(Frame=46)
if(is_excute){
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=14.0, Angle=58, KBG=55, FKB=0, BKB=60, Size=4.0, X=0.0, Y=2.0, Z=-12.0, X2=0.0, Y2=2.0, Z2=-22.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_DEMON_KICK, Type=ATTACK_REGION_BODY)
	AttackModule::set_catch_only_all(true, false)
	CHECK_FINISH_CAMERA(17, 0)
}
frame(Frame=47)
if(is_excute){
	AttackModule::clear_all()
	ATK_HIT_ABS(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, hash40("throw"), FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT, FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP, FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO)
	CAM_ZOOM_OUT()
}
