methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3cbcf0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x3cbcf0()
	0x3cbcf0()
	0x3cbcf0()
	ItemModule::set_have_item_visibility(false)
	0x3cbcf0()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 1, false)
	ControlModule::set_rumble()
	0x3cbcf0()
	0x3cbcf0()
	0x3cbcf0()
}
frame(Frame=2)
for(6 Iterations){
	0x3cbcf0()
	0x3cbcf0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3cbcf0()){
		RUMBLE_HIT(0x15f477f82c, 4)
		0x3cbcf0()
		0x3cbcf0()
	}
	frame(Frame=7)
	0x3cbcf0()
	0x3cbcf0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3cbcf0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 4, false)
		ControlModule::set_rumble()
		0x3cbcf0()
		0x3cbcf0()
		0x3cbcf0()
	}
	wait(Frames=5)
	0x3cbcf0()
	0x3cbcf0()
}
frame(Frame=17)
0x3cbcf0()
0x3cbcf0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3cbcf0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 10, false)
	ControlModule::set_rumble()
	0x3cbcf0()
	0x3cbcf0()
	0x3cbcf0()
}
