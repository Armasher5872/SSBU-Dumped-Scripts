if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
wait_loop_clear(0);
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 4);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 6);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 8);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 10);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 12);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 14);
if macros::is_excute(fighter) {
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.3, 361, 15, 0, 8, 4.8, 0.0, 7.0, 14.5, Some(0.0), Some(7.0), Some(8.0), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
	AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 2, /*Unk*/ false);
	macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}
frame(0, 16);
