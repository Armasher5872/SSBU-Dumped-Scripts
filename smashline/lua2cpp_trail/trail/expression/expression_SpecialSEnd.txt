#[acmd_script( agent = "trail", script = "expression_specialsend", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialsend(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_landl"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
    }
    frame(fighter.lua_state_agent, 2.0);
    for _ in 0..18 {
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_specials_land"), 0, true);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    wait(fighter.lua_state_agent, 2.0);
}
frame(fighter.lua_state_agent, 40.0);
ItemModule::is_have_item(fighter.module_accessor, 0);
if(0x4ae890(false, true)){
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.13);
    }
}
frame(fighter.lua_state_agent, 43.0);
if macros::is_excute(fighter) {
    macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.1);
}
frame(fighter.lua_state_agent, 48.0);
if macros::is_excute(fighter) {
    ItemModule::set_have_item_visibility(fighter.module_accessor, true);
}
frame(fighter.lua_state_agent, 53.0);
if macros::is_excute(fighter) {
    macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
}
if macros::is_excute(fighter) {
    methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_landingairlwlight"), 0, false);
    ControlModule::set_rumble(fighter.module_accessor);
}
wait(fighter.lua_state_agent, 2.0);
}