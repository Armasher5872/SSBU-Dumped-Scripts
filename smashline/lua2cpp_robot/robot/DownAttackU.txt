unsafe extern "C" fn game_downattacku(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 17.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 7.0, 48, 48, 0, 80, 5.0, 0.0, 5.0, 16.0, Some(0.0), Some(5.0), Some(3.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 8, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_PUNCH);
    }
    wait(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 22.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 7.0, 48, 48, 0, 80, 5.0, 0.0, 5.0, -16.0, Some(0.0), Some(5.0), Some(-3.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 8, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_PUNCH);
    }
    wait(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
}

unsafe extern "C" fn effect_downattacku(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("robot_jump_jet"), Hash40::new("robot_jump_jet"), Hash40::new("knee"), 0, 0, 0, 90, -90, 0, 1, true, *EF_FLIP_YZ);
    }
    frame(agent.lua_state_agent, 9.0);
    if macros::is_excute(agent) {
        macros::LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        macros::FOOT_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -5, 0, 0, 0, 0, -3, 0.5, 0, 0, 0, 0, 0, 0, false);
    }
    frame(agent.lua_state_agent, 15.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 3.3, 5, -10, -15, 10, 1.2, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
        if WorkModule::is_flag(agent.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
            if macros::is_excute(agent) {
                macros::LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
            }
            else{
            if macros::is_excute(agent) {
                macros::LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
            }
        }
    }
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
    if WorkModule::is_flag(agent.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
        if macros::is_excute(agent) {
            macros::LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
        }
        else{
        if macros::is_excute(agent) {
            macros::LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
        }
    }
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
frame(agent.lua_state_agent, 21.0);
if macros::is_excute(agent) {
macros::FOOT_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 5, 0, 0, 0, 180, 0, 0.7, 0, 0, 0, 0, 0, 0, false);
}
frame(agent.lua_state_agent, 22.0);
if macros::is_excute(agent) {
macros::EFFECT_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 6, -5, 0, 170, 10, 1.2, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_YZ);
macros::LAST_EFFECT_SET_RATE(agent, 2);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(agent.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
    if macros::is_excute(agent) {
        macros::LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
    }
    else{
    if macros::is_excute(agent) {
        macros::LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
    }
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(agent.module_accessor, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else{
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if macros::is_excute(agent) {
macros::LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if macros::is_excute(agent) {
macros::LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if macros::is_excute(agent) {
macros::LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if macros::is_excute(agent) {
macros::LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if macros::is_excute(agent) {
macros::LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if macros::is_excute(agent) {
macros::LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
}

unsafe extern "C" fn sound_downattacku(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_robot_dash_start"));
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_robot_criffrise"));
    }
    frame(agent.lua_state_agent, 11.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_robot_landing01"));
    }
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_robot_swing_l"));
    }
    frame(agent.lua_state_agent, 18.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_robot_swing_l"));
    }
}

unsafe extern "C" fn expression_downattacku(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 6, true);
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_vernier"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 15.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm_l"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 17.0);
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 0);
    }
    frame(agent.lua_state_agent, 21.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 35.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 6);
    }
    frame(agent.lua_state_agent, 41.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TPART, 3);
    }
}