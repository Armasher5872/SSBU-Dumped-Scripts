frame(lua_state, 1.0);
if is_excute(fighter) {
WorkModule::on_flag(boma, /*Flag*/ *FIGHTER_MARTH_STATUS_SPECIAL_S_FLAG_INPUT_CHECK);
}frame(lua_state, 5.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("sword1"), *ATTACK_DIRECTION_Z);
AttackModule::set_attack_reference_joint_id(boma);
ATTACK(fighter, 0, 0, Hash40::new("top"), 3.325, 52, 30, 0, 40, 4.8, 0.0, 5.6, 14.0, 0.0, 7.0, 10.0, 0.7, 0.8, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
ATTACK(fighter, 1, 0, Hash40::new("top"), 3.325, 52, 30, 0, 40, 3.0, 0.0, 4.0, 19.0, 0.0, 7.0, 10.0, 0.7, 0.8, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
}frame(lua_state, 8.0);
if is_excute(fighter) {
AttackModule::clear_all(boma);
WorkModule::on_flag(boma, /*Flag*/ *FIGHTER_MARTH_STATUS_SPECIAL_S_FLAG_MOTION_CHANGE_ENABLE);
}frame(lua_state, 24.0);
if is_excute(fighter) {
WorkModule::off_flag(boma, /*Flag*/ *FIGHTER_MARTH_STATUS_SPECIAL_S_FLAG_INPUT_CHECK);
}