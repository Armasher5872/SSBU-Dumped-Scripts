unsafe extern "C" fn game_finalend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        AttackModule::clear_all(boma);
        ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_VISUAL_SCENE, 0, 13.0, 60, 130, 0, 75, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        WorkModule::on_flag(boma, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_ABS_SET);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
    }
}

unsafe extern "C" fn effect_finalend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        FILL_SCREEN_MODEL_COLOR(agent, 1, 0, 0.2, 0.2, 0.2, 0, 0, 0, 1, 1.2, EffectScreenLayer:*GROUND, *EFFECT_SCREEN_PRIO_FINAL);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        CANCEL_FILL_SCREEN(agent, 1, 40);
    }
}

unsafe extern "C" fn expression_finalend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 4.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}