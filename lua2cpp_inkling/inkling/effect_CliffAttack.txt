frame(Frame=13)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	EFFECT(hash40("sys_smash_flash"), hash40("haver"), 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
frame(Frame=16)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), 2, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
get_value_float(SO_VAR_FLOAT_LR)
0x13d360(224, 0)
0x13d360()
0x13d360()
if(0x13d360()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x13d360()){
		EFFECT_FOLLOW(0x12aaab7bc6, hash40("top"), -2, 5.5, 3, -10, -11, -180, 0.9, true)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x13d360()){
			EFFECT_FOLLOW(0x12aaab7bc6, hash40("top"), -2, 5.5, 3, -13, -20, -166, 0.9, true)
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
			0x13d360()
		}
	}
}
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_R)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_G)
0x13d360(-1305339890)
WorkModule::get_float(FIGHTER_INKLING_INSTANCE_WORK_ID_FLOAT_INK_B)
0x13d360(-1305339890)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LAST_PARTICLE_SET_COLOR()
}
0x13d360(0)
0x13d360()
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	LAST_EFFECT_SET_RATE(1.2)
	0x13d360()
}
