#[acmd_script( agent = "purin", script = "expression_throwlw" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_throwlw(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		macros::FT_ATTACK_ABS_CAMERA_QUAKE(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, *CAMERA_QUAKE_KIND_NONE);
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 8);
	}
	frame(fighter.lua_state_agent, 9.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 24.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 34.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 48.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 8, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 60.0);
	if macros::is_excute(fighter) {
		macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
		macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
	}
	frame(fighter.lua_state_agent, 65.0);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 8);
	}
