unsafe extern "C" fn game_finalfinishs(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        SLOW_OPPONENT(agent, 30, 30);
        ATTACK(agent, 0, 0, Hash40::new("rot"), 20.0, 45, 58, 0, 115, 9.0, 0.0, 9.0, 0.0, None, None, None, 1.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
        AttackModule::set_force_reaction(boma, 0, true, false);
        AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
        AttackModule::set_optional_hit_effect(boma, 0, Hash40::new("diddy_final_finish_hit"));
    }
}

unsafe extern "C" fn effect_finalfinishs(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("diddy_final_fly"), Hash40::new("bust"), -3, -4.5, -4.5, 0, 90, 0, 1.3, true);
        EFFECT_FOLLOW(agent, Hash40::new("diddy_final_fly"), Hash40::new("bust"), -3, -4.5, 4.5, 0, 90, 0, 1.3, true);
    }
}

unsafe extern "C" fn sound_finalfinishs(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        STOP_SE(agent, Hash40::new("se_diddy_final05"));
        PLAY_SE_NO_3D(agent, Hash40::new("se_diddy_final06"));
    }
}

unsafe extern "C" fn expression_finalfinishs(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
        ItemModule::set_have_item_visibility(boma, false, 0);
        ItemModule::set_attach_item_visibility(boma, false, *ATTACH_ITEM_GROUP_BACK);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_rush"), 12, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_HIT(agent, Hash40::new("rbkind_attack_critical"), 0);
    }
}