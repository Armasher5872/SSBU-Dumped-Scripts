methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ArticleModule::generate_article(FIGHTER_MASTER_GENERATE_ARTICLE_SWORD)
	0x333150()
	methodlib::L2CValue::as_hash()const(FIGHTER_MASTER_GENERATE_ARTICLE_SWORD, hash40("attack_lw3"))
	ArticleModule::change_motion()
	0x333150()
	0x333150()
}
frame(Frame=13)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=8.0, Angle=93, KBG=55, FKB=0, BKB=67, Size=2.8, X=0.0, Y=2.8, Z=10.0, X2=0.0, Y2=2.8, Z2=12.5, Hitlag=0.8, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=8.0, Angle=96, KBG=55, FKB=0, BKB=67, Size=2.8, X=0.0, Y=2.8, Z=17.0, X2=0.0, Y2=2.8, Z2=25.5, Hitlag=0.8, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
}
frame(Frame=16)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	AttackModule::clear_all()
}
frame(Frame=59)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ArticleModule::remove_exist(FIGHTER_MASTER_GENERATE_ARTICLE_SWORD)
	0x333150()
}
