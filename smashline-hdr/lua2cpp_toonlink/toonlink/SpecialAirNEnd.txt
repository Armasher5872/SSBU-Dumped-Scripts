unsafe extern "C" fn effect_specialairnend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("haver"), 0, -0.3, 3.3, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
        LAST_EFFECT_SET_RATE(agent, 1.3);
    }
}

unsafe extern "C" fn sound_specialairnend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        STOP_SE(agent, Hash40::new("se_toonlink_special_n01"));
    }
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_toonlink_special_n03"));
    }
}

unsafe extern "C" fn expression_specialairnend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    if WorkModule::is_flag(boma, *FIGHTER_LINK_STATUS_BOW_FLAG_CHARGE_MAX) {
        if is_excute(agent) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_attackl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        else {
        if is_excute(agent) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
}
frame(lua_state, 25.0);
if is_excute(agent) {
    ItemModule::set_have_item_visibility(boma, true, 0);
    VisibilityModule::set_int64(boma, hash40("sword") as i64, hash40("sword_normal") as i64);
    VisibilityModule::set_int64(boma, hash40("shield") as i64, hash40("shield_normal") as i64);
    ArticleModule::set_visibility_whole(boma, *FIGHTER_TOONLINK_GENERATE_ARTICLE_BOW, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
}