#[acmd_script( agent = "link", script = "expression_attacks4", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attacks4(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(fighter.lua_state_agent, 3.0);
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("shield"), Hash40::new("shield_back"));
    }
    frame(fighter.lua_state_agent, 10.0);
    execute(fighter.lua_state_agent, 10.0);
    if WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK) {
        if macros::is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(Hash40::new("sword1"), *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_X, *ATTACK_DIRECTION_Y);
            AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
            slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
            ItemModule::set_have_item_visibility(fighter.module_accessor, false);
        }
    }
    frame(fighter.lua_state_agent, 11.0);
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("shield"), Hash40::new("shield_back"));
    }
    frame(fighter.lua_state_agent, 13.0);
    if macros::is_excute(fighter) {
        ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(fighter.lua_state_agent, 15.0);
    if macros::is_excute(fighter) {
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 0);
        DamageModule::damage(fighter.module_accessor);
        if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(0, 0)){
            ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_beams"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
    frame(fighter.lua_state_agent, 39.0);
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("shield"), Hash40::new("shield_normal"));
    }
}