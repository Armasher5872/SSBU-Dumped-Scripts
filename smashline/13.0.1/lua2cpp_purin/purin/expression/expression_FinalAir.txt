if macros::is_excute(fighter) {
ItemModule::set_have_item_visibility(fighter.module_accessor, false);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
ItemModule::set_attach_item_visibility(fighter.module_accessor, false);
notify_event_msc_cmd(0x1f20a9d549, false);
notify_event_msc_cmd(0x24772eddef, false);
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
}frame(fighter.lua_state_agent, 13.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_bounce"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 15.0);
for(10 Iterations){;
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 35.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 45.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 55.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 65.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 67.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}frame(fighter.lua_state_agent, 68.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attack_critical"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 75.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 85.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 95.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 105.0);
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}wait(fighter.lua_state_agent, 10.0);
}