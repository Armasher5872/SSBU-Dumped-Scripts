frame(Frame=5)
for(3 Iterations){
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD)
		0x1032e0()
	}
	frame(Frame=8)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FighterAreaModuleImpl::enable_fix_jostle_area(4, 2)
		0x1032e0()
		0x1032e0()
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=1.5, Angle=173, KBG=30, FKB=0, BKB=65, Size=4.5, X=0.0, Y=4.0, Z=9.0, X2=0.0, Y2=4.0, Z2=-5.5, Hitlag=1.0, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_BODY)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		FT_ADD_DAMAGE(SelfDamage=1.3)
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		AttackModule::clear_all()
	}
	wait(Frames=1)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=1.5, Angle=173, KBG=30, FKB=0, BKB=65, Size=4.5, X=0.0, Y=4.0, Z=9.0, X2=0.0, Y2=4.0, Z2=-5.5, Hitlag=1.0, SDI=0.5, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_BODY)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		AttackModule::clear_all()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
}
frame(Frame=23)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=8.0, Angle=50, KBG=150, FKB=0, BKB=45, Size=6.0, X=0.0, Y=4.5, Z=-5.5, X2=0.0, Y2=4.5, Z2=4.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_BODY)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=25)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	AttackModule::clear_all()
}
