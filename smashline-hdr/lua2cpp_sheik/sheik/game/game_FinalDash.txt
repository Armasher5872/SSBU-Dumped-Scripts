unsafe extern "C" fn game_finaldash(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    PostureModule::scale(boma);
    if(0x154f30(-1599779927, 1.4)){
        if is_excute(agent) {
            SEARCH(agent, 0, 0, Hash40::new("top"), 8.0, 0.0, 6.0, 9.0, *COLLISION_KIND_MASK_HIT, *HIT_STATUS_MASK_NORMAL, 1, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false);
            ATTACK(agent, 0, 0, Hash40::new("top"), 1.0, 361, 100, 20, 0, 8.0, 0.0, 6.0, 9.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        }
        else{
        PostureModule::scale(boma);
        if(0x154f30(-1599779927, 0.5)){
            if is_excute(agent) {
                SEARCH(agent, 0, 0, Hash40::new("top"), 8.0, 0.0, 6.0, 9.0, 0.0, 6.0, 15.0, *COLLISION_KIND_MASK_HIT, *HIT_STATUS_MASK_NORMAL, 1, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false);
                ATTACK(agent, 0, 0, Hash40::new("top"), 1.0, 361, 100, 20, 0, 8.0, 0.0, 6.0, 9.0, Some(0.0), Some(6.0), Some(15.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
            }
            frame(lua_state, 1.0);
            if is_excute(agent) {
                SEARCH(agent, 0, 0, Hash40::new("top"), 8.0, 0.0, 6.0, -10.0, 0.0, 6.0, 15.0, *COLLISION_KIND_MASK_HIT, *HIT_STATUS_MASK_NORMAL, 1, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false);
                ATTACK(agent, 0, 0, Hash40::new("top"), 1.0, 361, 100, 20, 0, 8.0, 0.0, 6.0, -10.0, Some(0.0), Some(6.0), Some(15.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
            }
            else{
            if is_excute(agent) {
                SEARCH(agent, 0, 0, Hash40::new("top"), 8.0, 0.0, 6.0, 9.0, *COLLISION_KIND_MASK_HIT, *HIT_STATUS_MASK_NORMAL, 1, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false);
                ATTACK(agent, 0, 0, Hash40::new("top"), 1.0, 361, 100, 20, 0, 8.0, 0.0, 6.0, 9.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
            }
        }
    }
}
}
if is_excute(agent) {
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 11.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
search!(agent, *MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR_ALL);
}
}