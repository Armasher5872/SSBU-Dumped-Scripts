unsafe extern "C" fn game_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    FighterSpecializer_Demon::set_devil(boma, true, 10);
    frame(lua_state, 1.0);
    if is_excute(agent) {
        SLOW_OPPONENT(agent, 2.5, 5);
        FT_SET_FINAL_FEAR_FACE(agent, 50);
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 0, 0, 0, 60, 8.0, 0.0, 10.0, 8.0, Some(0.0), Some(10.0), Some(10.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 1, 0, Hash40::new("top"), 0.0, 366, 0, 0, 30, 10.0, 0.0, 10.0, 14.0, Some(0.0), Some(10.0), Some(14.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 2, 0, Hash40::new("top"), 0.0, 180, 0, 0, 60, 8.0, 0.0, 10.0, -8.0, Some(0.0), Some(10.0), Some(-10.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 3, 0, Hash40::new("top"), 0.0, 366, 0, 0, 30, 10.0, 0.0, 10.0, -14.0, Some(0.0), Some(10.0), Some(-14.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 4, 0, Hash40::new("top"), 0.0, 0, 0, 0, 60, 8.0, 0.0, 4.0, 10.0, Some(0.0), Some(18.0), Some(10.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 5, 0, Hash40::new("top"), 0.0, 366, 0, 0, 30, 11.0, 0.0, 4.0, 14.5, Some(0.0), Some(18.0), Some(14.5), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 6, 0, Hash40::new("top"), 0.0, 180, 0, 0, 60, 8.0, 0.0, 4.0, -10.0, Some(0.0), Some(18.0), Some(-10.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        ATTACK(agent, 7, 0, Hash40::new("top"), 0.0, 366, 0, 0, 30, 11.0, 0.0, 4.0, -14.5, Some(0.0), Some(18.0), Some(-14.5), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 1, false, false, true, true, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
    }
    frame(lua_state, 4.0);
    FighterSpecializer_Demon::set_devil(boma, true, 5);
    frame(lua_state, 5.0);
    FighterSpecializer_Demon::set_devil(boma, true, 3);
    if is_excute(agent) {
        SLOW_OPPONENT(agent, 30, 48);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if is_excute(agent) {
                REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), true, false);
            }
            else{
            if is_excute(agent) {
                PostureModule::scale(boma, 10, 0);
                0x3cfb70(-1037516665, 2.5);
                CAM_ZOOM_IN_arg5(0, 0);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
            }
            else{
            if is_excute(agent) {
                REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), true, false);
            }
            if is_excute(agent) {
                FT_START_CUTIN(agent);
            }
        }
    }
}
}
frame(lua_state, 26.0);
if is_excute(agent) {
AttackModule::clear(boma, 0, false);
AttackModule::clear(boma, 2, false);
AttackModule::clear(boma, 4, false);
AttackModule::clear(boma, 6, false);
}
frame(lua_state, 27.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
}
frame(lua_state, 30.0);
if is_excute(agent) {
CAM_ZOOM_OUT(agent);
camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 150, 0, 0, 0);
}
frame(lua_state, 41.0);
if is_excute(agent) {
SLOW_OPPONENT(agent, 7, 22);
}
frame(lua_state, 50.0);
if is_excute(agent) {
ATTACK(agent, 0, 0, Hash40::new("top"), 8.0, 35, 100, 100, 0, 5.0, 0.0, 10.0, 12.0, Some(0.0), Some(10.0), Some(120.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
ATTACK(agent, 1, 0, Hash40::new("top"), 8.0, 35, 100, 100, 0, 9.0, 0.0, 10.0, 16.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_OBJECT);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 53.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
CAM_ZOOM_OUT(agent);
}
frame(lua_state, 115.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 5);
frame(lua_state, 116.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 6);
frame(lua_state, 117.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 7);
frame(lua_state, 118.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, false, 0);
}