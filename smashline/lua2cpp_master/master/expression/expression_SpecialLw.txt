#[acmd_script( agent = "master", script = "expression_speciallw", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_speciallw(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
        WorkModule::on_flag(fighter.module_accessor, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_75_hold_largestart"), 18, true);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 19.0);
    for(7 Iterations){
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_75_hold_large"), 3, true);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    wait(fighter.lua_state_agent, 3.0);
}
frame(fighter.lua_state_agent, 60.0);
if macros::is_excute(fighter) {
    slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3);
    methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohit_attacks"), 0, false);
    ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 62.0);
if macros::is_excute(fighter) {
    macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackll"), 0);
}
frame(fighter.lua_state_agent, 67.0);
if macros::is_excute(fighter) {
    macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 107.0);
if macros::is_excute(fighter) {
    slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 8);
}
}