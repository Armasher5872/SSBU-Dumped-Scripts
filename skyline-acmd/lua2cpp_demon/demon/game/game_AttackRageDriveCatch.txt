WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE)
if(0x3cfb70(false, false)){
	battle_object_module_accessor()
	methodlib::L2CValue::L2CValue(void*)()
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const(true, 5)
	set_devil()
	if(is_excute){
		WHOLE_HIT(HIT_STATUS_INVINCIBLE)
	}
	is_vr_mode()
	if(0x3cfb70(false, false)){
		battle_object_module_accessor()
		methodlib::L2CValue::L2CValue(void*)()
	}
	else {
		methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	}
	methodlib::L2CValue::as_pointer()const()
	is_one_on_one_including_thrown()
	if(0x3cfb70(false, true)){
		if(is_excute){
			battle_object_module_accessor()
			methodlib::L2CValue::L2CValue(void*)()
		}
		else {
			methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
		}
	}
	methodlib::L2CValue::as_pointer()const()
	check_disabled_motion_camera_of_scale()
	battle_object_module_accessor()
	methodlib::L2CValue::L2CValue(void*)()
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const()
	check_disabled_motion_camera_of_stage()
	WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA)
	if(0x3cfb70(false, true)){
		WorkModule::is_flag(FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_ENABLE_MOTION_CAMERA)
		if(0x3cfb70(false, true)){
			WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA)
			if(0x3cfb70(false, false)){
				if(is_excute){
					REQ_MOTION_CAMERA(hash40("d03speciallwcatch.nuanmb"), false)
				}
			}
		}
	}
	if(is_excute){
		ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=5.0, Angle=70, KBG=30, FKB=0, BKB=60, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_BODY)
	}
	frame(Frame=3)
	battle_object_module_accessor()
	methodlib::L2CValue::L2CValue(void*)()
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const(true, 3)
	set_devil()
	frame(Frame=30)
	if(is_excute){
		WorkModule::set_int(HIT_STATUS_INVINCIBLE, FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS)
		WorkModule::on_flag(Flag=FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE)
	}
}
else {
	battle_object_module_accessor(0)
	methodlib::L2CValue::L2CValue(void*)()
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const(true, 5)
	set_devil()
	if(is_excute){
		WHOLE_HIT(HIT_STATUS_INVINCIBLE)
	}
	is_vr_mode()
	if(0x3cfb70(false, false)){
		battle_object_module_accessor()
		methodlib::L2CValue::L2CValue(void*)()
	}
	else {
		methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	}
	methodlib::L2CValue::as_pointer()const()
	is_one_on_one_including_thrown()
	if(0x3cfb70(false, true)){
		if(is_excute){
			battle_object_module_accessor()
			methodlib::L2CValue::L2CValue(void*)()
		}
		else {
			methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
		}
	}
	methodlib::L2CValue::as_pointer()const()
	check_disabled_motion_camera_of_scale()
	battle_object_module_accessor()
	methodlib::L2CValue::L2CValue(void*)()
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const()
	check_disabled_motion_camera_of_stage()
	WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA)
	if(0x3cfb70(false, true)){
		WorkModule::is_flag(FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_ENABLE_MOTION_CAMERA)
		if(0x3cfb70(false, true)){
			WorkModule::is_flag(FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA)
			if(0x3cfb70(false, false)){
				if(is_excute){
					REQ_MOTION_CAMERA(hash40("d03speciallwcatch.nuanmb"), false)
				}
			}
		}
	}
	if(is_excute){
		ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=5.0, Angle=70, KBG=30, FKB=0, BKB=60, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_BODY)
	}
	frame(Frame=3)
	battle_object_module_accessor()
	methodlib::L2CValue::L2CValue(void*)()
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
	methodlib::L2CValue::as_pointer()const(true, 3)
	set_devil()
	frame(Frame=40)
	if(is_excute){
		WorkModule::set_int(HIT_STATUS_INVINCIBLE, FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS)
		WorkModule::on_flag(Flag=FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE)
	}
}
