methodlib::L2CValue::operatorbool()const(is_excute)
if(0x120440()){
	methodlib::L2CValue::as_hash()const(hash40("sword1"), ATTACK_DIRECTION_X_MINUS, ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y_MINUS)
	AttackModule::set_attack_reference_joint_id()
	0x120440()
	0x120440()
	0x120440()
	0x120440()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x120440()
	0x120440()
	0x120440()
}
frame(Frame=3)
0x120440()
0x120440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x120440()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x120440()
	0x120440()
	0x120440()
}
frame(Frame=4)
0x120440()
0x120440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x120440()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
	0x120440()
	0x120440()
	0x120440()
}
frame(Frame=6)
0x120440()
0x120440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x120440()){
	RUMBLE_HIT(hash40("rbkind_slashl"), 0)
	0x120440()
	0x120440()
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_L, 3)
	0x120440()
	0x120440()
	0x120440()
	0x120440()
}
frame(Frame=33)
0x120440()
0x120440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x120440()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 4)
	0x120440()
	0x120440()
	0x120440()
	0x120440()
}
