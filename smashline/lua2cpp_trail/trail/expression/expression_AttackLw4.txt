#[acmd_script( agent = "trail", script = "expression_attacklw4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacklw4(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
    }
    frame(fighter.lua_state_agent, 3.0);
    execute(3);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_81_smash_lw"), 0);
    }
    frame(fighter.lua_state_agent, 7.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 3);
    }
    frame(fighter.lua_state_agent, 9.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 9, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 21.0);
    if macros::is_excute(fighter) {
        macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_impact"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 51.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
    frame(fighter.lua_state_agent, 57.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_81_specials_land"), 7, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 64.0);
    ItemModule::is_have_item(fighter.module_accessor, 0);
    if(0x4ae890(false, true)){;
        if macros::is_excute(fighter) {
            macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
        }
    }
    frame(fighter.lua_state_agent, 69.0);
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.08);
    }
    frame(fighter.lua_state_agent, 73.0);
    if macros::is_excute(fighter) {
        ItemModule::set_have_item_visibility(fighter.module_accessor, true);
    }
    frame(fighter.lua_state_agent, 77.0);
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
    }
}