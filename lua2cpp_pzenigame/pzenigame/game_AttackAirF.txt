frame(Frame=5)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING)
	0xe2af0()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=7.0, Angle=48, KBG=96, FKB=0, BKB=50, Size=4.0, X=0.0, Y=5.0, Z=7.5, X2=0.0, Y2=5.0, Z2=7.5, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=7.0, Angle=48, KBG=96, FKB=0, BKB=50, Size=3.5, X=0.0, Y=5.0, Z=4.0, X2=0.0, Y2=5.0, Z2=4.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
}
wait(Frames=2)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=6.0, Angle=48, KBG=94, FKB=0, BKB=50, Size=3.5, X=0.0, Y=5.0, Z=7.5, X2=0.0, Y2=5.0, Z2=7.5, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=6.0, Angle=48, KBG=94, FKB=0, BKB=50, Size=3.5, X=0.0, Y=5.0, Z=4.0, X2=0.0, Y2=5.0, Z2=4.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
}
wait(Frames=8)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	AttackModule::clear_all()
}
frame(Frame=35)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	WorkModule::off_flag(Flag=FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING)
	0xe2af0()
}
