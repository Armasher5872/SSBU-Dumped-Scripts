frame(Frame=3)
for(3 Iterations){
	0xe7710()
	0xe7710()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe7710()){
		WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD)
		0xe7710()
	}
	frame(Frame=9)
	0xe7710()
	0xe7710()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe7710()){
		ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=2.0, Angle=368, KBG=100, FKB=90, BKB=0, Size=3.0, X=0.0, Y=11.7, Z=-6.0, X2=0.0, Y2=11.7, Z2=7.5, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		methodlib::L2CValue::as_hash()const(2, hash40("top"), 0, 24, 7)
		AttackModule::set_vec_target_pos()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
	}
	frame(Frame=10)
	0xe7710()
	0xe7710()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe7710()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.0, Angle=170, KBG=100, FKB=18, BKB=0, Size=4.6, X=0.0, Y=22.0, Z=-5.8, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=2.0, Angle=170, KBG=100, FKB=18, BKB=0, Size=4.6, X=0.0, Y=22.0, Z=5.8, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=2.0, Angle=95, KBG=100, FKB=40, BKB=0, Size=3.5, X=0.0, Y=14.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_A, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=2.0, Angle=270, KBG=100, FKB=5, BKB=0, Size=4.0, X=0.0, Y=23.6, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
		0xe7710()
	}
	wait(Frames=2)
	0xe7710()
	0xe7710()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe7710()){
		AttackModule::clear_all()
	}
	wait(Frames=2)
	0xe7710()
	0xe7710()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe7710()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=10.0, Angle=80, KBG=111, FKB=0, BKB=60, Size=6.4, X=0.0, Y=22.0, Z=-7.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=10.0, Angle=80, KBG=111, FKB=0, BKB=60, Size=6.4, X=0.0, Y=22.0, Z=7.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=10.0, Angle=90, KBG=111, FKB=0, BKB=60, Size=5.2, X=0.0, Y=23.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=10.0, Angle=90, KBG=111, FKB=0, BKB=60, Size=4.0, X=0.0, Y=14.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_purple"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
	0xe7710()
}
wait(Frames=4)
0xe7710()
0xe7710()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe7710()){
	AttackModule::clear_all()
}
