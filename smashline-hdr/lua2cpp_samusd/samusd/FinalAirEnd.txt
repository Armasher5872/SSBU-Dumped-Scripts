unsafe extern "C" fn effect_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("sys_final_aura"), false, true);
        EFFECT_FOLLOW_arg11(Hash40::new("samusd_gbeam_flash_01"), Hash40::new("armr"), 8, 0, 0, 0, 0, 0, 1, true, *FIGHTER_INSTANCE_WORK_ID_INT_COLOR);
        EffectModule::remove_screen(boma, Hash40::new("bg_samusd_final"), -1);
    }
    frame(lua_state, 2.0);
    for _ in 0..11 {
    wait(lua_state, 6.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("samusd_final_after"), Hash40::new("emit"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 360, 360, 360, true);
        EFFECT(agent, Hash40::new("samusd_final_flash"), Hash40::new("top"), 0, 10, 0, 0, 0, 0, 1, 0, 0, 0, 360, 360, 360, true);
    }
}
frame(lua_state, 69.0);
if is_excute(agent) {
    EFFECT(agent, 0x1b905a71d7, Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
}
}

unsafe extern "C" fn sound_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE_REMAIN(agent, Hash40::new("se_samusd_final03"));
    }
}

unsafe extern "C" fn expression_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}