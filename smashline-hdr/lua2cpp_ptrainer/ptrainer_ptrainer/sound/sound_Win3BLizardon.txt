#[acmd_script( agent = "ptrainer_ptrainer", script = "sound_win3blizardon", category = ACMD_SOUND, low_priority )]
unsafe fn sound_win3blizardon(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    
        
            frame(lua_state, 40.0);
            if is_excute(fighter) {
                PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
            }
            else{
            
                frame(lua_state, 68.0);
                if is_excute(fighter) {
                    PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
                }
                else{
                
                    frame(lua_state, 68.0);
                    if is_excute(fighter) {
                        PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
                    }
                    else{
                    
                        frame(lua_state, 68.0);
                        if is_excute(fighter) {
                            PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
                        }
                        else{
                        
                            frame(lua_state, 68.0);
                            if is_excute(fighter) {
                                PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
                            }
                            else{
                            
                                frame(lua_state, 68.0);
                                if is_excute(fighter) {
                                    PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 1 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
    PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

    frame(lua_state, 68.0);
    if is_excute(fighter) {
        PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
    }
    else{
    
        frame(lua_state, 68.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
        }
        else{
        
            frame(lua_state, 68.0);
            if is_excute(fighter) {
                PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
            }
        }
    }
}
}
}
}
}
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 2 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
}
}
}
}
}
}
}
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 3 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
}
}
}
}
}
}
}
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 4 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
}
}
}
}
}
}
}
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 5 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
}
}
}
}
}
}
}
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 6 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
}
}
}
}
}
}
}
}
}
}
}
}
else{
if GET_VOICE_VARIATION(fighter) == 7 {

frame(lua_state, 40.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
else{

frame(lua_state, 68.0);
if is_excute(fighter) {
PLAY_SE(fighter, Hash40::new("vc_ptrainer_win"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}