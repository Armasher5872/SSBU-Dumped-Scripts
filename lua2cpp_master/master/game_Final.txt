frame(Frame=1)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	SLOW_OPPONENT(14, 60)
	0x333150()
	0x333150()
}
WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
0x333150(false, false)
0x333150()
0x333150()
if(0x333150()){
	frame(Frame=5)
	0x333150()
	0x333150()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x333150()){
		FT_SET_FINAL_FEAR_FACE(50)
		0x333150()
	}
}
get_value_float(SO_VAR_FLOAT_LR)
0x333150(0, 0)
0x333150()
0x333150()
if(0x333150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x333150()){
		REQ_FINAL_START_CAMERA(hash40("d04finalstart02.nuanmb"), false)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x333150()){
			PostureModule::scale(4, 0)
			0x333150(-1522244318, 2.1)
			0x333150()
			CAM_ZOOM_IN_arg5(0, 0)
			0x333150()
			0x333150()
			0x333150()
			0x333150()
			0x333150()
			0x333150()
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x333150()){
				REQ_FINAL_START_CAMERA(hash40("d04finalstart.nuanmb"), false)
				0x333150()
				0x333150()
			}
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x333150()){
				FT_START_CUTIN()
			}
		}
	}
}
frame(Frame=30)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	CAM_ZOOM_OUT()
}
frame(Frame=44)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=10.0, Angle=60, KBG=70, FKB=0, BKB=70, Size=10.0, X=0.0, Y=8.0, Z=11.0, X2=0.0, Y2=8.0, Z2=15.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	AttackModule::set_no_dead_all(true, false)
	0x333150()
	0x333150()
}
frame(Frame=46)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=10.0, Angle=60, KBG=70, FKB=0, BKB=70, Size=10.0, X=0.0, Y=8.0, Z=11.0, X2=0.0, Y2=8.0, Z2=35.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	AttackModule::set_no_dead_all(true, false)
	0x333150()
	0x333150()
}
frame(Frame=47)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=10.0, Angle=60, KBG=70, FKB=0, BKB=70, Size=10.0, X=0.0, Y=8.0, Z=11.0, X2=0.0, Y2=8.0, Z2=50.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	AttackModule::set_no_dead_all(true, false)
	0x333150()
	0x333150()
}
frame(Frame=50)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=10.0, Angle=60, KBG=70, FKB=0, BKB=70, Size=10.0, X=0.0, Y=8.0, Z=11.0, X2=0.0, Y2=8.0, Z2=30.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	AttackModule::set_no_dead_all(true, false)
	0x333150()
	0x333150()
}
frame(Frame=64)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	AttackModule::clear_all()
}
frame(Frame=120)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ArticleModule::remove_exist(FIGHTER_MASTER_GENERATE_ARTICLE_SWORD)
	0x333150()
}
