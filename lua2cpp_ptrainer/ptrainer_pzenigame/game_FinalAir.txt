frame(Frame=30)
0x43c10()
0x43c10()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x43c10()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.5, Angle=30, KBG=100, FKB=20, BKB=0, Size=5.0, X=0.0, Y=0.0, Z=25.0, X2=0.0, Y2=-8.0, Z2=40.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=7, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=0.5, Angle=330, KBG=100, FKB=20, BKB=0, Size=5.0, X=0.0, Y=10.0, Z=25.0, X2=0.0, Y2=17.0, Z2=40.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=7, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_no_uniq_effect_all(true, false)
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(0, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(2, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
}
frame(Frame=36)
0x43c10()
0x43c10()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x43c10()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.5, Angle=30, KBG=100, FKB=20, BKB=0, Size=5.0, X=0.0, Y=0.0, Z=25.0, X2=0.0, Y2=-18.0, Z2=60.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=7, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=0.5, Angle=330, KBG=100, FKB=20, BKB=0, Size=5.0, X=0.0, Y=10.0, Z=25.0, X2=0.0, Y2=26.0, Z2=60.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=7, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_no_uniq_effect_all(true, false)
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(0, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(2, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
}
frame(Frame=40)
0x43c10()
0x43c10()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x43c10()){
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=1.0, Angle=110, KBG=100, FKB=80, BKB=0, Size=10.0, X=0.0, Y=-19.0, Z=63.0, X2=0.0, Y2=-22.0, Z2=70.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=1.0, Angle=250, KBG=100, FKB=80, BKB=0, Size=10.0, X=0.0, Y=28.0, Z=63.0, X2=0.0, Y2=31.0, Z2=70.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_no_uniq_effect_all(true, false)
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(1, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(3, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
}
frame(Frame=46)
0x43c10()
0x43c10()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x43c10()){
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=1.0, Angle=110, KBG=100, FKB=80, BKB=0, Size=10.0, X=0.0, Y=-19.0, Z=63.0, X2=0.0, Y2=-30.0, Z2=90.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=1.0, Angle=250, KBG=100, FKB=80, BKB=0, Size=10.0, X=0.0, Y=28.0, Z=63.0, X2=0.0, Y2=40.0, Z2=90.0, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_WATER, Type=ATTACK_REGION_NONE)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_no_uniq_effect_all(true, false)
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(1, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	AttackModule::set_final_finish_cut_in(3, true, true, -1, false)
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
	0x43c10()
}
frame(Frame=210)
0x43c10()
0x43c10()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x43c10()){
	AttackModule::clear_all()
}
