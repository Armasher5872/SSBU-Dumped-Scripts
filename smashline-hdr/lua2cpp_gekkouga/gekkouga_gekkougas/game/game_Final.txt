#[acmd_script( agent = "gekkouga_gekkougas", script = "game_final", category = ACMD_GAME, low_priority )]
unsafe fn game_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CAM_ZOOM_OUT(agent);
        ArticleModule::change_motion(boma, *WEAPON_GEKKOUGA_GEKKOUGAS_GENERATE_ARTICLE_TATAMI, Hash40::new("final"), false, -1.0);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 5.0, 361, 40, 0, 8, 21.0, 0.0, 10.0, 20.0, Some(0.0), Some(10.0), Some(24.0), 1.0, 2.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 7.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 42.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *WEAPON_GEKKOUGA_GEKKOUGAS_INSTANCE_WORK_ID_FLAG_MOVE_START);
    }
    frame(lua_state, 68.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *WEAPON_GEKKOUGA_GEKKOUGAS_INSTANCE_WORK_ID_FLAG_ENABLE_FINISH);
    }
}