#[acmd_script( agent = "sonic", script = "effect_specialsspin", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_specialsspin(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        macros::EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("sonic_spinblur_slow"), Hash40::new("sphere"), 0, 0, 0, 0, 0, 0, 1, true);
        EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 2.0);
    if macros::is_excute(fighter) {
        macros::EFFECT_FOLLOW_NO_STOP(fighter, Hash40::new("sonic_spintrace"), Hash40::new("top"), 0, 5, 0, 0, 0, 0, 1, true);
        EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
    }
    for _ in 0..3 {
    if get_value_float(fighter, *SO_VAR_FLOAT_LR) < 0.0 {
        if macros::is_excute(fighter) {
            macros::EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.85, true);
            macros::LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
        }
    }
    wait(fighter.lua_state_agent, 5.0);
    if macros::is_excute(fighter) {
        macros::EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 90, 0, 0.85, true);
        macros::LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
    }
    else{
    if macros::is_excute(fighter) {
        macros::EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 89, 0, 0.85, true);
        macros::LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
    }
}
wait(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
    macros::EFFECT_FOLLOW_NO_SCALE(fighter, Hash40::new("sonic_spinwind_oneshot"), Hash40::new("sphere"), 0, 0, 0, 0, 89, 0, 0.85, true);
    macros::LAST_EFFECT_SET_COLOR(fighter, 0.711, 0.931, 1);
}
wait(fighter.lua_state_agent, 5.0);
}
if macros::is_excute(fighter) {
macros::EFFECT_OFF_KIND(fighter, Hash40::new("sonic_spinwind_oneshot"), false, false);
}
}