#[acmd_script( agent = "link", script = "expression_itemspecialflaghoist", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_itemspecialflaghoist(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("shield"), Hash40::new("shield_back"));
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    macros::IS_HAVE_ITEM_KIND(fighter, *ITEM_KIND_SPECIALFLAG);
    if(0x11e440(false, true)){
        frame(fighter.lua_state_agent, 11.0);
        if macros::is_excute(fighter) {
            ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_sp_flag"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
    frame(fighter.lua_state_agent, 14.0);
    if macros::is_excute(fighter) {
        ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_getbonusl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    else{
    macros::IS_HAVE_ITEM_KIND(fighter, *ITEM_KIND_BOMBER);
    if(0x11e440(false, true)){
        frame(fighter.lua_state_agent, 13.0);
        if macros::is_excute(fighter) {
            ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_explosionl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
}
frame(fighter.lua_state_agent, 58.0);
if macros::is_excute(fighter) {
    VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("shield"), Hash40::new("shield_normal"));
}
}