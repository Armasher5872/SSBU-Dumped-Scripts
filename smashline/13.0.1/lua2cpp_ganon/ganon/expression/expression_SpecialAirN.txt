if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
}frame(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_elecattacks"), 0, true);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 11.0);
if macros::is_excute(fighter) {
AREA_WIND_2ND_arg10(0, 2, 75, 2, 1, 0, 12, 50, 30, 50);
}frame(fighter.lua_state_agent, 35.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 36.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_23_hold"), 0, true);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 56.0);
if macros::is_excute(fighter) {
AreaModule::erase_wind(fighter.module_accessor, 0);
}frame(fighter.lua_state_agent, 64.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 68.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackl"), 0, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 70.0);
if macros::is_excute(fighter) {
QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
RUMBLE_HIT(fighter, Hash40::new("rbkind_attack_critical"), 0);
}frame(fighter.lua_state_agent, 71.0);
if macros::is_excute(fighter) {
AREA_WIND_2ND_arg10(0, 3, 120, 2, 1, 0, 12, 50, 30, 0);
}frame(fighter.lua_state_agent, 101.0);
if macros::is_excute(fighter) {
AreaModule::erase_wind(fighter.module_accessor, 0);
}