if macros::is_excute(fighter) {
damage(MSC=*MA_MSC_DAMAGE_DAMAGE_NO_REACTION, Type=*DAMAGE_NO_REACTION_MODE_DAMAGE_POWER, DamageThreshold=11.99);
macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 0.0, 65, 230, 0, 45, 0.0, 1.0, *ATTACK_LR_CHECK_B, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
}frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 15.0, 65, 30, 0, 60, 4.0, 0.0, 4.0, 4.2, Some(0.0), Some(4.0), Some(-3.2), 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
AttackModule::set_catch_only_all(fighter.module_accessor, true, false);
macros::CHECK_FINISH_CAMERA(fighter, -6, 7);
FighterCutInManager::set_throw_finish_zoom_rate(fighter.module_accessor, 1.4);
}frame(fighter.lua_state_agent, 3.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
}frame(fighter.lua_state_agent, 11.0);
if macros::is_excute(fighter) {
macros::ATK_HIT_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, Hash40::new("throw"), *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO);
JostleModule::set_status(fighter.module_accessor, false);
}macros::FT_MOTION_RATE(fighter, 0.8);
frame(fighter.lua_state_agent, 16.0);
if macros::is_excute(fighter) {
macros::REVERSE_LR(fighter);
}frame(fighter.lua_state_agent, 29.0);
if macros::is_excute(fighter) {
damage(MSC=*MA_MSC_DAMAGE_DAMAGE_NO_REACTION, Type=*DAMAGE_NO_REACTION_MODE_NORMAL, DamageThreshold=0);
JostleModule::set_status(fighter.module_accessor, true);
}frame(fighter.lua_state_agent, 41.0);
macros::FT_MOTION_RATE(fighter, 1);
