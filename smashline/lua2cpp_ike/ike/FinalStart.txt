unsafe extern "C" fn game_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::WHOLE_HIT(agent, *HIT_STATUS_XLU);
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 1, 20, 0, 0, 0);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 25, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 4, 30);
        VisibilityModule::set_int64(agent.module_accessor, hash40("sword") as i64, hash40("sword_hide") as i64);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_IKE_INSTANCE_WORK_ID_FLAG_SWORD_FINAL);
        ArticleModule::generate_article(agent.module_accessor, *FIGHTER_IKE_GENERATE_ARTICLE_SWORD, false, -1);
    }
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(agent.lua_state_agent, 5.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 7);
            macros::REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstart.nuanmb"), false);
            macros::FT_START_CUTIN(agent);
        }
    }
    frame(agent.lua_state_agent, 7.0);
    if macros::is_excute(agent) {
        SlowModule::set_whole(agent.module_accessor, 20, 0);
    }
    else{
    if macros::is_excute(agent) {
        PostureModule::scale(agent.module_accessor, 5, 0);
        0x149b00(1738818520, 2);
        CAM_ZOOM_IN_arg5(0, 0);
        macros::FT_START_CUTIN(agent);
    }
}
frame(agent.lua_state_agent, 9.0);
if macros::is_excute(agent) {
    SlowModule::clear_whole(agent.module_accessor);
}
frame(agent.lua_state_agent, 13.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 0, Hash40::new("sword"), 5.0, 75, 100, 0, 50, 15.0, 0.0, 8.4, 3.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_IKE, *ATTACK_REGION_NONE);
    macros::ATTACK(agent, 1, 0, Hash40::new("sword"), 5.0, 80, 100, 0, 50, 15.0, 0.0, 19.4, 3.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_IKE, *ATTACK_REGION_NONE);
    macros::ATTACK(agent, 2, 0, Hash40::new("top"), 5.0, 70, 100, 0, 50, 15.0, 0.0, 8.0, 7.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_IKE, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(agent.module_accessor, true, false);
    WorkModule::on_flag(agent.module_accessor, *FIGHTER_IKE_STATUS_FINAL_FLAG_SWORD_THROW_START);
}
frame(agent.lua_state_agent, 15.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 20.0);
if macros::is_excute(agent) {
    macros::WHOLE_HIT(agent, *HIT_STATUS_NORMAL);
}
frame(agent.lua_state_agent, 30.0);
if macros::is_excute(agent) {
    macros::CAM_ZOOM_OUT(agent);
}
}

unsafe extern "C" fn effect_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_ike_final"), false, false, false);
    }
    frame(agent.lua_state_agent, 7.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("ike_final_sword"), Hash40::new("sword"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(agent.lua_state_agent, 8.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("ike_final_sword_fire"), Hash40::new("sword"), 0, 0, 0, 0, 0, 0, 1, false);
        macros::AFTER_IMAGE4_ON_arg29(agent, Hash40::new("tex_ike_sword5"), Hash40::new("tex_ike_sword2"), 6, Hash40::new("sword"), 0, 1, 0, Hash40::new("sword"), 0, 16.2, 0, false, Hash40::new("null"), Hash40::new("sword"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
    }
    frame(agent.lua_state_agent, 12.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("ike_final_start"), Hash40::new("top"), 0, 13, 14, 70, -90, 0, 1, false);
        macros::EFFECT(agent, Hash40::new("ike_final_start2"), Hash40::new("top"), 0, 13, 14, 70, -90, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 15.0);
    if macros::is_excute(agent) {
        macros::EFFECT_OFF_KIND(agent, Hash40::new("ike_final_start2"), false, true);
    }
    frame(agent.lua_state_agent, 19.0);
    if macros::is_excute(agent) {
        macros::AFTER_IMAGE_OFF(agent, 2);
    }
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        macros::EFFECT_OFF_KIND(agent, Hash40::new("ike_final_sword"), false, true);
        EffectModule::remove_screen(agent.module_accessor, Hash40::new("bg_ike_final"), -1);
    }
}

unsafe extern "C" fn sound_finalstart(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 13.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE_REMAIN(agent, Hash40::new("se_ike_final03"));
    }
}

unsafe extern "C" fn expression_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::START_INFO_FLASH_EYE(agent);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 11.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_NONE);
    }
    frame(agent.lua_state_agent, 33.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
}