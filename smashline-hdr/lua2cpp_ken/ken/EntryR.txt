unsafe extern "C" fn effect_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("ken_entry"), Hash40::new("top"), 0, 0, -8, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true);
        FLASH(agent, 0.176, 0.176, 0.176, 1);
        ColorBlendModule::set_disable_camera_depth_influence(boma, true);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 20, 0.176, 0.176, 0.176, 0);
    }
    wait(lua_state, 20.0);
    if is_excute(agent) {
        COL_NORMAL(agent);
        ColorBlendModule::set_disable_camera_depth_influence(boma, false);
    }
    frame(lua_state, 110.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_ALPHA(agent, 0.5);
    }
}

unsafe extern "C" fn sound_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear02"));
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_ken_appear"));
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear_step_right"));
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear_step_left"));
    }
    frame(lua_state, 71.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear_step_right"));
    }
    frame(lua_state, 89.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear01"));
    }
    frame(lua_state, 95.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear_step_left_02"));
    }
    frame(lua_state, 107.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ken_appear03"));
    }
}

unsafe extern "C" fn expression_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f20a9d549), false);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x24772eddef), false);
        WorkModule::on_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
    frame(lua_state, 80.0);
    if is_excute(agent) {
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f20a9d549), true);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x24772eddef), true);
    }
    frame(lua_state, 87.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 4);
    }
    frame(lua_state, 100.0);
    if is_excute(agent) {
        WorkModule::off_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
}