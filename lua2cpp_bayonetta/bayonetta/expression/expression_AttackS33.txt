methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_R)
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=6)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=16)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_L, 3)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=19)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=22)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	RUMBLE_HIT(hash40("rbkind_attackm"), 0)
	0x1cb230()
	0x1cb230()
}
frame(Frame=36)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
