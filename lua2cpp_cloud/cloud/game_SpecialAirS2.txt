methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	WorkModule::on_flag(Flag=FIGHTER_CLOUD_STATUS_SPECIAL_S_FLAG_INPUT_CHECK)
	0x180150()
	WorkModule::on_flag(Flag=FIGHTER_CLOUD_STATUS_SPECIAL_S_FLAG_DETACH_EFFECT)
	0x180150()
}
frame(Frame=2)
0x180150()
0x180150()
get_value_float(SO_VAR_FLOAT_LR)
0x180150(2001240, 0)
0x180150()
0x180150()
if(0x180150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x180150()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=95, KBG=25, FKB=0, BKB=33, Size=7.3, X=0.0, Y=13.5, Z=17.7, X2=0.0, Y2=9.0, Z2=15.7, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=3.0, Angle=60, KBG=25, FKB=0, BKB=43, Size=3.0, X=0.0, Y=8.5, Z=9.5, X2=0.0, Y2=8.5, Z2=9.5, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x180150()){
			ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=95, KBG=25, FKB=0, BKB=33, Size=7.3, X=0.0, Y=13.5, Z=15.7, X2=0.0, Y2=9.0, Z2=17.7, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=3.0, Angle=60, KBG=25, FKB=0, BKB=43, Size=3.0, X=0.0, Y=8.5, Z=9.5, X2=0.0, Y2=8.5, Z2=9.5, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
		}
	}
}
frame(Frame=4)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=14)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	WorkModule::on_flag(Flag=FIGHTER_CLOUD_STATUS_SPECIAL_S_FLAG_MOTION_CHANGE_ENABLE)
	0x180150()
}
frame(Frame=30)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	WorkModule::off_flag(Flag=FIGHTER_CLOUD_STATUS_SPECIAL_S_FLAG_INPUT_CHECK)
	0x180150()
}
