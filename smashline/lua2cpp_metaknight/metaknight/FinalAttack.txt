unsafe extern "C" fn game_finalattack(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::WHOLE_HIT(agent, *HIT_STATUS_XLU);
        macros::CAM_ZOOM_OUT(agent);
        ArticleModule::generate_article(agent.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_BUNSHIN, false, -1);
        ArticleModule::generate_article(agent.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_BUNSHIN, false, -1);
    }
    frame(agent.lua_state_agent, 20.0);
    if macros::is_excute(agent) {
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 35, -15, 10, -10);
    }
    frame(agent.lua_state_agent, 28.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 36.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 45.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 56.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 64.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 69.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 74.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 83.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 87.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 92.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 99.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 105.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 110.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 117.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 124.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 129.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 136.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 139.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 147.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 153.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 156.0);
    if macros::is_excute(agent) {
        macros::CAM_ZOOM_OUT(agent);
    }
    frame(agent.lua_state_agent, 158.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    if macros::is_excute(agent) {
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ENABLE_TARGET_MOTION_RATE);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 164.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.2, 366, 100, 50, 0, 23.0, 0.0, 0.0, 20.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_METAKNIGHT_FINAL_HIT, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ATTACK_END);
    }
}

unsafe extern "C" fn effect_finalattack(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    for _ in 0..5 {
    if macros::is_excute(agent) {
        macros::BURN_COLOR(agent, 2, 0.15, 0.02, 1);
    }
    wait(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::BURN_COLOR_FRAME(agent, 1, 1, 1, 1, 0);
        macros::BURN_COLOR_NORMAL(agent);
    }
}
frame(agent.lua_state_agent, 27.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 0.024, 18.588, 90, 0, 0, 1.3, true);
    macros::LAST_EFFECT_SET_COLOR(agent, 1, 1, 1);
}
frame(agent.lua_state_agent, 28.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -40, 18.588, 90, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 35.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 0.099, 19.657, 133.7, 0, 0, 0.8, true);
}
frame(agent.lua_state_agent, 36.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -33.704, -12.646, 133.7, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 44.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 0.021, 18.911, 35.5, 0, 0, 1.2, true);
}
frame(agent.lua_state_agent, 45.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -25.404, 54.556, 35.5, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 49.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 4.041, 23.331, -147.842, 0, 0, 0.5, true);
}
frame(agent.lua_state_agent, 50.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 31.835, -20.878, -147.842, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 55.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -3.407, 21.893, 133.276, 0, 0, 0.9, true);
}
frame(agent.lua_state_agent, 56.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -33.229, -6.187, 133.276, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 63.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -1.149, 19.135, 204.508, 0, 0, 0.4, true);
}
frame(agent.lua_state_agent, 64.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 17.118, -20.934, 204.508, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 68.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -1.306, 19.291, -29.125, 0, 0, 1.3, true);
}
frame(agent.lua_state_agent, 69.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 24.374, 65.382, -29.125, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 75.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 4.072, 19.057, -141.36, 0, 0, 0.6, true);
}
frame(agent.lua_state_agent, 74.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 28.574, -11.591, -141.36, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 82.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 0.06, 30.717, 89.552, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 83.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -40.53, 31.035, 89.552, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 86.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 2.944, 19.011, 186.303, 0, 0, 0.6, true);
}
frame(agent.lua_state_agent, 87.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 8.072, -27.413, 186.303, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 91.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -4.612, 23.427, -43.76, 0, 0, 0.4, true);
}
frame(agent.lua_state_agent, 92.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 30.53, 60.125, -43.76, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 98.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -1.02, 19.06, -143.737, 0, 0, 1.2, true);
}
frame(agent.lua_state_agent, 99.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 23.209, -13.968, -143.737, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 104.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 1.854, 19.092, -32.5, 0, 0, 0.8, true);
}
frame(agent.lua_state_agent, 105.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 26.051, 57.074, -32.5, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 109.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 0.255, 5.854, 93.578, 0, 0, 1.3, true);
}
frame(agent.lua_state_agent, 110.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -36.879, 3.532, 93.578, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 116.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 5.569, 24.521, -150.465, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 117.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 30.061, -18.706, -150.465, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 123.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -2.095, 21.005, 146.376, 0, 0, 1.5, true);
}
frame(agent.lua_state_agent, 124.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -29.164, -19.701, 146.376, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 128.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 3.456, 22.56, -157.462, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 129.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 20.885, -19.438, -157.462, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 135.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -2.642, 21.788, 136.412, 0, 0, 0.6, true);
}
frame(agent.lua_state_agent, 136.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -25.392, -2.111, 136.412, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 138.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 2.857, 15.518, -22.187, 0, 0, 1.1, true);
}
frame(agent.lua_state_agent, 139.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 19.726, 56.881, -22.187, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 145.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -2.36, 19.143, -148.576, 0, 0, 0.8, true);
}
frame(agent.lua_state_agent, 146.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 21.811, -20.419, -148.576, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 152.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 0.05, 9.752, 91.959, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 153.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, -60.226, 7.69, 91.959, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 157.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, 2.918, 19.07, -15.852, 0, 0, 0.5, true);
}
frame(agent.lua_state_agent, 158.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 16.116, 65.548, -15.852, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 163.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), 10, -1.284, 19.193, -146, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 164.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("metaknight_final_dash"), Hash40::new("top"), 0, 25.789, -20.944, -146, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 175.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("metaknight_final_dash"), false, false);
}
frame(agent.lua_state_agent, 238.0);
if macros::is_excute(agent) {
    EffectModule::set_disable_render_offset_last(agent.module_accessor);
}
frame(agent.lua_state_agent, 240.0);
}

unsafe extern "C" fn sound_finalattack(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final03"));
    }
    frame(agent.lua_state_agent, 27.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final04"));
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 35.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 44.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 55.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 63.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 68.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 82.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 86.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 91.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 98.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 104.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 109.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 116.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 123.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 128.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 135.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 138.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 145.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 152.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 157.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
    }
    frame(agent.lua_state_agent, 163.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final05"));
        macros::PLAY_SE(agent, Hash40::new("se_metaknight_final06"));
    }
}

unsafe extern "C" fn expression_finalattack(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        VisibilityModule::set_status_default_int64(agent.module_accessor, Hash40::new("mantle"), Hash40::new("mantle_wing"));
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    frame(agent.lua_state_agent, 28.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 36.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 45.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 56.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 64.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 69.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 74.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 83.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 88.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 93.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 99.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 105.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 110.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 117.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 124.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 129.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 136.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 141.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 146.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 152.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 158.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 164.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_slashm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 234.0);
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_slashll"), 0);
    }
}