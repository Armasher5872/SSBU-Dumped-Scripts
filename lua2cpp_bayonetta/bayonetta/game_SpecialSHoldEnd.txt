frame(Frame=1)
0x1cb230()
0x1cb230()
FT_MOTION_RATE(FSM=0.5)
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	notify_event_msc_cmd(0x2d51fcdb09, FIGHTER_BAYONETTA_SHOOTING_SLOT_R_LEG, false, false, true, 2, 0, 0, 0, false)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=0, Part=0, Bone=hash40("footr"), Damage=8.0, Angle=80, KBG=8, FKB=0, BKB=60, Size=4.0, X=0.0, Y=0.0, Z=0.0, X2=-8.0, Y2=0.0, Z2=0.0, Hitlag=1.0, SDI=1.3, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_INSTANCE_WORK_ID_FLAG_SHOOTING_ACTION)
	0x1cb230()
}
frame(Frame=23)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_INSTANCE_WORK_ID_FLAG_SHOOTING_CHECK_END)
	0x1cb230()
	AttackModule::clear_all()
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_S_FLAG_END_SPECIAL_S)
	0x1cb230()
}
frame(Frame=34)
0x1cb230()
0x1cb230()
FT_MOTION_RATE(FSM=0.75)
0x1cb230()
frame(Frame=37)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	ATTACK(ID=0, Part=0, Bone=hash40("kneer"), Damage=5.0, Angle=98, KBG=65, FKB=0, BKB=64, Size=5.3, X=7.5, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.3, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=1, Part=0, Bone=hash40("kneer"), Damage=5.0, Angle=98, KBG=65, FKB=0, BKB=64, Size=4.0, X=1.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.3, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=2, Part=0, Bone=hash40("waist"), Damage=5.0, Angle=90, KBG=65, FKB=0, BKB=64, Size=4.5, X=0.0, Y=-0.8, Z=-1.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.3, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=44)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	AttackModule::clear_all()
}
