if(is_excute){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2)
	ItemModule::set_have_item_visibility(false)
}
frame(Frame=2)
if(is_excute){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2, true)
}
frame(Frame=3)
execute(3)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("haver"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2, true)
}
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
	if(is_excute){
		ItemModule::set_have_item_visibility(false)
		slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2, true)
	}
}
frame(Frame=6)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 0, false)
	ControlModule::set_rumble()
}
frame(Frame=8)
if(is_excute){
	RUMBLE_HIT(hash40("rbkind_attacks"), 0)
}
frame(Frame=19)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
}
frame(Frame=21)
if(is_excute){
	RUMBLE_HIT(hash40("rbkind_slashl"), 0)
}
frame(Frame=40)
if(is_excute){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 8)
}
