unsafe extern "C" fn effect_visualscene01(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("rockman_final_bg"), Hash40::new("top"), 0, 20, -40, 0, -20, 0, 1, true);
    }
    frame(lua_state, 51.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("rockman_final_charge"), Hash40::new("havel"), 0, 0, 0.5, 0, 0, 0, 1, true);
    }
    frame(lua_state, 72.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("rockman_final_bg2"), Hash40::new("top"), 3.3, 12, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 77.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("rockman_final_bg"), true, true);
    }
    frame(lua_state, 182.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("rockman_final_chargeshot"), Hash40::new("top"), 0, 5, -14, 0, 0, 0, 1, true);
    }
    frame(lua_state, 183.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_COLOR(agent, Hash40::new("rockman_final_beam2"), Hash40::new("havel"), 0, -0.5, 1, -5, 0, 0, 1, true, 0.176, 0.459, 1);
    }
}

unsafe extern "C" fn sound_visualscene01(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        PLAY_SE_REMAIN(agent, Hash40::new("se_rockman_final03"));
    }
    frame(lua_state, 73.0);
    if is_excute(agent) {
        PLAY_SE_REMAIN(agent, Hash40::new("se_rockman_final04"));
    }
}

unsafe extern "C" fn expression_visualscene01(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f5b14bb65), *FIGHTER_ROCKMAN_ARM_LEFT, *FIGHTER_ROCKMAN_ARMFORM_HAND, 0);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f5b14bb65), *FIGHTER_ROCKMAN_ARM_RIGHT, *FIGHTER_ROCKMAN_ARMFORM_HAND, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase_sp"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_erase_sp"), 0);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_erase_sp"), 0);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_slashs"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_slashs"), 0);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_slashs"), 0);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_slashs"), 14, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_slashs"), 14);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_slashs"), 14);
    }
    frame(lua_state, 35.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_slashs"), 13, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_slashs"), 13);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_slashs"), 13);
    }
    frame(lua_state, 49.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_slashs"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_slashs"), 0);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_slashs"), 0);
    }
    frame(lua_state, 80.0);
    if is_excute(agent) {
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f5b14bb65), *FIGHTER_ROCKMAN_ARM_LEFT, *FIGHTER_ROCKMAN_ARMFORM_ROCKBUSTER, 5, 390);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f5b14bb65), *FIGHTER_ROCKMAN_ARM_RIGHT, *FIGHTER_ROCKMAN_ARMFORM_HAND, 0);
    }
    frame(lua_state, 90.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_smashhold1"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_smashhold1"), 0);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_smashhold1"), 0);
    }
    frame(lua_state, 163.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_erase"), 0);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_erase"), 0);
    }
    frame(lua_state, 185.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_attackl"), 0);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_attackl"), 0);
    }
    frame(lua_state, 197.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_loopattack"), 51, true, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_loopattack"), 51);
        RUMBLE_FINAL_OTHER(agent, Hash40::new("rbkind_loopattack"), 51);
    }
}