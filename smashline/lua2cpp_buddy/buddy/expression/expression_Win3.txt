#[acmd_script( agent = "buddy", script = "expression_win3" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_win3(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_BUDDY_GENERATE_ARTICLE_PIECE);
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_BUDDY_GENERATE_ARTICLE_STRINGS);
		ArticleModule::remove_exist(fighter.module_accessor, *FIGHTER_BUDDY_GENERATE_ARTICLE_HORN);
	}
	macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_BUDDY_GENERATE_ARTICLE_STRINGS);
	if(0x18cc20(false, false)){;
		if macros::is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_BUDDY_GENERATE_ARTICLE_STRINGS);
		}
	}
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(*FIGHTER_BUDDY_GENERATE_ARTICLE_STRINGS, Hash40::new("win_3"));
		ArticleModule::change_motion(fighter.module_accessor);
	}
	macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_BUDDY_GENERATE_ARTICLE_HORN);
	if(0x18cc20(false, false)){;
		if macros::is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_BUDDY_GENERATE_ARTICLE_HORN);
		}
	}
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(*FIGHTER_BUDDY_GENERATE_ARTICLE_HORN, Hash40::new("win_3"));
		ArticleModule::change_motion(fighter.module_accessor);
	}
