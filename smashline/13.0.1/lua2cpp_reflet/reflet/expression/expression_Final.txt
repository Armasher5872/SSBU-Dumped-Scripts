if macros::is_excute(fighter) {
	ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
}
frame(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}
frame(fighter.lua_state_agent, 8.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashs"), 10, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 20.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beamm"), 10, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 31.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashs"), 9, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 41.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 42.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashs"), 4, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 48.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 8, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 57.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 62.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beamm"), 7, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 71.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashs"), 14, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 87.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beamm"), 18, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 96.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 106.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 13, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 118.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 119.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 12, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 130.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}
frame(fighter.lua_state_agent, 132.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beamm"), 15, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 136.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 148.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 6, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 154.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 155.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashm"), 20, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 165.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 171.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}
frame(fighter.lua_state_agent, 176.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beamm"), 10, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 187.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_slashm"), 14, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 202.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 207.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}
frame(fighter.lua_state_agent, 216.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 220.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_smashhold1"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 260.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 263.0);
if macros::is_excute(fighter) {
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_explosionl"), 0);
}
