methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	ItemModule::set_have_item_visibility(false)
	0x349fc0()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=1)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 3)
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=6)
0x349fc0()
0x349fc0()
execute(6)
0x349fc0()
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
0x349fc0(false, true)
0x349fc0()
0x349fc0()
if(0x349fc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x349fc0()){
		ItemModule::set_have_item_visibility(false)
		0x349fc0()
	}
}
frame(Frame=9)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	methodlib::L2CValue::as_hash()const(0x1085aaa485, 7, false)
	ControlModule::set_rumble()
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
0x349fc0(60200, 19424)
0x349fc0()
0x349fc0()
if(0x349fc0()){
	frame(Frame=11)
	0x349fc0()
	0x349fc0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x349fc0()){
		RUMBLE_HIT(hash40("rbkind_slash_critical"), 22)
	}
	else{
		0x349fc0(60200, 19420)
		0x349fc0()
		0x349fc0()
		if(0x349fc0()){
			frame(Frame=11)
			0x349fc0()
			0x349fc0()
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x349fc0()){
				RUMBLE_HIT(hash40("rbkind_slashl"), 12)
			}
			else{
				0x349fc0(60200, 19412)
				0x349fc0()
				0x349fc0()
				if(0x349fc0()){
					frame(Frame=11)
					0x349fc0()
					0x349fc0()
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x349fc0()){
						RUMBLE_HIT(hash40("rbkind_slashll"), 9)
					}
					else{
						0x349fc0(60200, 19408)
						0x349fc0()
						0x349fc0()
						if(0x349fc0()){
							frame(Frame=11)
							0x349fc0()
							0x349fc0()
							methodlib::L2CValue::operatorbool()const(is_excute)
							if(0x349fc0()){
								RUMBLE_HIT(0x113697d0ae, 0)
							}
							else{
								0x349fc0(60200, 19404)
								0x349fc0()
								0x349fc0()
								if(0x349fc0()){
									frame(Frame=11)
									0x349fc0()
									0x349fc0()
									methodlib::L2CValue::operatorbool()const(is_excute)
									if(0x349fc0()){
										RUMBLE_HIT(0x113697d0ae, 0)
									}
									else{
										frame(Frame=0)
										0x349fc0()
										0x349fc0()
										methodlib::L2CValue::operatorbool()const(is_excute)
										if(0x349fc0()){
											RUMBLE_HIT(0x11cc98edcd, 0)
											0x349fc0()
											0x349fc0()
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
frame(Frame=15)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=40)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	ItemModule::set_have_item_visibility(true)
	0x349fc0()
}
