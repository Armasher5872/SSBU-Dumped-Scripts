WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_RESULT_FIGHTER_SINGLE)
if(0x357740(false, false)){
	if(is_excute){
		ArticleModule::generate_article(FIGHTER_ELIGHT_GENERATE_ARTICLE_DIVER)
		methodlib::L2CValue::as_hash()const(FIGHTER_ELIGHT_GENERATE_ARTICLE_DIVER, hash40("l_win_1"))
		ArticleModule::change_motion()
	}
}
IS_EXIST_ARTICLE(FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD)
if(0x357740(false, true)){
	if(is_excute){
		methodlib::L2CValue::as_hash()const(FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD, WEAPON_ELIGHT_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, hash40("to_open"), 10, 10, false, false, 0, false, true, false)
		ArticleModule::add_motion_partial()
	}
}
MotionModule::is_changing()
if(0x357740(false, true)){
	if(is_excute){
		WorkModule::on_flag(Flag=FIGHTER_ELIGHT_INSTANCE_WORK_ID_FLAG_ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING)
	}
}
frame(0, 133)
IS_EXIST_ARTICLE(FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD)
if(0x357740(false, true)){
	if(is_excute){
		methodlib::L2CValue::as_hash()const(FIGHTER_ELIGHT_GENERATE_ARTICLE_ESWORD, WEAPON_ELIGHT_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, hash40("to_close"), 5, 5, false, false, 0, false, true, false)
		ArticleModule::add_motion_partial()
	}
}
MotionModule::is_changing()
if(0x357740(false, true)){
	if(is_excute){
		WorkModule::on_flag(Flag=FIGHTER_ELIGHT_INSTANCE_WORK_ID_FLAG_ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING)
	}
}
