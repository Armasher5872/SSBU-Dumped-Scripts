methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, ID=1, Damage=7.0, Angle=361, KBG=100, FKB=0, BKB=50, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=1, Damage=4.0, Angle=361, KBG=50, FKB=0, BKB=0, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	ATK_HIT_ABS(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, hash40("throw"), FIGHTER_DIDDY_STATUS_MONKEY_FLIP_WORK_INT_TARGET_TASK, FIGHTER_DIDDY_STATUS_MONKEY_FLIP_WORK_INT_TARGET_HIT_GROUP, FIGHTER_DIDDY_STATUS_MONKEY_FLIP_WORK_INT_TARGET_HIT_NO)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	KineticModule::change_kinetic(FIGHTER_KINETIC_TYPE_AIR_STOP)
	0x1483f0()
	CORRECT(GROUND_CORRECT_KIND_AIR)
	0x1483f0()
	SA_SET(State=SITUATION_KIND_AIR)
	0x1483f0()
	WorkModule::enable_transition_term(FIGHTER_DIDDY_STATUS_SPECIAL_S_TRANSITION_TERM_ID_GROUND)
	0x1483f0()
	SET_SPEED(-1.5, 2.5)
	0x1483f0()
	0x1483f0()
}
frame(Frame=3)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	KineticModule::change_kinetic(FIGHTER_KINETIC_TYPE_FALL)
	0x1483f0()
}
