frame(Frame=2)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_FLIP(hash40("sys_smash_flash"), hash40("sys_smash_flash"), hash40("top"), 7, 14, 5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true, EF_FLIP_YZ)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=4)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	LANDING_EFFECT(hash40("sys_v_smoke_a"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=5)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_FOLLOW_FLIP_ALPHA(0x0f8d48debf, 0x0f8d48debf, hash40("top"), 0, 13.5, 0, 0, 60, 90, 1.1, true, EF_FLIP_YZ, 0.15)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	LAST_EFFECT_SET_RATE(2)
	0x1483f0()
}
frame(Frame=11)
0x1483f0()
0x1483f0()
frame(Frame=12)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_FOLLOW_FLIP_ALPHA(0x0f8d48debf, 0x0f8d48debf, hash40("top"), -2, 16.5, 2.5, -20, 85, 90, 1, true, EF_FLIP_YZ, 0.15)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	LAST_EFFECT_SET_RATE(2)
	0x1483f0()
}
frame(Frame=17)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_OFF_KIND(0x0f8d48debf, true, true)
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=18)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_FOLLOW_FLIP_ALPHA(hash40("sys_attack_line"), hash40("sys_attack_line"), hash40("top"), 1.7, 10, 3.05, -100, 0, 0, 1.5, true, EF_FLIP_YZ, 0.5)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	LAST_EFFECT_SET_RATE(0.7)
	0x1483f0()
	EFFECT_FOLLOW_FLIP_ALPHA(hash40("sys_attack_speedline"), hash40("sys_attack_speedline"), hash40("top"), -1.5, 20, 2, -100, 0, 0, 0.8, true, EF_FLIP_YZ, 1.5)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	LAST_EFFECT_SET_COLOR(0.35, 0.7, 0.95)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	LAST_EFFECT_SET_RATE(0.85)
	0x1483f0()
}
frame(Frame=19)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT(0x12aedd3c87, hash40("havel"), -0.7, 0, -0.2, 0, 0, 0, 0.55, 0, 0, 0, 0, 0, 0, true)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=20)
0x1483f0()
0x1483f0()
frame(Frame=23)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_OFF_KIND(hash40("sys_attack_line"), true, true)
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=24)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	EFFECT_OFF_KIND(hash40("sys_attack_speedline"), true, true)
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=38)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	LANDING_EFFECT(hash40("sys_down_smoke"), hash40("top"), 2, 0, 4, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
