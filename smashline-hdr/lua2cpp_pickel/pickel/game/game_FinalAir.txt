unsafe extern "C" fn game_finalair(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_PICKEL_INSTANCE_WORK_ID_FLAG_REQUEST_REMOVE_HAVE_CRAFT_WEAPON);
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 30, 25);
    }
    frame(lua_state, 3.0);
    frame(lua_state, 5.0);
    if is_excute(agent) {
        ArticleModule::generate_article(boma, *FIGHTER_PICKEL_GENERATE_ARTICLE_PUSHFINAL, false, -1);
        FT_SET_FINAL_FEAR_FACE(agent, 50);
        FT_START_CUTIN(agent);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        if is_excute(agent) {
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04final.nuanmb"), false);
            SlowModule::set_whole(boma, 3, 0);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 4, 0);
            0x370870(189281854, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
        }
    }
}
frame(lua_state, 20.0);
if is_excute(agent) {
    SlowModule::clear_whole(boma);
}
frame(lua_state, 25.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 25.0);
if is_excute(agent) {
    ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 50, 100, 75, 0, 13.0, 0.0, 10.0, 16.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
    ATTACK(agent, 1, 0, Hash40::new("top"), 0.0, 40, 100, 70, 0, 13.0, 0.0, 10.0, 16.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
    ATTACK(agent, 0, 1, Hash40::new("top"), 0.0, 361, 100, 10, 0, 8.0, 0.0, 10.0, 16.0, Some(0.0), Some(10.0), Some(44.0), 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_paralyze"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
    AttackModule::set_no_dead_all(boma, true, false);
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 100, -50, 50, -10);
}
frame(lua_state, 44.0);
if is_excute(agent) {
    QUAKE(agent, *CAMERA_QUAKE_KIND_M);
}
frame(lua_state, 45.0);
if is_excute(agent) {
    AttackModule::clear_all(boma);
    WorkModule::on_flag(boma, *FIGHTER_PICKEL_STATUS_FINAL_FLAG_ATTACK);
    ATTACK_ABS(agent, *FIGHTER_PICKEL_ATTACK_ABSOLUTE_KIND_FINAL, 0, 15.0, 30, 120, 100, 0, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_OBJECT);
    AttackModule::set_no_dead_all(boma, true, true);
    WorkModule::on_flag(boma, *FIGHTER_PICKEL_STATUS_FINAL_FLAG_ABS_HIT);
    ATTACK(agent, 0, 0, Hash40::new("top"), 15.0, 35, 120, 0, 50, 12.0, 0.0, 10.0, 16.0, Some(0.0), Some(10.0), Some(47.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_OBJECT);
    AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 49.0);
if is_excute(agent) {
    AttackModule::clear_all(boma);
}
frame(lua_state, 90.0);
if is_excute(agent) {
    ArticleModule::remove_exist(boma, *FIGHTER_PICKEL_GENERATE_ARTICLE_PUSHFINAL, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
}