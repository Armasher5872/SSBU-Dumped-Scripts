frame(Frame=6)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	ATTACK(ID=0, Part=0, Bone=hash40("haver"), Damage=14.0, Angle=361, KBG=100, FKB=0, BKB=36, Size=5.0, X=0.0, Y=6.5, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=9, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	ATTACK(ID=1, Part=0, Bone=hash40("haver"), Damage=14.0, Angle=361, KBG=100, FKB=0, BKB=36, Size=3.0, X=0.0, Y=1.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=9, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
}
frame(Frame=8)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=14.0, Angle=361, KBG=100, FKB=0, BKB=36, Size=5.0, X=0.0, Y=5.5, Z=11.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=9, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=14.0, Angle=361, KBG=100, FKB=0, BKB=36, Size=3.0, X=0.0, Y=6.0, Z=5.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=9, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
}
frame(Frame=9)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	AttackModule::clear_all()
}
