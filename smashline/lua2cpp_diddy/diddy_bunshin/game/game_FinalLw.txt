#[acmd_script( agent = "diddy_bunshin", script = "game_finallw", category = ACMD_GAME, low_priority )]
unsafe fn game_finallw(agent: &mut L2CAgentBase) {
    PostureModule::scale(agent.module_accessor);
    if(0x148390(95671436, 1.4)){
        if macros::is_excute(agent) {
            macros::ATTACK(agent, 1, 0, Hash40::new("rot"), 2.0, 130, 60, 0, 45, 10.0, 0.0, 7.0, 0.0, Some(0.0), Some(-10.0), Some(0.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
            AttackModule::set_force_reaction(agent.module_accessor, 1, true, false);
        }
        else{
        PostureModule::scale(agent.module_accessor);
        if(0x148390(95671436, 0.5)){
            if macros::is_excute(agent) {
                macros::ATTACK(agent, 1, 0, Hash40::new("rot"), 2.0, 130, 60, 0, 45, 10.0, 0.0, 7.0, 0.0, Some(0.0), Some(-30.0), Some(0.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
                AttackModule::set_force_reaction(agent.module_accessor, 1, true, false);
            }
            else{
            if macros::is_excute(agent) {
                macros::ATTACK(agent, 1, 0, Hash40::new("rot"), 2.0, 130, 60, 0, 45, 10.0, 0.0, 7.0, 0.0, Some(0.0), Some(-10.0), Some(0.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
                AttackModule::set_force_reaction(agent.module_accessor, 1, true, false);
            }
        }
    }
}
}
if macros::is_excute(agent) {
AttackModule::set_final_finish_cut_in(agent.module_accessor, 1, true, false, -1, false);
}
}