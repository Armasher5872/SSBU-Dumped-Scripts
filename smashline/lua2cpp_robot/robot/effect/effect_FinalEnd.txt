#[acmd_script( agent = "robot", script = "effect_finalend" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_finalend(fighter: &mut L2CAgentBase) {
    for(7 Iterations){
    if macros::is_excute(fighter) {
        macros::EFFECT(fighter, Hash40::new("sys_damage_elec"), Hash40::new("top"), -0.0, 7, 0, 0, 0, 0, 1.2, 15, 10, 15, 0, 0, 0, true);
        macros::COL_PRI(fighter, 200);
        macros::BURN_COLOR(fighter, 0.02, 0.2, 2, 0.8);
    }
    frame(fighter.lua_state_agent, 1.0);
    if macros::is_excute(fighter) {
        macros::BURN_COLOR_FRAME(fighter, 2, 1, 1, 1, 0);
    }
    wait(fighter.lua_state_agent, 2.0);
    if macros::is_excute(fighter) {
        macros::BURN_COLOR_NORMAL(fighter);
        macros::FLASH(fighter, 0.3, 0.7, 1, 0.6);
    }
    wait(fighter.lua_state_agent, 1.0);
    if macros::is_excute(fighter) {
        macros::FLASH_FRM(fighter, 2, 0, 0.3, 1, 0);
    }
    wait(fighter.lua_state_agent, 2.0);
    if macros::is_excute(fighter) {
        macros::COL_NORMAL(fighter);
    }
    wait(fighter.lua_state_agent, 1.0);
}
frame(fighter.lua_state_agent, 35.0);
if macros::is_excute(fighter) {
    macros::LANDING_EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -10, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, false);
    macros::EFFECT_GLOBAL(fighter, Hash40::new("robot_final_bug"), 0, 0, 0, 0, 0, 0, 1, true);
}
for(15 Iterations){
if macros::is_excute(fighter) {
    macros::EFFECT(fighter, Hash40::new("sys_damage_elec"), Hash40::new("top"), -0.0, 7, 0, 0, 0, 0, 2, 20, 20, 20, 0, 0, 0, true);
    macros::COL_PRI(fighter, 200);
    macros::BURN_COLOR(fighter, 0.02, 0.2, 2, 0.8);
}
frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
    macros::BURN_COLOR_FRAME(fighter, 2, 1, 1, 1, 0);
}
wait(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
    macros::BURN_COLOR_NORMAL(fighter);
    macros::FLASH(fighter, 0.3, 0.7, 1, 0.6);
}
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
    macros::FLASH_FRM(fighter, 2, 0, 0.3, 1, 0);
}
wait(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
    macros::COL_NORMAL(fighter);
}
wait(fighter.lua_state_agent, 1.0);
}
}