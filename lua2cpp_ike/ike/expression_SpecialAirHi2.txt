methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x140320()
	0x140320()
	0x140320()
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x140320()
}
frame(Frame=1)
0x140320()
0x140320()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	VisibilityModule::set_int64(hash40("sword"), hash40("sword_hide"))
	0x140320()
	0x140320()
	RUMBLE_HIT(hash40("rbkind_slashm"), 0)
	0x140320()
	0x140320()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x140320()
	0x140320()
	0x140320()
}
frame(Frame=24)
0x140320()
0x140320()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_NONE)
	0x140320()
	0x140320()
	0x140320()
}
frame(Frame=30)
0x140320()
0x140320()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	RUMBLE_HIT(hash40("rbkind_slashs"), 8)
	0x140320()
	0x140320()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 6, false)
	ControlModule::set_rumble()
	0x140320()
	0x140320()
	0x140320()
}
frame(Frame=37)
0x140320()
0x140320()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x140320()
	0x140320()
	0x140320()
}
frame(Frame=26)
0x140320()
0x140320()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	ItemModule::set_have_item_visibility(false)
	0x140320()
}
frame(Frame=47)
0x140320()
0x140320()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x140320()){
	VisibilityModule::set_int64(hash40("sword"), hash40("sword_normal"))
	0x140320()
	0x140320()
}
