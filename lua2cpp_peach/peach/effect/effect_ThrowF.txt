get_value_float(SO_VAR_FLOAT_LR)
0xe4440(0, 0)
0xe4440()
0xe4440()
if(0xe4440()){
	frame(Frame=12)
	0xe4440()
	0xe4440()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe4440()){
		LANDING_EFFECT_FLIP(hash40("sys_atk_smoke"), hash40("sys_atk_smoke"), hash40("top"), 5, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
	}
	else{
		frame(Frame=0)
		0xe4440()
		0xe4440()
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0xe4440()){
			LANDING_EFFECT_FLIP(hash40("sys_atk_smoke"), hash40("sys_atk_smoke"), hash40("top"), -5, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
			0xe4440()
		}
	}
}
frame(Frame=13)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	EFFECT_FLIP(hash40("sys_attack_speedline"), hash40("sys_attack_speedline"), hash40("top"), -6, 5, -3, 0, 0, 0, 0.95, 0, 1, 0, 0, 0, 0, true, EF_FLIP_YZ)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
frame(Frame=14)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	EFFECT_FLIP_ALPHA(hash40("sys_attack_impact"), hash40("sys_attack_impact"), hash40("top"), -6, 5, 9, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 360, true, EF_FLIP_YZ, 1)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
frame(Frame=22)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	EFFECT(hash40("sys_smash_flash_s"), hash40("top"), 0, 12, 15, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, true)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
get_value_float(SO_VAR_FLOAT_LR)
0xe4440(74468563434, 0)
0xe4440()
0xe4440()
if(0xe4440()){
	frame(Frame=29)
	0xe4440()
	0xe4440()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe4440()){
		LANDING_EFFECT_FLIP(hash40("sys_landing_smoke_s"), hash40("sys_landing_smoke_s"), hash40("top"), 7, 0, 7, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
	}
}
frame(Frame=35)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	EFFECT(hash40("sys_erace_smoke"), hash40("top"), 5, 1, 7, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, true)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	LAST_EFFECT_SET_RATE(1.2)
}
else{
	frame(Frame=0)
	0xe4440()
	0xe4440()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xe4440()){
		LANDING_EFFECT_FLIP(hash40("sys_landing_smoke_s"), hash40("sys_landing_smoke_s"), hash40("top"), -7, 0, 7, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
		0xe4440()
	}
}
frame(Frame=35)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	EFFECT(hash40("sys_erace_smoke"), hash40("top"), -5, 1, 7, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, true)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	LAST_EFFECT_SET_RATE(1.2)
	0xe4440()
}
