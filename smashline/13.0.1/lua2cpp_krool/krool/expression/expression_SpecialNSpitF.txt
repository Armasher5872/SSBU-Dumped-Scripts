if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("crown"), Hash40::new("crown_hide"));
}
macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
	if macros::is_excute(fighter) {
		ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT, true);
	}
}
frame(fighter.lua_state_agent, 18.0);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_N_SUCTION_IRONBALL);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
	if macros::is_excute(fighter) {
		macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
	}
	else{;
	if macros::is_excute(fighter) {
		macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
	}
}
}
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 54.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("crown"), Hash40::new("crown_normal"));
}
macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
if macros::is_excute(fighter) {
	ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT, false);
}
}
frame(fighter.lua_state_agent, 67.0);
if macros::is_excute(fighter) {
ItemModule::set_have_item_visibility(fighter.module_accessor, true);
}
