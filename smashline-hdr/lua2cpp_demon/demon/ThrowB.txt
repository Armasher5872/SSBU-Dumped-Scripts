unsafe extern "C" fn game_throwb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    is_vr_mode();
    if(0x3cfb70(false, false)){
        methodlib::L2CValue::L2CValue(void*)();
    }
    else {
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
is_one_on_one_including_thrown();
if(0x3cfb70(false, true)){
    if is_excute(agent) {
        methodlib::L2CValue::L2CValue(void*)();
    }
    else {
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
}
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_scale();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_stage();
if WorkModule::is_flag(boma, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA) {
if is_excute(agent) {
    CHECK_VALID_START_CAMERA(agent, 0, 7, 0, 35, 0, 0, false);
}
}
if !WorkModule::is_flag(boma, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA) {
if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
    if is_excute(agent) {
        REQ_MOTION_CAMERA(agent, Hash40::new("e01throwb.nuanmb"), false);
    }
}
}
if is_excute(agent) {
PostureModule::scale(boma, 7, 0);
0x3cfb70(-1037516665, 1.5);
CAM_ZOOM_IN_arg5(0, 0);
}
frame(lua_state, 27.0);
if is_excute(agent) {
REVERSE_LR(agent);
ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 0.0, 58, 340, 0, 34, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 3.0, 361, 100, 0, 40, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
}
frame(lua_state, 46.0);
if is_excute(agent) {
ATTACK(agent, 1, 0, Hash40::new("top"), 14.0, 58, 55, 0, 60, 4.0, 0.0, 2.0, -12.0, Some(0.0), Some(2.0), Some(-22.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_BODY);
AttackModule::set_catch_only_all(boma, true, false);
CHECK_FINISH_CAMERA(agent, 17, 0);
}
frame(lua_state, 47.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
let target = WorkModule::get_int64(boma, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT);
        let target_group = WorkModule::get_int64(boma, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP);
        let target_no = WorkModule::get_int64(boma, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO);
        ATK_HIT_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, Hash40::new("throw"), target, target_group, target_no);
CAM_ZOOM_OUT(agent);
}
}

unsafe extern "C" fn effect_throwb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("top"), 1.5, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -4, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(lua_state, 46.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_crown"), Hash40::new("top"), 18, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        LANDING_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 18, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 1.2);
    }
    frame(lua_state, 49.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_smash_flash_s"), Hash40::new("throw"), 0, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, false);
    }
}

unsafe extern "C" fn sound_throwb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if FighterCutInManager::is_play_motion_camera(boma) {
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_demon_throw_f01"));
        }
        else {
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_demon_throw_f01_low"));
        }
    }
}
frame(lua_state, 11.0);
if is_excute(agent) {
    PLAY_SE(agent, Hash40::new("vc_demon_attack04"));
}
frame(lua_state, 32.0);
if is_excute(agent) {
    PLAY_SE(agent, Hash40::new("se_demon_throw_b02"));
}
frame(lua_state, 44.0);
if is_excute(agent) {
    PLAY_SE(agent, Hash40::new("se_demon_throw_b03"));
    PLAY_SE(agent, Hash40::new("vc_demon_attack03"));
}
}

unsafe extern "C" fn expression_throwb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl_l"), 19, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 46.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_80_attackl"), 9, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}