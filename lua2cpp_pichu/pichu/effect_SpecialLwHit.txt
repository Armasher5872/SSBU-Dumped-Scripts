frame(Frame=1)
for(3 Iterations){
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		EFFECT_FOLLOW_NO_STOP(0x0b31c973ec, hash40("head"), 0, 0, 0, 0, -90, -90, 1, true)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		LANDING_EFFECT(hash40("sys_down_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	frame(Frame=1)
	0x1032e0()
	0x1032e0()
	WorkModule::is_flag(FIGHTER_PIKACHU_STATUS_WORK_ID_FLAG_KAMINARI_ATTACK_HIT)
	0x1032e0(false, true)
	0x1032e0()
	0x1032e0()
	if(0x1032e0()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1032e0()){
			EFFECT_FOLLOW_NO_STOP(0x1323a7f35d, hash40("top"), 0, -2, 0, 0, 90, 0, 1.15, true)
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			EFFECT_FOLLOW_NO_STOP(0x1271fe92e3, hash40("top"), 0, -2, 0, 0, 90, 0, 0.85, true)
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH(0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR(2, 2, 0.5, 0.9)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH_FRM(2, 0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR_FRAME(2, 2, 2, 0.5, 0.7)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH_FRM(2, 0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR_FRAME(2, 2, 2, 0.5, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		BURN_COLOR_NORMAL()
		COL_NORMAL()
	}
	wait(Frames=1)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		EFFECT_OFF_KIND(0x1323a7f35d, false, true)
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH(0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR(2, 2, 0.5, 0.9)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH_FRM(2, 0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR_FRAME(2, 2, 2, 0.5, 0.7)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH_FRM(2, 0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR_FRAME(2, 2, 2, 0.5, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		BURN_COLOR_NORMAL()
		COL_NORMAL()
	}
	wait(Frames=1)
	0x1032e0()
	0x1032e0()
	frame(Frame=15)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		EFFECT_OFF_KIND(0x1271fe92e3, false, true)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1032e0()){
			EFFECT_FOLLOW_NO_STOP(0x1323a7f35d, hash40("top"), 0, 0, 0, 0, 90, 0, 0.8, true)
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			EFFECT_FOLLOW_NO_STOP(0x1271fe92e3, hash40("top"), 0, 0, 0, 0, 90, 0, 0.9, true)
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
			0x1032e0()
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH(0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR(2, 2, 0.5, 0.9)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH_FRM(2, 0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR_FRAME(2, 2, 2, 0.5, 0.7)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		FLASH_FRM(2, 0, 0, 0, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		BURN_COLOR_FRAME(2, 2, 2, 0.5, 0)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
	wait(Frames=2)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		BURN_COLOR_NORMAL()
		COL_NORMAL()
	}
	wait(Frames=1)
	0x1032e0()
	0x1032e0()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	EFFECT_OFF_KIND(0x1323a7f35d, false, true)
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	FLASH(0, 0, 0, 0)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	BURN_COLOR(2, 2, 0.5, 0.9)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
wait(Frames=2)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	FLASH_FRM(2, 0, 0, 0, 0)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	BURN_COLOR_FRAME(2, 2, 2, 0.5, 0.7)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
wait(Frames=2)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	FLASH_FRM(2, 0, 0, 0, 0)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	BURN_COLOR_FRAME(2, 2, 2, 0.5, 0)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
wait(Frames=2)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	BURN_COLOR_NORMAL()
	COL_NORMAL()
}
wait(Frames=1)
0x1032e0()
0x1032e0()
frame(Frame=24)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	EFFECT_OFF_KIND(0x1271fe92e3, false, true)
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=30)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	EFFECT_OFF_KIND(0x0b31c973ec, false, true)
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=34)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	FOOT_EFFECT(hash40("sys_landing_smoke_s"), hash40("top"), 0, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
