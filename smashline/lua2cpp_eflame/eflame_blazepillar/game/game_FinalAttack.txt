#[acmd_script( agent = "eflame_blazepillar", script = "game_finalattack", category = ACMD_GAME, low_priority)]
unsafe fn game_finalattack(fighter: &mut L2CAgentBase) {
    for(20 Iterations){
    if macros::is_excute(fighter) {
        macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.4, 60, 100, 50, 55, 13.0, 0.0, 5.0, 10.0, Some(0.0), Some(5.0), Some(-10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_ENERGY);
        macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.4, 366, 100, 50, 55, 13.0, 0.0, 20.0, 0.0, Some(0.0), Some(35.0), Some(0.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_ENERGY);
        macros::ATTACK(fighter, 2, 0, Hash40::new("top"), 0.4, 366, 100, 50, 55, 14.0, 0.0, 60.0, 0.0, Some(0.0), Some(65.0), Some(0.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, true, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_ENERGY);
    }
    wait(fighter.lua_state_agent, 4.0);
    if macros::is_excute(fighter) {
        AttackModule::clear_all(fighter.module_accessor);
    }
}
if macros::is_excute(fighter) {
    WorkModule::on_flag(fighter.module_accessor, *WEAPON_EFLAME_BLAZEPILLAR_INSTANCE_WORK_ID_FLAG_ATTACK_FINISH);
    macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 12.0, 45, 100, 0, 75, 15.0, 0.0, 0.0, 0.0, Some(0.0), Some(70.0), Some(0.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_ENERGY);
    macros::ATTACK(fighter, 1, 1, Hash40::new("top"), 14.0, 38, 100, 0, 85, 15.0, 0.0, 0.0, 0.0, Some(0.0), Some(70.0), Some(0.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, Hash40::new("no"), 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_ENERGY);
    AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, true, -1, false);
    AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, true, -1, false);
}
frame(fighter.lua_state_agent, 87.0);
if macros::is_excute(fighter) {
    AttackModule::clear_all(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 92.0);
if macros::is_excute(fighter) {
    notify_event_msc_cmd(0x199c462b5d);
}
}