if macros::is_excute(fighter) {
FT_LEAVE_NEAR_OTTOTTO(fighter, -2.5, 2.5);
FT_LEAVE_NEAR_OTTOTTO(fighter, 1.5, 1.5);
ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 4.0, 70, 80, 0, 70, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 3.0, 361, 100, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
}frame(fighter.lua_state_agent, 6.0);
for(3 Iterations){;
if macros::is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("top"), 0.5, 361, 100, 0, 0, 4.3, 2.0, 1.8, 0.0, -2.0, 1.8, 0.0, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_PSI);
AttackModule::set_catch_only_all(fighter.module_accessor, true, false);
}wait(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(boma);
}}frame(fighter.lua_state_agent, 26.0);
if macros::is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("top"), 1.5, 361, 100, 0, 0, 6.0, 2.0, 2.2, 0.0, -2.0, 2.2, 0.0, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_PSI);
AttackModule::set_catch_only_all(fighter.module_accessor, true, false);
CHECK_FINISH_CAMERA(fighter, 2, 0);
FighterCutInManager::set_throw_finish_zoom_rate(fighter.module_accessor, 1.5);
FighterCutInManager::set_throw_finish_offset(fighter.module_accessor, 0, 0, 0);
}wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
ATK_HIT_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, Hash40::new("throw"), *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO);
}wait(fighter.lua_state_agent, 3.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(boma);
}