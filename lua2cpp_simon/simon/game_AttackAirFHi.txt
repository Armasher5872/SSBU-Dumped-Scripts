frame(Frame=1)
0x11a250()
0x11a250()
FT_MOTION_RATE(FSM=0.8)
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING)
	0x11a250()
}
frame(Frame=10)
0x11a250()
0x11a250()
FT_MOTION_RATE(FSM=1)
0x11a250()
frame(Frame=14)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::on_flag(Flag=FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_ATTACK_AIR_CLIFF_RAY_CHECK)
	0x11a250()
	WorkModule::on_flag(Flag=FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_ATTACK_AIR_LASSO_FLAG_CHECK)
	0x11a250()
	SEARCH(0, 0, hash40("top"), 2.3, 0.0, 10.0, 7.0, 0.0, 23.0, 38.0, COLLISION_KIND_MASK_HIT, HIT_STATUS_MASK_NORMAL, 1, COLLISION_SITUATION_MASK_GA, 59664, COLLISION_PART_MASK_ALL, false)
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
}
frame(Frame=16)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::off_flag(Flag=FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_ATTACK_AIR_CLIFF_RAY_CHECK)
	0x11a250()
	WorkModule::off_flag(Flag=FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_ATTACK_AIR_LASSO_FLAG_CHECK)
	0x11a250()
	battle_object()
	methodlib::L2CValue::L2CValue(void*)()
}
else{
	methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
}
methodlib::L2CValue::as_pointer()const(0, 1)
set_whip_reflect_attack_off_id()
0x11a250()
0x11a250()
0x11a250()
ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=12.0, Angle=361, KBG=55, FKB=0, BKB=80, Size=2.3, X=0.0, Y=23.0, Z=38.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.8, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_whip"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_SIMON_WHIP, Type=ATTACK_REGION_WHIP)
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=10.0, Angle=361, KBG=55, FKB=0, BKB=80, Size=2.3, X=0.0, Y=10.0, Z=7.0, X2=0.0, Y2=23.0, Z2=38.0, Hitlag=0.8, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_whip"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_SIMON_WHIP, Type=ATTACK_REGION_WHIP)
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=2.0, Angle=361, KBG=55, FKB=0, BKB=80, Size=5.5, X=0.0, Y=10.0, Z=5.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.8, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PUNCH)
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
0x11a250()
search(MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR_ALL)
0x11a250()
0x11a250()
frame(Frame=17)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	AttackModule::clear_all()
}
frame(Frame=31)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::off_flag(Flag=FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING)
	0x11a250()
}
