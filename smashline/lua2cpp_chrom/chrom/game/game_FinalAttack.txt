#[acmd_script( agent = "chrom", script = "game_finalattack", category = ACMD_GAME, low_priority )]
unsafe fn game_finalattack(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::WHOLE_HIT(agent, *HIT_STATUS_XLU);
        macros::CAM_ZOOM_OUT(agent);
        macros::FT_REMOVE_FINAL_AURA(agent, false);
    }
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_ROY_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if macros::is_excute(agent) {
                CAM_ZOOM_IN_arg5(2, 0, 1.6, 0, 0);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -5, 5);
            }
            else{
            if macros::is_excute(agent) {
                CAM_ZOOM_IN_arg5(2, 0, 1.6, 0, 0);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 5, 5);
            }
        }
    }
}
frame(agent.lua_state_agent, 3.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, *FIGHTER_ROY_ATTACK_GROUP_KIND_FINAL_CHROM, 0, Hash40::new("top"), 10.0, 361, 40, 0, 8, 16.0, 0.0, 12.0, 8.0, Some(0.0), Some(18.0), Some(8.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(agent.module_accessor, true, false);
}
wait(agent.lua_state_agent, 5.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 14.0);
if macros::is_excute(agent) {
    macros::CAM_ZOOM_OUT(agent);
}
frame(agent.lua_state_agent, 50.0);
if macros::is_excute(agent) {
    macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 5, 100, 0, 0, 0);
}
WorkModule::is_flag(agent.module_accessor, *FIGHTER_ROY_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        if macros::is_excute(agent) {
            macros::REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalattack.nuanmb"), false);
        }
    }
}
frame(agent.lua_state_agent, 134.0);
if macros::is_excute(agent) {
    macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CHROM_FINAL, 0, 36.0, 40, 55, 0, 70, 0.1, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    WorkModule::on_flag(agent.module_accessor, *FIGHTER_ROY_STATUS_FINAL_FLAG_FINISH_ABS_HIT);
    AttackModule::set_final_finish_cut_in(agent.module_accessor, 0, true, false, -1, true);
}
frame(agent.lua_state_agent, 135.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, *FIGHTER_ROY_ATTACK_GROUP_KIND_FINAL_FINISH_CHROM, 0, Hash40::new("top"), 36.0, 40, 50, 0, 70, 15.0, 0.0, 10.5, -17.0, Some(0.0), Some(10.5), Some(2.0), 0.1, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    AttackModule::set_force_reaction(agent.module_accessor, *FIGHTER_ROY_ATTACK_GROUP_KIND_FINAL_FINISH_CHROM, true, false);
    AttackModule::set_final_finish_cut_in(agent.module_accessor, *FIGHTER_ROY_ATTACK_GROUP_KIND_FINAL_FINISH_CHROM, true, false, -1, false);
}
frame(agent.lua_state_agent, 137.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
}
}