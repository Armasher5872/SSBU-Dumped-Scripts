frame(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 8.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 10);
}frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
AREA_WIND_2ND_RAD_arg9(1, 2, 0.05, 300, 1, 7, 8, 20, 50);
}frame(fighter.lua_state_agent, 13.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 15.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 6);
}frame(fighter.lua_state_agent, 18.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 24.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 29.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 3, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 34.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 36.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
}frame(fighter.lua_state_agent, 38.0);
if macros::is_excute(fighter) {
AreaModule::erase_wind(fighter.module_accessor, 1);
}