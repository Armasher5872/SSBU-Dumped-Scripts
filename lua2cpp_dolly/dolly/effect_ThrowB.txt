frame(Frame=14)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), -2, 0, 1, 0, 180, 0, 0.7, 0, 0, 0, 0, 0, 0, false)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	EFFECT(0x12147c5df3, hash40("top"), -4, 0, 1, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, false)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
}
frame(Frame=19)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	LANDING_EFFECT(hash40("sys_down_smoke"), hash40("top"), -12, 0, 2, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	LAST_EFFECT_SET_RATE(0.5)
	0x24ffc0()
}
frame(Frame=22)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	LANDING_EFFECT(hash40("sys_crown"), hash40("top"), -12, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
}
frame(Frame=35)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	EFFECT(hash40("sys_smash_flash_s"), hash40("top"), 0, 12, -14, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, true)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
}
