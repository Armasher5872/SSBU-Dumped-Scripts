methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_L)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=11)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	AREA_WIND_2ND_arg10(0, 2, 225, 2, 1, 0, 12, 30, 30, 80)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=19)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_smashhold1"), 38, true)
	ControlModule::set_rumble()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=50)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	AreaModule::erase_wind(0)
	0xffdb0()
}
frame(Frame=54)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 4)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=60)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0xffdb0()
	RUMBLE_HIT(hash40("rbkind_attackll"), 0)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohit_explosionm"), 0, false)
	ControlModule::set_rumble()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=61)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	AREA_WIND_2ND_arg10(0, 3, 90, 16, 1, 0, 12, 30, 30, 50)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=78)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	AreaModule::erase_wind(0)
	0xffdb0()
}
frame(Frame=84)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 10)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
