unsafe extern "C" fn game_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
    }
    frame(lua_state, 7.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.5, 120, 20, 0, 70, 7.5, 0.0, 12.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        ATTACK(agent, 1, 0, Hash40::new("top"), 1.5, 240, 20, 0, 25, 9.5, 0.0, 24.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 9.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.5, 120, 20, 0, 70, 7.5, 0.0, 12.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        ATTACK(agent, 1, 0, Hash40::new("top"), 1.5, 240, 20, 0, 25, 9.5, 0.0, 24.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 13.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.5, 120, 20, 0, 70, 7.5, 0.0, 12.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        ATTACK(agent, 1, 0, Hash40::new("top"), 1.5, 240, 20, 0, 25, 9.5, 0.0, 24.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 17.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 1.5, 120, 20, 0, 70, 7.5, 0.0, 12.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        ATTACK(agent, 1, 0, Hash40::new("top"), 1.5, 240, 20, 0, 25, 9.5, 0.0, 24.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_rush"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 4.0, 70, 180, 0, 45, 7.5, 0.0, 14.0, 0.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        ATTACK(agent, 1, 0, Hash40::new("top"), 4.0, 70, 180, 0, 45, 11.0, 0.0, 24.0, 0.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        WorkModule::off_flag(boma, *FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
    }
}

unsafe extern "C" fn effect_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("robot_nozzle_flare"), Hash40::new("knee"), 0, 0, 0, 90, -90, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("robot_jump_jet"), Hash40::new("knee"), 0, 0, 0, 90, -90, 0, 1, true);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, 5.5, -90, 10, 30, 1.2, true, *EF_FLIP_YZ);
    }
    if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
        if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
            if is_excute(agent) {
                LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
            }
            else {
            if is_excute(agent) {
                LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
            }
        }
    }
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
    if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
        if is_excute(agent) {
            LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
        }
        else {
        if is_excute(agent) {
            LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
        }
    }
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 8.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, -8, -90, 10, 30, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
    if is_excute(agent) {
        LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
    }
    else {
    if is_excute(agent) {
        LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
    }
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
    LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 9.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, 5.5, -90, -10, 210, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 11.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, -8, -90, -10, 210, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 12.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, 5.5, -90, 10, 30, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 16.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, -8, -90, 10, 30, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 17.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 17, 5.5, -90, 10, 30, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 22.0);
if is_excute(agent) {
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 5, 16, 5.5, -90, 10, 30, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 13, -8, -90, 10, 20, 1.2, true, *EF_FLIP_YZ);
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.1, 0.01, 0);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)){
if WorkModule::is_flag(boma, *FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP) {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.196, 0.196, 0.216);
}
else {
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.22, 0.059, 0.039);
}
}
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.176, 0.137, 0.059);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.235, 0.196, 0.255);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.157, 0.196);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.059, 0);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.098, 0.098, 0.157);
}
}
if(0x1050b0(*FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)){
if is_excute(agent) {
LAST_EFFECT_SET_COLOR(agent, 0.118, 0.039, 0.051);
}
}
if is_excute(agent) {
LAST_EFFECT_SET_RATE(agent, 3);
}
frame(lua_state, 23.0);
if is_excute(agent) {
EFFECT_ALPHA(agent, Hash40::new("sys_attack_impact"), Hash40::new("top"), 0, 28, -1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, true, 0.7);
}
}

unsafe extern "C" fn sound_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_SEQUENCE(agent, Hash40::new("seq_robot_rnd_attack"));
        PLAY_SE(agent, Hash40::new("se_robot_jump02"));
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_robot_swing_s"));
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_robot_swing_s"));
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_robot_swing_s"));
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_robot_swing_s"));
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_robot_swing_s"));
    }
}

unsafe extern "C" fn expression_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 5.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 7.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackss"), 5);
    }
    frame(lua_state, 11.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 6, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 21.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 0);
    }
}