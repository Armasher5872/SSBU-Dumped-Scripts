unsafe extern "C" fn game_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ATTACK_ABS(agent, *FIGHTER_PICKEL_ATTACK_ABSOLUTE_KIND_FINAL, 0, 45.0, 35, 34, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_BOMB, *ATTACK_REGION_BOMB);
        AttackModule::set_final_finish_cut_in(boma, 0, true, false, -1, true);
        WorkModule::on_flag(boma, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_ABS_SET);
        CAM_ZOOM_OUT(agent);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_PICKEL_STATUS_FINAL_FLAG_END_FINAL);
    }
    frame(lua_state, 15.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
    }
}

unsafe extern "C" fn effect_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_pickel_final_end"), false, false, false);
    }
    frame(lua_state, 4.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("pickel_final_bomb"), Hash40::new("top"), 0, 30, 38, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
}

unsafe extern "C" fn sound_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 24.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pickel_final07"));
    }
}

unsafe extern "C" fn expression_finalairend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 8.0);
    frame(lua_state, 10.0);
    frame(lua_state, 22.0);
    frame(lua_state, 35.0);
}