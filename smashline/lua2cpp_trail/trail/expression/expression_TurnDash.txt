#[acmd_script( agent = "trail", script = "expression_turndash" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_turndash(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 2);
    }
    frame(fighter.lua_state_agent, 5.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 2);
    }
    frame(fighter.lua_state_agent, 7.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_dash"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 20.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(fighter.lua_state_agent, 32.0);
    ItemModule::is_have_item(fighter.module_accessor, 0);
    if(0x4ae890(false, true)){
        if macros::is_excute(fighter) {
            macros::FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0.001);
        }
    }
    frame(fighter.lua_state_agent, 37.0);
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0.05);
    }
    frame(fighter.lua_state_agent, 41.0);
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0.11);
    }
    frame(fighter.lua_state_agent, 46.0);
    if macros::is_excute(fighter) {
        macros::FT_MOTION_INTP_WAIT_ITEM(fighter, false, 0);
    }
}