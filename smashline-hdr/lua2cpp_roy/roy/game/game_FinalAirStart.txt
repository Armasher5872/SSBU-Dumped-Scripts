#[acmd_script( agent = "roy", script = "game_finalairstart", category = ACMD_GAME, low_priority )]
unsafe fn game_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 10, 90);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 60);
        }
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart02.nuanmb"), false, false);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 3, 0);
            0x120620(-1061308635, 2);
            CAM_ZOOM_IN_arg5(0, 0);
        }
        else{
        if is_excute(agent) {
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), false, false);
        }
        if is_excute(agent) {
            FT_START_CUTIN(agent);
        }
    }
}
}
frame(lua_state, 24.0);
if is_excute(agent) {
CAM_ZOOM_OUT(agent);
}
frame(lua_state, 25.0);
if is_excute(agent) {
ATTACK(agent, 4, 0, Hash40::new("top"), 8.0, 366, 100, 80, 0, 6.0, 0.0, 6.0, 3.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
AttackModule::set_final_finish_cut_in(boma, 4, true, true, -1, false);
}
frame(lua_state, 28.0);
if is_excute(agent) {
ATTACK(agent, 0, 0, Hash40::new("sword1"), 1.0, 366, 100, 80, 0, 6.0, 0.0, 0.0, 5.5, Some(0.0), Some(0.0), Some(1.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 4, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
}
frame(lua_state, 53.0);
if is_excute(agent) {
AttackModule::clear(boma, 4, false);
}
frame(lua_state, 57.0);
if is_excute(agent) {
ATTACK(agent, 0, 1, Hash40::new("sword1"), 1.0, 240, 100, 70, 0, 7.0, 0.0, 0.0, 5.5, Some(0.0), Some(0.0), Some(1.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 4, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
}
frame(lua_state, 60.0);
if is_excute(agent) {
ATTACK(agent, 0, 2, Hash40::new("top"), 1.0, 38, 100, 90, 0, 6.0, 0.0, 5.0, -18.8, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
ATTACK(agent, 1, 2, Hash40::new("top"), 1.0, 50, 100, 78, 0, 8.0, 0.0, 6.5, -7.5, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
ATTACK(agent, 2, 2, Hash40::new("top"), 1.0, 58, 100, 75, 0, 3.5, 0.0, 2.0, 0.8, Some(0.0), Some(2.0), Some(13.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
ATTACK(agent, 3, 2, Hash40::new("top"), 1.0, 58, 100, 70, 0, 7.0, 0.0, 10.5, 3.8, Some(0.0), Some(10.5), Some(10.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
AttackModule::set_final_finish_cut_in(boma, 1, true, true, -1, false);
AttackModule::set_final_finish_cut_in(boma, 2, true, true, -1, false);
AttackModule::set_final_finish_cut_in(boma, 3, true, true, -1, false);
}
wait(lua_state, 2.0);
FT_MOTION_RATE(agent, 2.0);
wait(lua_state, 5.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
}
frame(lua_state, 68.0);
FT_MOTION_RATE(agent, 1.0);
}