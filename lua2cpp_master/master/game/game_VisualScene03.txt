methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	methodlib::L2CValue::as_hash()const(FIGHTER_MASTER_GENERATE_ARTICLE_SWORD2, hash40("visual_scene_03"))
	ArticleModule::change_motion()
	0x333150()
	0x333150()
}
frame(Frame=40)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ATTACK_ABS(Kind=FIGHTER_MASTER_ATTACK_ABSOLUTE_KIND_FINAL, ID=0, Damage=20.0, Angle=361, KBG=80, FKB=1, BKB=0, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_POS, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_NONE)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	AttackModule::set_no_dead_all(true, true)
	0x333150()
	0x333150()
	WorkModule::on_flag(Flag=FIGHTER_MASTER_STATUS_FINAL_FLAG_HIT_ABS)
	0x333150()
	WorkModule::on_flag(Flag=FIGHTER_MASTER_STATUS_FINAL_FLAG_SCENE03_TARGET_MOTION_CHANGE)
	0x333150()
}
