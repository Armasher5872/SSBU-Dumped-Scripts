unsafe extern "C" fn game_visualscene(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 336.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_BRAVE_STATUS_FINAL_FLAG_SCENE01_SYNC);
    }
}

unsafe extern "C" fn effect_visualscene(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CANCEL_FILL_SCREEN(agent, 0, 0);
        EFFECT_OFF_KIND(agent, Hash40::new("brave_final_lightsword"), false, true);
        EFFECT_OFF_KIND_WORK(agent, *FIGHTER_BRAVE_INSTANCE_WORK_ID_INT_EFFECT_KIND_LIGHTNING_SWORD_FLARE, false, true);
    }
    frame(lua_state, 251.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("brave_final_hit"), Hash40::new("sword1"), 5, 0, 0, 0, 45, 90, 1, true);
        EFFECT_FOLLOW_WORK(agent, *FIGHTER_BRAVE_INSTANCE_WORK_ID_INT_EFFECT_KIND_SWORD_FLARE, Hash40::new("sword1"), 0, 0, 0, 0, 0, -90, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("brave_final_lightsword2"), Hash40::new("sword1"), 0, 0, 0, 0, 90, -90, 0.9, true);
    }
    frame(lua_state, 316.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("brave_final_slash"), Hash40::new("top"), 0, 2, 25, 0, 0, -25, 1, 0, 0, 0, 0, 0, 0, true);
    }
}

unsafe extern "C" fn sound_visualscene(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 149.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_brave_final05"));
    }
    frame(lua_state, 250.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_brave_final06"));
    }
    frame(lua_state, 298.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_brave_final07"));
    }
    frame(lua_state, 300.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_brave_final02"));
    }
}

unsafe extern "C" fn expression_visualscene(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase_sp"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_erase_sp"), 0);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_elecattack"), 34, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_elecattack"), 34);
    }
    frame(lua_state, 70.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_slashm"), 12, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_slashm"), 12);
    }
    frame(lua_state, 154.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_beaml"), 32, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_beaml"), 32);
    }
    frame(lua_state, 188.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_32_hold_lv2"), 50, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_32_hold_lv2"), 50);
    }
    frame(lua_state, 200.0);
    if is_excute(agent) {
        VisibilityModule::set_whole(boma, true);
    }
    frame(lua_state, 255.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_explosionm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_explosionm"), 0);
    }
    frame(lua_state, 314.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_genesis"), 42, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_genesis"), 41);
    }
    frame(lua_state, 357.0);
    if is_excute(agent) {
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_damage_critical"), 0);
    }
}