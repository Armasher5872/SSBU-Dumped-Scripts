#[acmd_script( agent = "kirby", script = "expression_kenspecialairn", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_kenspecialairn(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 11.0);
    WorkModule::is_flag(boma, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_N_FLAG_FAILED);
    if(0x543c60(false, true)){
        if is_excute(fighter) {
            ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        else{
        WorkModule::is_flag(boma, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_FLAG_COMMAND);
        if(0x543c60(false, false)){
            if is_excute(fighter) {
                ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
            }
        }
        WorkModule::is_flag(boma, *FIGHTER_RYU_STATUS_WORK_ID_SPECIAL_COMMON_FLAG_COMMAND);
        if(0x543c60(false, true)){
            if is_excute(fighter) {
                ControlModule::set_rumble(boma, Hash40::new("rbkind_attackl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
            }
        }
    }
}
if is_excute(fighter) {
    AREA_WIND_2ND_arg10(0, 1.2, 110, 8, 0.8, -2, 8, 24, 16, 80);
}
frame(lua_state, 42.0);
if is_excute(fighter) {
    AreaModule::erase_wind(boma, 0);
}
frame(lua_state, 66.0);
if is_excute(fighter) {
    ItemModule::set_have_item_visibility(boma, true, 0);
}
}