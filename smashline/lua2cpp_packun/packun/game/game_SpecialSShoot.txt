#[acmd_script( agent = "packun", script = "game_specialsshoot" , category = ACMD_GAME , low_priority)]
unsafe fn game_specialsshoot(fighter: &mut L2CAgentBase) {
	frame(fighter.lua_state_agent, 1.0);
	macros::FT_MOTION_RATE(fighter, 0.75);
	if macros::is_excute(fighter) {
		FighterAreaModuleImpl::enable_fix_jostle_area(fighter.module_accessor, 10, 3);
	}
	frame(fighter.lua_state_agent, 2.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_FAILURE);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		if macros::is_excute(fighter) {
			macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 0.0, 18, 100, 30, 0, 5.0, 0.0, 7.0, 7.0, Some(0.0), Some(7.0), Some(10.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, Hash40::new("no"), 0.0, 0, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
		}
	}
	frame(fighter.lua_state_agent, 10.0);
	WorkModule::is_flag(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_FAILURE);
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
		if macros::is_excute(fighter) {
			ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_PACKUN_GENERATE_ARTICLE_POISONBREATH);
		}
	}
	frame(fighter.lua_state_agent, 21.0);
	macros::FT_MOTION_RATE(fighter, 0.9);
	if macros::is_excute(fighter) {
		FighterAreaModuleImpl::enable_fix_jostle_area(fighter.module_accessor, 5, 5);
		AttackModule::clear_all(fighter.module_accessor);
	}
	wait(fighter.lua_state_agent, 10.0);
	if macros::is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_CHANGE_KINETIC);
	}
	frame(fighter.lua_state_agent, 20.0);
	macros::FT_MOTION_RATE(fighter, 0.55);
