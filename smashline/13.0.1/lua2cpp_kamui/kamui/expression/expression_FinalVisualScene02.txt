frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_spinattack"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
macros::RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_spinattack"), 0);
}frame(fighter.lua_state_agent, 70.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
macros::RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase"), 0);
}frame(fighter.lua_state_agent, 75.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_shieldbreak"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
macros::RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_shieldbreak"), 0);
}frame(fighter.lua_state_agent, 136.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackll"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
macros::RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_attackll"), 0);
}frame(fighter.lua_state_agent, 186.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beaml"), 22, true);
ControlModule::set_rumble(fighter.module_accessor);
macros::RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_beaml"), 22);
}