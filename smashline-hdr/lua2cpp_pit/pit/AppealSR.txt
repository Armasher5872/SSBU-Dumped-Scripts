unsafe extern "C" fn effect_appealsr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 16.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_ALPHA(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("top"), -2.54, 8.17, -0.56, 8.65, 25, -148.6, 1, true, 0.1);
        LAST_EFFECT_SET_COLOR(agent, 1, 1, 1);
        LAST_EFFECT_SET_RATE(agent, 3);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_ALPHA(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("top"), -4.9, 11.4, 4.044, -58.55, -39, 65.2, 1, true, 0.1);
        LAST_EFFECT_SET_COLOR(agent, 1, 1, 1);
        LAST_EFFECT_SET_RATE(agent, 3);
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_smash_flash_s"), Hash40::new("swordl"), 0, -6, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true);
    }
}

unsafe extern "C" fn sound_appealsr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pit_bowsplit"));
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("vc_pit_appeal02"));
    }
    frame(lua_state, 15.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pit_swing_m"));
    }
    frame(lua_state, 26.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pit_swing_m"));
    }
    frame(lua_state, 52.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pit_swing_m"));
    }
}

unsafe extern "C" fn expression_appealsr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        VisibilityModule::set_status_default_int64(boma, Hash40::new("weapon"), Hash40::new("weapon_normal"));
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 29.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}