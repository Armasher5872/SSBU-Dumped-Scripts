if is_excute(fighter) {
START_INFO_FLASH_EYE(fighter);
ItemModule::set_have_item_visibility(boma, false);
}frame(lua_state, 26.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase_sp"), 1, false);
ControlModule::set_rumble(boma);
}frame(lua_state, 30.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 0, false);
ControlModule::set_rumble(boma);
RUMBLE_HIT(fighter, Hash40::new("rbkind_attack_critical"), 0);
QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
}frame(lua_state, 59.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase_sp"), 1, false);
ControlModule::set_rumble(boma);
}frame(lua_state, 60.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosion"), 0, false);
ControlModule::set_rumble(boma);
QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
}frame(lua_state, 89.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase_sp"), 1, false);
ControlModule::set_rumble(boma);
}frame(lua_state, 90.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_explosionm"), 0, false);
ControlModule::set_rumble(boma);
QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
}