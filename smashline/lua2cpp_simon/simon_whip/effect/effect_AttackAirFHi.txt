#[acmd_script( agent = "simon_whip", script = "effect_attackairfhi", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_attackairfhi(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        battle_object();
        methodlib::L2CValue::L2CValue(void*)();
    }
    else{
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const(true);
set_chain_2_visibility();
frame(agent.lua_state_agent, 15.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("simon_whip_straight"), Hash40::new("hookshot7"), -8, 0, 0, 0, -40, -90, 0.8, true);
    macros::EFFECT_FOLLOW(agent, Hash40::new("simon_whip_light"), Hash40::new("hookshot9"), 0, 0, 0, 0, 0, 0, 1, true);
    macros::LAST_EFFECT_SET_RATE(agent, 2);
    macros::EFFECT_FOLLOW(agent, Hash40::new("simon_whip_flash_top"), Hash40::new("hookshot27"), 1, 0, 0, 0, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 16.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("simon_whip_straight"), true, true);
}
frame(agent.lua_state_agent, 18.0);
if macros::is_excute(agent) {
    battle_object();
    methodlib::L2CValue::L2CValue(void*)();
}
else{
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const(false);
set_chain_2_visibility();
}