frame(Frame=17)
0x2490c0()
0x2490c0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	EFFECT(hash40("sys_smash_flash"), hash40("top"), 0, 7, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
frame(Frame=19)
0x2490c0()
0x2490c0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), -2, 0, 0, 0, 0, 0, 0.7, 0, 0, 4, 0, 0, 0, false)
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
frame(Frame=23)
0x2490c0()
0x2490c0()
get_value_float(SO_VAR_FLOAT_LR)
0x2490c0(224, 0)
0x2490c0()
0x2490c0()
if(0x2490c0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x2490c0()){
		EFFECT_FOLLOW_COLOR(hash40("sys_attack_arc_d"), hash40("top"), 0, 3.386, 3.445, -3.104, -1.443, -11.202, 1, true, 0.75, 0.5, 1.5)
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		0x2490c0()
		LAST_EFFECT_SET_ALPHA(0.5)
		0x2490c0()
		LAST_EFFECT_SET_RATE(1.7)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x2490c0()){
			EFFECT_FOLLOW_COLOR(hash40("sys_attack_arc_d"), hash40("top"), 0, 2.939, 3.445, -6.135, -5.28, 7.228, 1, true, 0.75, 0.5, 1.5)
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			0x2490c0()
			LAST_EFFECT_SET_ALPHA(0.5)
			0x2490c0()
			LAST_EFFECT_SET_RATE(1.7)
			0x2490c0()
		}
	}
}
