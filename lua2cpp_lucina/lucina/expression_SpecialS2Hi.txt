methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13aec0()){
	methodlib::L2CValue::as_hash()const(hash40("sword1"), ATTACK_DIRECTION_X_MINUS, ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y_MINUS)
	AttackModule::set_attack_reference_joint_id()
	0x13aec0()
	0x13aec0()
	0x13aec0()
	0x13aec0()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x13aec0()
	0x13aec0()
	0x13aec0()
}
frame(Frame=1)
0x13aec0()
0x13aec0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13aec0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x13aec0()
	0x13aec0()
	0x13aec0()
}
frame(Frame=2)
0x13aec0()
0x13aec0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13aec0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 0, false)
	ControlModule::set_rumble()
	0x13aec0()
	0x13aec0()
	0x13aec0()
}
frame(Frame=4)
0x13aec0()
0x13aec0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13aec0()){
	RUMBLE_HIT(hash40("rbkind_slashs"), 0)
	0x13aec0()
	0x13aec0()
}
