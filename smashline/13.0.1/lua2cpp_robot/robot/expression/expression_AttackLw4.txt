if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3);
}frame(fighter.lua_state_agent, 2.0);
execute(2);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
if(0x1050b0(false, true)){;
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_TOP);
}}frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_spinattacks"), 22, true);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 6);
}frame(fighter.lua_state_agent, 16.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
}frame(fighter.lua_state_agent, 22.0);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 7);
}frame(fighter.lua_state_agent, 29.0);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TPART, 3);
}