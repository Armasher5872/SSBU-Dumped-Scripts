methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	AREA_WIND_2ND_arg10(0, 1, 210, 2, 0.01, -10, 10, 20, 20, 10)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_NONE)
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=2)
0x1cb230()
0x1cb230()
WorkModule::is_flag(FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX)
0x1cb230(false, true)
0x1cb230()
0x1cb230()
if(0x1cb230()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1cb230()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 0, false)
		ControlModule::set_rumble()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		QUAKE(CAMERA_QUAKE_KIND_S)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1cb230()){
			methodlib::L2CValue::as_hash()const(0x10f5122f08, 0, false)
			ControlModule::set_rumble()
			0x1cb230()
			0x1cb230()
			0x1cb230()
		}
	}
}
frame(Frame=6)
0x1cb230()
0x1cb230()
WorkModule::is_flag(FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX)
0x1cb230(false, true)
0x1cb230()
0x1cb230()
if(0x1cb230()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1cb230()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 0, false)
		ControlModule::set_rumble()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		QUAKE(CAMERA_QUAKE_KIND_S)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1cb230()){
			methodlib::L2CValue::as_hash()const(0x10f5122f08, 0, false)
			ControlModule::set_rumble()
			0x1cb230()
			0x1cb230()
			0x1cb230()
		}
	}
}
frame(Frame=17)
0x1cb230()
0x1cb230()
WorkModule::is_flag(FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX)
0x1cb230(false, true)
0x1cb230()
0x1cb230()
if(0x1cb230()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1cb230()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 0, false)
		ControlModule::set_rumble()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		QUAKE(CAMERA_QUAKE_KIND_S)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1cb230()){
			methodlib::L2CValue::as_hash()const(0x10f5122f08, 0, false)
			ControlModule::set_rumble()
			0x1cb230()
			0x1cb230()
			0x1cb230()
		}
	}
}
frame(Frame=21)
0x1cb230()
0x1cb230()
WorkModule::is_flag(FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_N_FLAG_SPECIAL_N_CHARGE_MAX)
0x1cb230(false, true)
0x1cb230()
0x1cb230()
if(0x1cb230()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1cb230()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 0, false)
		ControlModule::set_rumble()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		QUAKE(CAMERA_QUAKE_KIND_S)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1cb230()){
			methodlib::L2CValue::as_hash()const(0x10f5122f08, 0, false)
			ControlModule::set_rumble()
			0x1cb230()
			0x1cb230()
			0x1cb230()
		}
	}
}
