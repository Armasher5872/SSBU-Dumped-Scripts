unsafe extern "C" fn effect_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 10.0);
    if is_excute(agent) {
        EFFECT_ALPHA(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false, 0.95);
    }
    frame(lua_state, 24.0);
    if is_excute(agent) {
        EFFECT_ALPHA(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false, 0.95);
    }
    frame(lua_state, 39.0);
    if is_excute(agent) {
        EFFECT_ALPHA(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false, 0.95);
    }
    frame(lua_state, 55.0);
    if is_excute(agent) {
        EFFECT_ALPHA(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false, 0.95);
    }
    frame(lua_state, 72.0);
    if is_excute(agent) {
        EFFECT_ALPHA(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false, 0.95);
    }
}

unsafe extern "C" fn sound_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 10.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_dedede_appeal03"));
        PLAY_STEP(agent, Hash40::new("se_dedede_step_right_m"));
    }
    frame(lua_state, 12.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_dedede_appeal_l01"));
    }
    frame(lua_state, 24.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_dedede_007"));
        PLAY_STEP(agent, Hash40::new("se_dedede_step_left_m"));
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_dedede_008"));
        PLAY_STEP(agent, Hash40::new("se_dedede_step_right_m"));
    }
    frame(lua_state, 43.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_dedede_appeal_l01"));
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_dedede_009"));
        PLAY_STEP(agent, Hash40::new("se_dedede_step_left_m"));
    }
    frame(lua_state, 73.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_dedede_010"));
        PLAY_STEP(agent, Hash40::new("se_dedede_step_right_m"));
    }
    frame(lua_state, 76.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_dedede_appeal_l01"));
    }
}

unsafe extern "C" fn expression_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 9.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 4);
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_lands_hv"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 19.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_R, 4);
    }
    frame(lua_state, 24.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_lands_hv"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 37.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 4);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_lands_hv"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_R, 4);
    }
    frame(lua_state, 55.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_lands_hv"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 70.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 4);
    }
    frame(lua_state, 73.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_landl_hv"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 95.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 4);
    }
}