frame(fighter.lua_state_agent, 25.0);
WorkModule::get_int(fighter.module_accessor, *WEAPON_MASTER_SWORD_INSTANCE_WORK_ID_INT_COLOR);
methodlib::L2CValue::operator%(lib::L2CValueconst&)const(0, 2);
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare"), Hash40::new("flare_on"));
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare2"), Hash40::new("flare2_on"));
}frame(fighter.lua_state_agent, 60.0);
WorkModule::get_int(fighter.module_accessor, *WEAPON_MASTER_SWORD_INSTANCE_WORK_ID_INT_COLOR);
methodlib::L2CValue::operator%(lib::L2CValueconst&)const(0, 2);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0)){;
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare"), Hash40::new("flare_on"));
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare2"), Hash40::new("flare2_on"));
}}frame(fighter.lua_state_agent, 125.0);
if macros::is_excute(fighter) {
battle_object();
methodlib::L2CValue::L2CValue(void*)();
}else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}methodlib::L2CValue::as_pointer()const();
fade_out_flare();
frame(fighter.lua_state_agent, 127.0);
WorkModule::get_int(fighter.module_accessor, *WEAPON_MASTER_SWORD_INSTANCE_WORK_ID_INT_COLOR);
methodlib::L2CValue::operator%(lib::L2CValueconst&)const(0, 2);
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare"), Hash40::new("flare_off"));
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare2"), Hash40::new("flare2_off"));
}frame(fighter.lua_state_agent, 130.0);
WorkModule::get_int(fighter.module_accessor, *WEAPON_MASTER_SWORD_INSTANCE_WORK_ID_INT_COLOR);
methodlib::L2CValue::operator%(lib::L2CValueconst&)const(0, 2);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0)){;
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare"), Hash40::new("flare_off"));
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("flare2"), Hash40::new("flare2_off"));
}}