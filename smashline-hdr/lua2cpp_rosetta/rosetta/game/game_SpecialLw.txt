#[acmd_script( agent = "rosetta", script = "game_speciallw", category = ACMD_GAME, low_priority)]
unsafe fn game_speciallw(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    frame(lua_state, 3.0);
    if is_excute(fighter) {
        WorkModule::on_flag(boma, *FIGHTER_ROSETTA_STATUS_SPECIAL_LW_FLAG_ENABLE_SEARCH);
    }
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
    if is_excute(fighter) {
        WorkModule::off_flag(boma, *FIGHTER_ROSETTA_STATUS_SPECIAL_LW_FLAG_ENABLE_SEARCH);
    }
    if is_excute(fighter) {
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY, *ITEM_TRAIT_FLAG_QUICK);
        ItemModule::use_item(boma, false, *FIGHTER_HAVE_ITEM_WORK_TEMPORARY);
        ItemModule::pickup_item(boma, *ITEM_SIZE_LIGHT);
    }
    wait(false, 1);
}