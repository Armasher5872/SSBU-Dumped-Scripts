unsafe extern "C" fn game_finalmove(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
    }
    PostureModule::scale(boma);
    if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(1964135695, 1.4)){
        if is_excute(agent) {
            ATTACK(agent, 0, 0, Hash40::new("top"), 6.0, 70, 93, 0, 80, 9.0, 0.0, 11.0, 0.0, Some(0.0), Some(11.0), Some(-60.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 50, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
            AttackModule::set_force_reaction(boma, 0, true, false);
            AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
        }
        else{
        PostureModule::scale(boma);
        if(methodlib::L2CValue::operator<=(lib::L2CValueconst&)const(1964135695, 0.5)){
            if is_excute(agent) {
                ATTACK(agent, 0, 0, Hash40::new("top"), 6.0, 70, 93, 0, 80, 12.0, 0.0, 11.0, 0.0, Some(0.0), Some(11.0), Some(-170.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 50, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
                AttackModule::set_force_reaction(boma, 0, true, false);
                AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
            }
            else{
            if is_excute(agent) {
                ATTACK(agent, 0, 0, Hash40::new("top"), 6.0, 70, 93, 0, 80, 9.0, 0.0, 11.0, 0.0, Some(0.0), Some(11.0), Some(-80.0), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 50, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
                AttackModule::set_force_reaction(boma, 0, true, false);
                AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
            }
        }
    }
}
}
if is_excute(agent) {
ControlModule::set_rumble(boma, Hash40::new("rbkind_38_rush_sp"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
}
}

unsafe extern "C" fn sound_finalmove(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_sonic_final03"));
    }
}