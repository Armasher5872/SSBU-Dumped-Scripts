#[acmd_script( agent = "jack", script = "expression_appealsr", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_appealsr(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    WorkModule::is_flag(boma, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_LOW_MODE);
    if(0x304a00(false, false)){
        if is_excute(fighter) {
            ArticleModule::generate_article(boma, *FIGHTER_JACK_GENERATE_ARTICLE_MONA, true);
            methodlib::L2CValue::as_hash()const(*FIGHTER_JACK_GENERATE_ARTICLE_MONA, Hash40::new("appeal_s_r"));
            ArticleModule::change_motion(boma);
        }
    }
    if is_excute(fighter) {
        ItemModule::set_have_item_visibility(boma, false);
    }
    frame(lua_state, 30.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
        ControlModule::set_rumble(boma);
    }
    frame(lua_state, 100.0);
    WorkModule::is_flag(boma, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_LOW_MODE);
    if(0x304a00(false, false)){
        if is_excute(fighter) {
            ArticleModule::remove_exist(boma, *FIGHTER_JACK_GENERATE_ARTICLE_MONA);
        }
    }
}