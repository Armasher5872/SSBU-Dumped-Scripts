unsafe extern "C" fn game_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_XLU);
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 9, 45);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 60);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            FT_START_CUTIN(agent);
            ATTACK(agent, 0, 0, Hash40::new("top"), 0.3, 70, 70, 30, 0, 5.5, 0.0, 0.0, 5.0, Some(0.0), Some(0.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            ATTACK(agent, 1, 0, Hash40::new("top"), 0.3, 40, 70, 30, 0, 5.5, 0.0, 10.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            AttackModule::set_final_finish_cut_in(boma, 0, true, false, -1, false);
            AttackModule::set_final_finish_cut_in(boma, 1, true, false, -1, false);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 3, 0);
            0x103370(1867797157, 2.2);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
            ATTACK(agent, 0, 0, Hash40::new("top"), 0.3, 70, 70, 30, 0, 5.5, 0.0, 0.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            ATTACK(agent, 1, 0, Hash40::new("top"), 0.3, 40, 70, 30, 0, 5.5, 0.0, 10.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 6, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
            AttackModule::set_final_finish_cut_in(boma, 0, true, false, -1, false);
            AttackModule::set_final_finish_cut_in(boma, 1, true, false, -1, false);
        }
    }
}
frame(lua_state, 11.0);
if is_excute(agent) {
    FT_ADD_DAMAGE(agent, 0.45);
}
frame(lua_state, 18.0);
if is_excute(agent) {
    FT_ADD_DAMAGE(agent, 0.45);
}
frame(lua_state, 25.0);
if is_excute(agent) {
    FT_ADD_DAMAGE(agent, 0.45);
}
frame(lua_state, 32.0);
if is_excute(agent) {
    FT_ADD_DAMAGE(agent, 0.45);
}
frame(lua_state, 35.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 39.0);
if is_excute(agent) {
    FT_ADD_DAMAGE(agent, 0.45);
}
frame(lua_state, 42.0);
if is_excute(agent) {
    FT_ADD_DAMAGE(agent, 0.45);
    ATTACK(agent, 0, 0, Hash40::new("top"), 1.0, 50, 100, 75, 0, 5.5, 0.0, 0.0, 5.0, Some(0.0), Some(0.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
    ATTACK(agent, 1, 0, Hash40::new("top"), 1.0, 20, 100, 40, 0, 5.5, 0.0, 10.0, 5.0, Some(0.0), Some(10.0), Some(-5.0), 0.2, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 50.0);
if is_excute(agent) {
    AttackModule::clear_all(boma);
}
}