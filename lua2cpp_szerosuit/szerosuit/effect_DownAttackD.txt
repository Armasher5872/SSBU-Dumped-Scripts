frame(Frame=15)
0x116fa0()
0x116fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x116fa0()){
	EFFECT(hash40("sys_atk_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, false)
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	EFFECT_FOLLOW(hash40("sys_attack_line"), hash40("top"), -1.5, 3, -4, -10, 0, 0, 0.9, true)
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
}
frame(Frame=17)
0x116fa0()
0x116fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x116fa0()){
	EFFECT(hash40("sys_attack_impact"), hash40("top"), -2, 5, 12, 0, 0, 0, 1, 0, 0, 0, 0, 0, 360, true)
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
}
frame(Frame=20)
0x116fa0()
0x116fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x116fa0()){
	LANDING_EFFECT(hash40("sys_whirlwind_r"), hash40("top"), 0, 0, -3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	EFFECT_FOLLOW(hash40("sys_attack_arc_d"), hash40("top"), 0, 3, 2, 180, 40, 5, 1.15, true)
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	0x116fa0()
	LAST_EFFECT_SET_RATE(1.3)
	0x116fa0()
}
frame(Frame=27)
0x116fa0()
0x116fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x116fa0()){
	EFFECT_OFF_KIND(hash40("sys_attack_arc_d"), true, true)
	0x116fa0()
	0x116fa0()
	0x116fa0()
}
