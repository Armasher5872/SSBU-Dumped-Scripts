if macros::is_excute(fighter) {
	macros::WHOLE_HIT(fighter, *HIT_STATUS_XLU);
	AttackModule::clear_all(fighter.module_accessor);
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 10.0, 63, 120, 0, 100, 12.0, 0.0, 8.0, 2.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_IKE, *ATTACK_REGION_NONE);
	macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 10.0, 63, 120, 0, 100, 16.0, 0.0, 8.0, 18.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_IKE, *ATTACK_REGION_NONE);
	macros::ATTACK(fighter, 2, 0, Hash40::new("top"), 10.0, 63, 120, 0, 100, 18.0, 0.0, 8.0, 36.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_LL, *COLLISION_SOUND_ATTR_IKE, *ATTACK_REGION_NONE);
	macros::ATTACK(fighter, 4, 0, Hash40::new("top"), 10.0, 63, 120, 0, 100, 18.0, 0.0, 10.0, 23.0, Some(0.0), Some(50.0), Some(23.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, Hash40::new("no"), 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
	AttackModule::set_force_reaction(fighter.module_accessor, 0, true, false);
	AttackModule::set_force_reaction(fighter.module_accessor, 1, true, false);
	AttackModule::set_force_reaction(fighter.module_accessor, 2, true, false);
	AttackModule::set_force_reaction(fighter.module_accessor, 4, true, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 0, true, false, -1, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 1, true, false, -1, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 2, true, false, -1, false);
	AttackModule::set_final_finish_cut_in(fighter.module_accessor, 4, true, false, -1, false);
}
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
}
