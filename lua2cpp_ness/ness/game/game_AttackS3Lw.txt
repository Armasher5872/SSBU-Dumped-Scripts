frame(Frame=7)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	ATTACK(ID=0, Part=0, Bone=hash40("legl"), Damage=10.0, Angle=361, KBG=100, FKB=0, BKB=35, Size=3.6, X=0.6, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	ATTACK(ID=1, Part=0, Bone=hash40("kneel"), Damage=10.0, Angle=361, KBG=100, FKB=0, BKB=35, Size=4.8, X=2.7, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0xfda50()
	0xfda50()
}
wait(Frames=4)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	AttackModule::clear_all()
}
