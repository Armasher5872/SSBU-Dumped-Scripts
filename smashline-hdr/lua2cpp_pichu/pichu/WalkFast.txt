unsafe extern "C" fn effect_walkfast(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    wait_loop_sync_mot();
    frame(lua_state, 7.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 37.0);
    FOOT_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}

unsafe extern "C" fn sound_walkfast(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    wait_loop_sync_mot();
    frame(lua_state, 7.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_pichu_step_left_l"));
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_pichu_step_right_l"));
    }
    frame(lua_state, 21.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_pichu_step_left_l"));
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_pichu_step_right_l"));
    }
    frame(lua_state, 36.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_pichu_step_left_l"));
    }
    frame(lua_state, 39.0);
    PLAY_STEP(agent, Hash40::new("se_pichu_step_right_l"));
}

unsafe extern "C" fn expression_walkfast(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 5);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, 0x11699da2fd, 6, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, 0x11699da2fd, 6, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 32.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, 0x11699da2fd, 6, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait_loop_sync_mot();
    methodlib::L2CAgent::pop();
    wait_loop_sync_mot();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 10);
    }
    frame(lua_state, 1.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 10, true);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, 0x11699da2fd, 6, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, 0x11699da2fd, 6, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 32.0);
    loc.imp._Unwind_Resume();
}