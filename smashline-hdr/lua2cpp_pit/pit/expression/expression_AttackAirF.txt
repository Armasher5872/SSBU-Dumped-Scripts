#[acmd_script( agent = "pit", script = "expression_attackairf" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackairf(fighter: &mut L2CAgentBase) {
	let lua_state = fighter.lua_state_agent;
	let boma = fighter.boma();
	if is_excute(fighter) {
		VisibilityModule::set_status_default_int64(boma, Hash40::new("weapon"), 0x11242751f5);
	}
	frame(lua_state, 8.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
		ControlModule::set_rumble(boma);
	}
	frame(lua_state, 11.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 6);
	}
	frame(lua_state, 18.0);
	if is_excute(fighter) {
		RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 0);
	}
	frame(lua_state, 30.0);
	if is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_grapple"), 3, false);
		ControlModule::set_rumble(boma);
	}
}