unsafe extern "C" fn game_finalair(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 5.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 55);
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04final.nuanmb"), false);
            FT_REQ_FINAL_AURA(agent);
        }
        else {
        if is_excute(agent) {
            PostureModule::scale(boma, 3, 0);
            0x4ae890(274602962, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
        }
    }
}
if is_excute(agent) {
    SLOW_OPPONENT(agent, 40, 57);
}
frame(lua_state, 25.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 47.0);
if is_excute(agent) {
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 35, 0, 25, 0);
}
frame(lua_state, 56.0);
if is_excute(agent) {
    ArticleModule::generate_article(boma, *FIGHTER_TRAIL_GENERATE_ARTICLE_BEAM, false, -1);
}
}

unsafe extern "C" fn effect_finalair(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_trail_final"), false, false, false);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("trail_final_keyblade"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 29.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("trail_final_beam1_hold"), Hash40::new("haver"), 0, 12, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("trail_final_keyblade"), false, true);
        EFFECT_FOLLOW(agent, Hash40::new("trail_final_beam1_shot"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, false);
        EFFECT_OFF_KIND(agent, Hash40::new("trail_final_beam1_hold"), false, true);
    }
}

unsafe extern "C" fn sound_finalair(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_final01"));
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_trail_final01"));
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_final01_02"));
    }
    frame(lua_state, 102.0);
    if WorkModule::is_flag(boma, *FIGHTER_TRAIL_STATUS_FINAL_FLAG_HIT) {
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_trail_final02"));
        }
    }
}

unsafe extern "C" fn expression_finalair(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        START_INFO_FLASH_EYE(agent);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    if is_excute(agent) {
        START_INFO_FLASH_EYE(agent);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 47.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase_sp"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 60.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_81_kirifuda"), 50, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 117.0);
    if ItemModule::is_have_item(boma, 0) {
        if is_excute(agent) {
            FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.05);
        }
    }
    frame(lua_state, 124.0);
    if is_excute(agent) {
        FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.07);
    }
    frame(lua_state, 128.0);
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, true, 0);
    }
    frame(lua_state, 132.0);
    if is_excute(agent) {
        FT_MOTION_INTP_WAIT_ITEM(agent, true, 0);
    }
}