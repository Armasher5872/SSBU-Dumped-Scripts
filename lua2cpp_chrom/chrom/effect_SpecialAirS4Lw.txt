frame(Frame=6)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	EFFECT_FOLLOW(0x115a027923, hash40("sword1"), -0.0, 0, 0, 0, 0, 0, 1, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
}
frame(Frame=7)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("top"), -5, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	EFFECT(hash40("sys_attack_speedline"), hash40("haver"), 0, -3.5, 0, -90, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_PARTICLE_SET_COLOR(0.4, 1, 0.3)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_EFFECT_SET_RATE(2)
	0x12ba60()
}
frame(Frame=10)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	EFFECT(hash40("sys_attack_speedline"), hash40("haver"), 0, -3.5, 0, -90, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_PARTICLE_SET_COLOR(0.4, 1, 0.3)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_EFFECT_SET_RATE(2)
	0x12ba60()
}
frame(Frame=13)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("top"), -5, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	EFFECT(hash40("sys_attack_speedline"), hash40("haver"), 0, -3.5, 0, -90, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_PARTICLE_SET_COLOR(0.4, 1, 0.3)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_EFFECT_SET_RATE(2)
	0x12ba60()
}
frame(Frame=16)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	EFFECT(hash40("sys_attack_speedline"), hash40("haver"), 0, -3.5, 0, -90, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_PARTICLE_SET_COLOR(0.4, 1, 0.3)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_EFFECT_SET_RATE(2)
	0x12ba60()
}
frame(Frame=19)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -7, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	EFFECT(hash40("sys_attack_speedline"), hash40("haver"), 0, -3.5, 0, -90, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_PARTICLE_SET_COLOR(0.4, 1, 0.3)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	LAST_EFFECT_SET_RATE(1.5)
	0x12ba60()
}
frame(Frame=22)
0x12ba60()
0x12ba60()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	EFFECT_OFF_KIND(0x115a027923, false, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
}
