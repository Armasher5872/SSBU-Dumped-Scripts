unsafe extern "C" fn game_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 9.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("head") as i64, hash40("head_bomb") as i64);
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("head") as i64, hash40("head_normal") as i64);
    }
}

unsafe extern "C" fn effect_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("ness_entry"), Hash40::new("waist"), 2, -2, 0, 0, 0, 0, 1, true);
        FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("toel"), -6, 0, -2, 0, -26, 0, 1.2, 0, 0, 2, 0, 0, 0, false);
    }
    frame(lua_state, 1.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("toel"), -6, 0, -2, 0, -26, 0, 1, 0, 0, 2, 0, 0, 0, false);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("toel"), -6, 0, -2, 0, -26, 0, 1.1, 0, 0, 2, 0, 0, 0, false);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("toel"), -6, 0, -2, 0, -26, 0, 0.9, 0, 0, 2, 0, 0, 0, false);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("ness_entry_smoke"), Hash40::new("top"), 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        EFFECT_FOLLOW(agent, Hash40::new("ness_black_face"), Hash40::new("head"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        FLASH(agent, 0, 0, 0, 1);
        ColorBlendModule::set_disable_camera_depth_influence(boma, true);
    }
    wait(lua_state, 20.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 40, 0, 0, 0, 1);
    }
    wait(lua_state, 20.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("ness_black_face"), false, false);
        FLASH_FRM(agent, 40, 0, 0, 0, 0);
    }
    wait(lua_state, 40.0);
    if is_excute(agent) {
        COL_NORMAL(agent);
        ColorBlendModule::set_disable_camera_depth_influence(boma, false);
    }
}

unsafe extern "C" fn sound_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appear01"));
    }
    wait(lua_state, 51.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appeal01"));
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appeal01"));
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appeal01"));
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appeal01"));
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appeal01"));
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_ness_appeal01"));
    }
}

unsafe extern "C" fn expression_entryr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_attach_item_visibility(boma, false);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f20a9d549), false);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x24772eddef), false);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 7.0);
    if is_excute(agent) {
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x1f20a9d549), true);
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x24772eddef), true);
        QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        ItemModule::set_attach_item_visibility(boma, true);
    }
}