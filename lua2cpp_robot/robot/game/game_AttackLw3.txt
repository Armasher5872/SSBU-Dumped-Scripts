frame(Frame=3)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=5.0, Angle=361, KBG=100, FKB=0, BKB=2, Size=3.4, X=0.0, Y=1.7, Z=21.0, X2=0.0, Y2=7.0, Z2=9.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.2, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0x104a50()
	0x104a50()
}
frame(Frame=4)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	AttackModule::clear_all()
}
