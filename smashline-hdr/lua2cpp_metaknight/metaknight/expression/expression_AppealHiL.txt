#[acmd_script( agent = "metaknight", script = "expression_appealhil", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appealhil(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    IS_EXIST_ARTICLE(fighter, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE);
    if(0x12e770(false, false)){
        if is_excute(fighter) {
            ArticleModule::generate_article(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, true);
        }
        else{
        if is_excute(fighter) {
            ArticleModule::set_visibility_whole(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, true);
        }
    }
}
if is_excute(fighter) {
    ArticleModule::change_motion(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, Hash40::new("appeal_hi"), false, -1.0);
}
frame(lua_state, 21.0);
if is_excute(fighter) {
    ArticleModule::set_visibility_whole(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, false);
    ItemModule::set_have_item_visibility(boma, false);
    ItemModule::set_attach_item_visibility(boma, false);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), false);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), false);
    ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(lua_state, 50.0);
if is_excute(fighter) {
    ArticleModule::set_visibility_whole(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, true);
    ItemModule::set_have_item_visibility(boma, true);
    ItemModule::set_attach_item_visibility(boma, true);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), true);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), true);
    ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
}