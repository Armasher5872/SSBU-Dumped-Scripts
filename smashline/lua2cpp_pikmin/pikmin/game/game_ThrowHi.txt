#[acmd_script( agent = "pikmin", script = "game_throwhi" , category = ACMD_GAME , low_priority)]
unsafe fn game_throwhi(fighter: &mut L2CAgentBase) {
	if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_RED)){;
		if macros::is_excute(fighter) {
			macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 5.4, 85, 80, 0, 81, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
		}
		else{;
		if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_YELLOW)){;
			if macros::is_excute(fighter) {
				macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 7.0, 85, 79, 0, 81, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
			}
			else{;
			if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_BLUE)){;
				if macros::is_excute(fighter) {
					macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 12.5, 85, 66, 0, 83, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
				}
				else{;
				if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_WHITE)){;
					if macros::is_excute(fighter) {
						macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 7.0, 85, 77, 0, 82, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_purple"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
					}
					else{;
					if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(*FIGHTER_PIKMIN_INSTANCE_WORK_INT_THROW_PIKMIN_VARIATION, *WEAPON_PIKMIN_PIKMIN_VARIATION_VIOLET)){;
						if macros::is_excute(fighter) {
							macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 7.0, 85, 76, 0, 83, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
						}
					}
				}
			}
		}
	}
}
}
}
}
frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
macros::WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
}
frame(fighter.lua_state_agent, 21.0);
if macros::is_excute(fighter) {
macros::CHECK_FINISH_CAMERA(fighter, 0, 0);
FighterCutInManager::set_throw_finish_zoom_rate(fighter.module_accessor, 1.5);
FighterCutInManager::set_throw_finish_offset(fighter.module_accessor, 6, 2, 0);
}
frame(fighter.lua_state_agent, 22.0);
if macros::is_excute(fighter) {
macros::WHOLE_HIT(fighter, *HIT_STATUS_NORMAL);
}
