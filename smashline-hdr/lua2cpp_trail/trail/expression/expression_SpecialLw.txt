#[acmd_script( agent = "trail", script = "expression_speciallw", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_speciallw(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
        RUMBLE_HIT(fighter, Hash40::new("rbkind_81_special_lw3"), 0);
    }
    frame(lua_state, 7.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 19.0);
    for _ in 0..18 {
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_81_speciallw_land"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 2.0);
}
frame(lua_state, 50.0);
ItemModule::is_have_item(boma, 0);
if(0x4ae890(false, true)){
    if is_excute(fighter) {
        FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.05);
    }
}
frame(lua_state, 57.0);
if is_excute(fighter) {
    FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.07);
}
frame(lua_state, 66.0);
if is_excute(fighter) {
    ItemModule::set_have_item_visibility(boma, true, 0);
}
frame(lua_state, 68.0);
if is_excute(fighter) {
    FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
}
if is_excute(fighter) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_81_landingairlwlight"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
wait(lua_state, 2.0);
}