frame(Frame=1)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	FighterAreaModuleImpl::enable_fix_jostle_area(2, 4)
	0x13ae40()
	0x13ae40()
	ArticleModule::generate_article(FIGHTER_MURABITO_GENERATE_ARTICLE_WEEDS, true)
	0x13ae40()
	0x13ae40()
}
frame(Frame=9)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	ArticleModule::remove(FIGHTER_MURABITO_GENERATE_ARTICLE_WEEDS)
	0x13ae40()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=12.0, Angle=75, KBG=95, FKB=0, BKB=50, Size=5.0, X=0.0, Y=3.0, Z=3.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.3, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=10.0, Angle=70, KBG=95, FKB=0, BKB=50, Size=6.0, X=0.0, Y=3.0, Z=10.0, X2=0.0, Y2=3.0, Z2=2.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.3, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_G, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0x13ae40()
	0x13ae40()
}
wait(Frames=3)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	AttackModule::clear_all()
}
frame(Frame=18)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	FighterAreaModuleImpl::enable_fix_jostle_area(3.8, 3)
	0x13ae40()
	0x13ae40()
}
