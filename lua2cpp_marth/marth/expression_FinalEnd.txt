methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	methodlib::L2CValue::as_hash()const(hash40("haver"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	0x139640()
	0x139640()
	0x139640()
	0x139640()
	ItemModule::set_have_item_visibility(false)
	0x139640()
	QUAKE(CAMERA_QUAKE_KIND_L)
	0x139640()
}
frame(Frame=1)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=2)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	RUMBLE_HIT(0x1218e122f3, 0)
	0x139640()
	0x139640()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitll_l"), 0, false)
	ControlModule::set_rumble()
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=66)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x139640()
	0x139640()
	0x139640()
	0x139640()
}
