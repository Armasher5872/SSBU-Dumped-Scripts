WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_RESULT_FIGHTER_SINGLE);
if(0x3de840(false, false)){;
	if macros::is_excute(fighter) {
		ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_EFLAME_GENERATE_ARTICLE_DIVER);
		methodlib::L2CValue::as_hash()const(*FIGHTER_EFLAME_GENERATE_ARTICLE_DIVER, Hash40::new("f_win_1"));
		ArticleModule::change_motion(fighter.module_accessor);
	}
}
macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_EFLAME_GENERATE_ARTICLE_ESWORD);
if(0x3de840(false, true)){;
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(*FIGHTER_EFLAME_GENERATE_ARTICLE_ESWORD, *WEAPON_EFLAME_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, Hash40::new("to_open"), 10, 10, false, false, 0, false, true, false);
		ArticleModule::add_motion_partial(fighter.module_accessor);
	}
}
MotionModule::is_changing(fighter.module_accessor);
if(0x3de840(false, true)){;
	if macros::is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_EFLAME_INSTANCE_WORK_ID_FLAG_ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING);
	}
}
frame(0, 54);
macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_EFLAME_GENERATE_ARTICLE_ESWORD);
if(0x3de840(false, true)){;
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(*FIGHTER_EFLAME_GENERATE_ARTICLE_ESWORD, *WEAPON_EFLAME_ESWORD_MOTION_PART_SET_KIND_OPEM_CLOSE, Hash40::new("to_close"), 5, 5, false, false, 0, false, true, false);
		ArticleModule::add_motion_partial(fighter.module_accessor);
	}
}
MotionModule::is_changing(fighter.module_accessor);
if(0x3de840(false, true)){;
	if macros::is_excute(fighter) {
		WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_EFLAME_INSTANCE_WORK_ID_FLAG_ADD_PARTIAL_MTION_SWORD_WHEN_CHANGEING);
	}
}
