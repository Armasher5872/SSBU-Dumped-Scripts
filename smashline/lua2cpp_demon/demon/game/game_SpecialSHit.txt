battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 1);
set_devil();
frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
	JostleModule::set_status(fighter.module_accessor, false);
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 6.0, 100, 75, 0, 60, 4.0, 0.0, 8.0, 4.0, Some(0.0), Some(8.0), Some(10.0), 0.1, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_DEMON_PUNCH01, *ATTACK_REGION_PUNCH);
	macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 6.0, 100, 50, 0, 80, 4.0, 0.0, 8.0, 4.0, Some(0.0), Some(8.0), Some(10.0), 0.1, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_DEMON_PUNCH01, *ATTACK_REGION_PUNCH);
}
frame(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
}
