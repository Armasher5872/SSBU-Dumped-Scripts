unsafe extern "C" fn expression_finalvisualscene(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase_sp"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_erase_sp"), 0);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_nohits"), 0);
    }
    frame(lua_state, 70.0);
    for _ in 0..6 {
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attacks"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 6, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 8.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_beams"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 7.0);
}
frame(lua_state, 210.0);
if is_excute(agent) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_attack_critical"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_attack_critical"), 0);
}
}