if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("body"), Hash40::new("body_normal"));
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 2);
}frame(fighter.lua_state_agent, 3.0);
execute(3);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
if(0x119a00(false, true)){;
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_TOP);
}}frame(fighter.lua_state_agent, 12.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 12);
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 6, false);
ControlModule::set_rumble(fighter.module_accessor);
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}frame(fighter.lua_state_agent, 20.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 28.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 61.0);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 8);
}