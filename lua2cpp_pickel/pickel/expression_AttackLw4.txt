methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=3)
0x349fc0()
0x349fc0()
execute(3)
0x349fc0()
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
0x349fc0(false, true)
0x349fc0()
0x349fc0()
if(0x349fc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x349fc0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
		ControlModule::set_rumble()
		0x349fc0()
		0x349fc0()
		0x349fc0()
	}
}
frame(Frame=6)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 3, true)
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=7)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	methodlib::L2CValue::as_hash()const(0x13a13e9812, 0, false)
	ControlModule::set_rumble()
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=8)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	RUMBLE_HIT(0x11bb9fdd5b, 0)
	0x349fc0()
	0x349fc0()
}
frame(Frame=49)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 7)
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
