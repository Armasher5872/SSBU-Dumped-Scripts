unsafe extern "C" fn game_cliffcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 20.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_WORK_ID_FLAG_RESERVE_CHANGE_STATUS_DLAY_MOTION);
    }
}

unsafe extern "C" fn effect_cliffcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_cliff_catch"), Hash40::new("handr2"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
        else {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_cliff_catch"), Hash40::new("handr2"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
    }
}
}

unsafe extern "C" fn sound_cliffcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 3.0);
    if is_excute(agent) {
        STOP_SE(agent, Hash40::new("se_robot_special_h01"));
        PLAY_SE(agent, Hash40::new("se_robot_criff_catch"));
    }
    wait(lua_state, 2.0);
    if IS_RANDOM(agent, 2) {
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("vc_robot_cliffcatch"));
        }
    }
}

unsafe extern "C" fn expression_cliffcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    methodlua2cpp::L2CFighterAnimcmdExpressionCommon::expression_CliffCatchRumble()();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_grapple"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}