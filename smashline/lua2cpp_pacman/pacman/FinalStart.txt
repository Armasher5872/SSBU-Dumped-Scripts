unsafe extern "C" fn game_finalstart(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    macros::FT_MOTION_RATE(agent, 0.6);
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 5, 90);
    }
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 70);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), true, false);
            macros::FT_START_CUTIN(agent);
        }
        else {
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 3, 0);
            0x11a0d0(-2004456512, 2.7);
            CAM_ZOOM_IN_arg5(0, 0);
            macros::FT_START_CUTIN(agent);
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 15);
        }
    }
}
frame(agent.lua_state_agent, 40.0);
if macros::is_excute(agent) {
    macros::CAM_ZOOM_OUT(agent);
}
frame(agent.lua_state_agent, 100.0);
macros::FT_MOTION_RATE(agent, 1.0);
if macros::is_excute(agent) {
    WorkModule::on_flag(agent.module_accessor, *FIGHTER_PACMAN_STATUS_FINAL_FLAG_CHANGE);
}
frame(agent.lua_state_agent, 101.0);
if macros::is_excute(agent) {
    SlowModule::set_whole(agent.module_accessor, 5, 0);
}
frame(agent.lua_state_agent, 102.0);
if macros::is_excute(agent) {
    SlowModule::clear_whole(agent.module_accessor);
}
frame(agent.lua_state_agent, 105.0);
if macros::is_excute(agent) {
    SlowModule::set_whole(agent.module_accessor, 5, 0);
}
frame(agent.lua_state_agent, 106.0);
if macros::is_excute(agent) {
    SlowModule::clear_whole(agent.module_accessor);
}
frame(agent.lua_state_agent, 110.0);
if macros::is_excute(agent) {
    WorkModule::on_flag(agent.module_accessor, *FIGHTER_PACMAN_STATUS_FINAL_FLAG_START_MOVE);
}
}

unsafe extern "C" fn effect_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_pacman_final"), false, false, false);
    }
    frame(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("finpacman_change_start"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT_FLW_POS(agent, Hash40::new("finpacman_change_start_flash"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, false);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FLW_POS(agent, Hash40::new("finpacman_change_start_ring"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, false);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 70.0);
    if macros::is_excute(agent) {
        macros::EFFECT_OFF_KIND(agent, Hash40::new("sys_final_aura"), false, false);
    }
    frame(agent.lua_state_agent, 127.0);
    if macros::is_excute(agent) {
        macros::FT_REMOVE_FINAL_AURA(agent, true);
    }
}

unsafe extern "C" fn sound_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_pacman_final01"));
    }
}

unsafe extern "C" fn expression_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::START_INFO_FLASH_EYE(agent);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        VisibilityModule::set_int64(agent.module_accessor, hash40("final_poweresa") as i64, hash40("final_poweresa_disp") as i64);
    }
    frame(agent.lua_state_agent, 77.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        VisibilityModule::set_int64(agent.module_accessor, hash40("final_poweresa") as i64, hash40("final_poweresa_disp_off") as i64);
    }
    frame(agent.lua_state_agent, 88.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_warpstar"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 155.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
}