methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	ItemModule::set_have_item_visibility(false)
	0x11a250()
	methodlib::L2CValue::as_hash()const(hash40("arml"), ATTACK_DIRECTION_X, ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y)
	AttackModule::set_attack_reference_joint_id()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
}
frame(Frame=6)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	RUMBLE_HIT(hash40("rbkind_attackm"), 10)
	0x11a250()
	0x11a250()
}
frame(Frame=8)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
	0x11a250()
	0x11a250()
	0x11a250()
}
frame(Frame=9)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	RUMBLE_HIT(hash40("rbkind_attacks"), 3)
	0x11a250()
	0x11a250()
}
frame(Frame=21)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	RUMBLE_HIT(hash40("rbkind_attackl"), 0)
	0x11a250()
	0x11a250()
}
