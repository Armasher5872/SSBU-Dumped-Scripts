methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	methodlib::L2CValue::as_hash()const(hash40("knife"), ATTACK_DIRECTION_Y, ATTACK_DIRECTION_Z, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
}
frame(Frame=11)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x3046e0()
	0x3046e0()
	0x3046e0()
}
WorkModule::is_flag(FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_DOYLE)
0x3046e0(false, true)
0x3046e0()
0x3046e0()
if(0x3046e0()){
	frame(Frame=13)
	0x3046e0()
	0x3046e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3046e0()){
		RUMBLE_HIT(hash40("rbkind_slashm"), 6)
		0x3046e0()
		0x3046e0()
	}
}
frame(Frame=15)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	RUMBLE_HIT(hash40("rbkind_slashm"), 0)
}
else{
	frame(Frame=0)
	0x3046e0()
	0x3046e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3046e0()){
		RUMBLE_HIT(hash40("rbkind_slashm"), 0)
		0x3046e0()
		0x3046e0()
	}
}
