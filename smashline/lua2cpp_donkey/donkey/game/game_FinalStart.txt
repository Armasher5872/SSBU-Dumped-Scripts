#[acmd_script( agent = "donkey", script = "game_finalstart", category = ACMD_GAME, low_priority )]
unsafe fn game_finalstart(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        macros::CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(fighter, 7, 30);
    }
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(fighter.lua_state_agent, 5.0);
        if macros::is_excute(fighter) {
            macros::FT_SET_FINAL_FEAR_FACE(fighter, 20);
            macros::REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstart.nuanmb"), false);
            macros::FT_START_CUTIN(fighter);
        }
    }
    frame(fighter.lua_state_agent, 15.0);
    if macros::is_excute(fighter) {
        SlowModule::set_whole(fighter.module_accessor, 30, 0);
    }
    frame(fighter.lua_state_agent, 16.0);
    if macros::is_excute(fighter) {
        SlowModule::clear_whole(fighter.module_accessor);
    }
    else{
    if macros::is_excute(fighter) {
        PostureModule::scale(fighter.module_accessor, 5, 0);
        0x120890(298784397, 2);
        CAM_ZOOM_IN_arg5(0, 0);
        macros::FT_START_CUTIN(fighter);
    }
}
frame(fighter.lua_state_agent, 24.0);
if macros::is_excute(fighter) {
    SlowModule::clear_whole(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
    macros::CAM_ZOOM_OUT(fighter);
}
frame(fighter.lua_state_agent, 29.0);
if macros::is_excute(fighter) {
    macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 12.0, 361, 0, 0, 0, 13.0, 0.0, 10.0, 8.0, Some(0.0), Some(10.0), Some(28.0), 5.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
}
frame(fighter.lua_state_agent, 34.0);
if macros::is_excute(fighter) {
    macros::CAM_ZOOM_OUT(fighter);
}
frame(fighter.lua_state_agent, 35.0);
if macros::is_excute(fighter) {
    AttackModule::clear_all(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 37.0);
if macros::is_excute(fighter) {
    WorkModule::on_flag(fighter.module_accessor, *FIGHTER_DONKEY_STATUS_FINAL_FLAG_TO_ATTACK);
}
}