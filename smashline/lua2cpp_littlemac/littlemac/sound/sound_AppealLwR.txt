#[acmd_script( agent = "littlemac", script = "sound_appeallwr", category = ACMD_SOUND, low_priority)]
unsafe fn sound_appeallwr(fighter: &mut L2CAgentBase) {
    macros::IS_RANDOM(fighter, 10);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        frame(fighter.lua_state_agent, 1.0);
        if macros::is_excute(fighter) {
            macros::PLAY_SE(fighter, Hash40::new("vc_littlemac_appeal06"));
        }
    }
    frame(fighter.lua_state_agent, 16.0);
    if macros::is_excute(fighter) {
        macros::PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
    }
    frame(fighter.lua_state_agent, 24.0);
    if macros::is_excute(fighter) {
        macros::PLAY_SE(fighter, Hash40::new("se_littlemac_smash_s02"));
    }
    frame(fighter.lua_state_agent, 32.0);
    if macros::is_excute(fighter) {
        macros::PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
    }
    frame(fighter.lua_state_agent, 48.0);
    if macros::is_excute(fighter) {
        macros::PLAY_SE(fighter, Hash40::new("se_littlemac_special_l01"));
    }
    else{
    frame(fighter.lua_state_agent, 10.0);
    if macros::is_excute(fighter) {
        macros::PLAY_SE(fighter, Hash40::new("vc_littlemac_appeal03"));
    }
}
frame(fighter.lua_state_agent, 16.0);
if macros::is_excute(fighter) {
    macros::PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
}
frame(fighter.lua_state_agent, 24.0);
if macros::is_excute(fighter) {
    macros::PLAY_SE(fighter, Hash40::new("se_littlemac_smash_s02"));
}
frame(fighter.lua_state_agent, 32.0);
if macros::is_excute(fighter) {
    macros::PLAY_SE(fighter, Hash40::new("se_littlemac_swing_m"));
}
frame(fighter.lua_state_agent, 48.0);
if macros::is_excute(fighter) {
    macros::PLAY_SE(fighter, Hash40::new("se_littlemac_special_l01"));
}
}