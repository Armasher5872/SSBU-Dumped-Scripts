WorkModule::is_flag(FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON)
0x142050(false, true)
0x142050()
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("sword"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	0x142050()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=7)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=9)
0x142050()
0x142050()
execute(9)
0x142050()
WorkModule::is_flag(FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON)
0x142050(false, true)
0x142050()
0x142050()
if(0x142050()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x142050()){
		RUMBLE_HIT(hash40("rbkind_slashl"), 0)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x142050()){
			RUMBLE_HIT(hash40("rbkind_slashm"), 0)
			0x142050()
			0x142050()
		}
	}
}
frame(Frame=22)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
