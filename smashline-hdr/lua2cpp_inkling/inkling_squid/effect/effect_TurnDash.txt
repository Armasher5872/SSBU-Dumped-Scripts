#[acmd_script( agent = "inkling_squid", script = "effect_turndash", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_turndash(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    frame(lua_state, 1.0);
    if is_excute(fighter) {
        EFFECT(fighter, Hash40::new("inkling_squid_swim"), Hash40::new("trans"), -8, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    WorkModule::get_float(boma, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_R);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_G);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_B);
    if is_excute(fighter) {
        LAST_PARTICLE_SET_COLOR(fighter);
    }
    frame(lua_state, 4.0);
    if is_excute(fighter) {
        EFFECT(fighter, Hash40::new("inkling_squid_swim"), Hash40::new("trans"), -4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    WorkModule::get_float(boma, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_R);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_G);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_B);
    if is_excute(fighter) {
        LAST_PARTICLE_SET_COLOR(fighter);
    }
    frame(lua_state, 6.0);
    if is_excute(fighter) {
        EFFECT(fighter, Hash40::new("inkling_squid_swim"), Hash40::new("trans"), -3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    WorkModule::get_float(boma, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_R);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_G);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_B);
    if is_excute(fighter) {
        LAST_PARTICLE_SET_COLOR(fighter);
    }
    frame(lua_state, 8.0);
    if is_excute(fighter) {
        EFFECT(fighter, Hash40::new("inkling_squid_swim"), Hash40::new("trans"), -1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    WorkModule::get_float(boma, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_R);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_G);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_B);
    if is_excute(fighter) {
        LAST_PARTICLE_SET_COLOR(fighter);
    }
    frame(lua_state, 10.0);
    if is_excute(fighter) {
        EFFECT(fighter, Hash40::new("inkling_squid_swim"), Hash40::new("trans"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    WorkModule::get_float(boma, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_R);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_G);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_B);
    if is_excute(fighter) {
        LAST_PARTICLE_SET_COLOR(fighter);
    }
    frame(lua_state, 16.0);
    if is_excute(fighter) {
        EFFECT(fighter, Hash40::new("inkling_squid_change"), Hash40::new("head"), 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    WorkModule::get_float(boma, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_R);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_G);
    WorkModule::get_float(boma, -1407754940, *WEAPON_INKLING_SQUID_INSTANCE_WORK_ID_FLOAT_B);
    if is_excute(fighter) {
        LAST_PARTICLE_SET_COLOR(fighter);
    }
}