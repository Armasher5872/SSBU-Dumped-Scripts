frame(Frame=1)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT(hash40("sys_smash_flash"), hash40("tail3"), 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	EFFECT_FOLLOW_NO_STOP(0x0dc435ade4, hash40("head"), 0, 0, 0, 0, -90, -90, 1, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=6)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_NO_STOP(0x0dc435ade4, hash40("head"), 0, 0, 0, 0, -90, -90, 1, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	EFFECT_FOLLOW_NO_STOP(0x0d80fa81c5, hash40("top"), 0, 5, 7, 0, 0, 0, 1, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	EFFECT_FOLLOW_NO_STOP(0x0d80fa81c5, hash40("top"), 0, 5, -7, 0, 180, 0, 1, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	EFFECT_FOLLOW_NO_STOP(0x0c908c7e81, hash40("tail3"), 2, 0, 3, 0, 0, 0, 1, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=8)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_FLIP(0x107a6a9db1, 0x107a6a9db1, hash40("top"), 0, 3, 0, 0, -100, 0, 1.2, true, EF_FLIP_YZ)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=14)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	FOOT_EFFECT_FLIP(hash40("sys_whirlwind_l"), hash40("sys_whirlwind_r"), hash40("top"), 0, 0, 0, 0, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	LAST_EFFECT_SET_ALPHA(0.5)
	0x101020()
	LAST_EFFECT_SET_RATE(0.9)
	0x101020()
}
frame(Frame=15)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_FLIP(0x107a6a9db1, 0x107a6a9db1, hash40("top"), 0, 3, 1, 0, 90, 0, 1.2, true, EF_FLIP_YZ)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	EFFECT_OFF_KIND(0x0d80fa81c5, false, true)
	0x101020()
	0x101020()
	0x101020()
	LANDING_EFFECT(hash40("null"), hash40("top"), 0, 0, 0, 0, 0, 0, 0.75, 0, 0, 0, 0, 0, 0, false)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=20)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_NO_STOP(0x0d80fa81c5, hash40("top"), 0, 9, 0, 0, 0, 0, 1.3, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=26)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_OFF_KIND(0x0d80fa81c5, false, true)
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=30)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_OFF_KIND(0x0c908c7e81, false, true)
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=35)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_OFF_KIND(0x0dc435ade4, false, true)
	0x101020()
	0x101020()
	0x101020()
}
