unsafe extern "C" fn game_specialhi2(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        notify_event_msc_cmd!(agent, Hash40::new_raw(0x2127e37c07), *GROUND_CLIFF_CHECK_KIND_NONE);
        FighterSpecializer_Edge::set_special_hi_jostle_area(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("rot"), 2.3, 361, 100, 0, 0, 8.0, 0.0, 2.5, 1.0, Some(0.0), Some(-2.5), Some(1.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        macros::ATTACK(agent, 1, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 8.0, 0.0, 2.5, 1.0, Some(0.0), Some(-2.5), Some(1.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        macros::ATTACK(agent, 2, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        macros::ATTACK(agent, 3, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        macros::ATTACK(agent, 4, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 8.0, 0.0, 2.5, 1.0, Some(0.0), Some(-2.5), Some(1.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        macros::ATTACK(agent, 5, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        macros::ATTACK(agent, 6, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
        FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("rot"), &Vector2f{x: 30.0, y: -5.0}, 3);
        FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 2, Hash40::new("rot"), &Vector2f{x: 26.0, y: -5.0}, 2);
        FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 3, Hash40::new("rot"), &Vector2f{x: 20.0, y: -5.0}, 2);
        FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 4, Hash40::new("rot"), &Vector2f{x: 5.0, y: 1.0}, 4);
        FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 5, Hash40::new("rot"), &Vector2f{x: 15.0, y: 1.0}, 4);
        FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 6, Hash40::new("rot"), &Vector2f{x: 20.0, y: 1.0}, 4);
        AttackModule::set_no_finish_camera_ex(agent.module_accessor, 1, true, false);
        AttackModule::set_no_finish_camera_ex(agent.module_accessor, 2, true, false);
        AttackModule::set_no_finish_camera_ex(agent.module_accessor, 3, true, false);
        AttackModule::set_no_finish_camera_ex(agent.module_accessor, 4, true, false);
        AttackModule::set_no_finish_camera_ex(agent.module_accessor, 5, true, false);
        AttackModule::set_no_finish_camera_ex(agent.module_accessor, 6, true, false);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 4.0);
    for _ in 0..6 {
        if macros::is_excute(agent) {
            macros::ATTACK(agent, 0, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 2.5, 0.0, Some(0.0), Some(-2.5), Some(0.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 1, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 2, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 3, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 2.5, 0.0, Some(0.0), Some(-2.5), Some(0.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 4, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 5, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 6, 0, Hash40::new("rot"), 2.3, 60, 60, 0, 90, 6.5, 0.0, 3.0, 0.0, Some(0.0), Some(-3.0), Some(0.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_B, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            macros::ATTACK(agent, 7, 0, Hash40::new("rot"), 2.3, 60, 60, 0, 90, 6.5, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_B, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
            FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("rot"), &Vector2f{x: 30.0, y: 100.0}, 368);
            FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("rot"), &Vector2f{x: 26.0, y: -5.0}, 2);
            FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 2, Hash40::new("rot"), &Vector2f{x: 20.0, y: -5.0}, 2);
            FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 3, Hash40::new("rot"), &Vector2f{x: 5.0, y: 1.0}, 4);
            FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 4, Hash40::new("rot"), &Vector2f{x: 15.0, y: 1.0}, 4);
            FighterSpecializer_Edge::set_vec_target_pos(agent.module_accessor, 5, Hash40::new("rot"), &Vector2f{x: 20.0, y: 1.0}, 4);
            AttackModule::set_no_finish_camera_ex(agent.module_accessor, 0, true, false);
            AttackModule::set_no_finish_camera_ex(agent.module_accessor, 1, true, false);
            AttackModule::set_no_finish_camera_ex(agent.module_accessor, 2, true, false);
            AttackModule::set_no_finish_camera_ex(agent.module_accessor, 3, true, false);
            AttackModule::set_no_finish_camera_ex(agent.module_accessor, 4, true, false);
            AttackModule::set_no_finish_camera_ex(agent.module_accessor, 5, true, false);
            AttackModule::set_no_finish_camera(agent.module_accessor, 6, true, false);
            AttackModule::set_no_finish_camera(agent.module_accessor, 7, true, false);
        }
        wait(agent.lua_state_agent, 1.0);
        if macros::is_excute(agent) {
            AttackModule::clear_all(agent.module_accessor);
        }
        wait(agent.lua_state_agent, 1.0);
    }
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        FighterSpecializer_Edge::clear_special_hi_jostle_area(agent.module_accessor);
    }
}