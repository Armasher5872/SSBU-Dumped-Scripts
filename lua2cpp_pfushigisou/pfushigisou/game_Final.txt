methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	CHECK_VALID_FINAL_START_CAMERA(0, 1, 20, 0, 0, 0)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	SLOW_OPPONENT(5, 30)
	0x103850()
	0x103850()
	VisibilityModule::set_int64(hash40("weapon"), hash40("weapon_normal"))
	0x103850()
	0x103850()
}
WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
0x103850(false, false)
0x103850()
0x103850()
if(0x103850()){
	frame(Frame=10)
	0x103850()
	0x103850()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x103850()){
		FT_SET_FINAL_FEAR_FACE(60)
		0x103850()
		REQ_FINAL_START_CAMERA_arg3(hash40("d04final.nuanmb"), false, false)
		0x103850()
		0x103850()
		0x103850()
		FT_START_CUTIN_arg1(true)
		0x103850()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x103850()){
			PostureModule::scale(4, 0)
			0x103850(-1025220042, 2.1)
			0x103850()
			CAM_ZOOM_IN_arg5(0, 0)
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			FT_START_CUTIN_arg1(true)
			0x103850()
		}
		frame(Frame=25)
		0x103850()
		0x103850()
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x103850()){
			CAM_ZOOM_OUT()
		}
	}
}
frame(Frame=30)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	ATTACK(ID=0, Part=1, Bone=hash40("top"), Damage=0.0, Angle=40, KBG=100, FKB=100, BKB=0, Size=20.0, X=0.0, Y=10.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.9, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_NONE)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
}
frame(Frame=60)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	AttackModule::clear_all()
	camera(MA_MSC_CMD_CAMERA_CAM_RESET)
	0x103850()
	0x103850()
}
get_value_float(SO_VAR_FLOAT_LR)
0x103850(464, 0)
0x103850()
0x103850()
if(0x103850()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x103850()){
		camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, -50, 0, 0)
		0x103850()
		0x103850()
		0x103850()
		0x103850()
		0x103850()
		camera(MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x103850()){
			camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 50, 0, 0)
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			camera(MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8)
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			0x103850()
			0x103850()
		}
	}
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.2, Angle=367, KBG=100, FKB=45, BKB=5, Size=6.5, X=0.0, Y=10.0, Z=200.0, X2=0.0, Y2=10.0, Z2=200.0, Hitlag=0.9, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=5, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_NONE)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=0.2, Angle=10, KBG=100, FKB=45, BKB=5, Size=6.5, X=0.0, Y=10.0, Z=15.0, X2=0.0, Y2=10.0, Z2=200.0, Hitlag=0.9, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=5, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_NONE)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	AttackModule::set_final_finish_cut_in(0, true, true, -1, false)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	AttackModule::set_final_finish_cut_in(1, true, true, -1, false)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
}
frame(Frame=230)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	AttackModule::clear_all()
}
frame(Frame=231)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=5.0, Angle=361, KBG=128, FKB=0, BKB=80, Size=9.0, X=0.0, Y=10.0, Z=15.0, X2=0.0, Y2=10.0, Z2=200.0, Hitlag=1.0, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=5, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_NONE)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	AttackModule::set_force_reaction(0, true, false)
	0x103850()
	0x103850()
	0x103850()
	AttackModule::set_final_finish_cut_in(0, true, true, -1, false)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
}
frame(Frame=240)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	AttackModule::clear_all()
}
frame(Frame=317)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	cancel(MA_MSC_CMD_CANCEL_ENABLE_CANCEL)
	0x103850()
	0x103850()
}
