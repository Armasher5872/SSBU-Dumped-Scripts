#[acmd_script( agent = "pickel", script = "expression_attackdash", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attackdash(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_77_nohits"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    if(0x370870(*FIGHTER_PICKEL_INSTANCE_WORK_ID_INT_HAVE_CRAFT_WEAPON_MATERIAL_KIND, *FIGHTER_PICKEL_MATERIAL_KIND_DIAMOND)){
        frame(lua_state, 8.0);
        if is_excute(agent) {
            RUMBLE_HIT(agent, Hash40::new("rbkind_77_attackl"), 8);
        }
        else{
        if(0x370870(*FIGHTER_PICKEL_INSTANCE_WORK_ID_INT_HAVE_CRAFT_WEAPON_MATERIAL_KIND, *FIGHTER_PICKEL_MATERIAL_KIND_GOLD)){
            frame(lua_state, 8.0);
            if is_excute(agent) {
                RUMBLE_HIT(agent, Hash40::new("rbkind_77_attacks"), 9);
            }
            else{
            if(0x370870(*FIGHTER_PICKEL_INSTANCE_WORK_ID_INT_HAVE_CRAFT_WEAPON_MATERIAL_KIND, *FIGHTER_PICKEL_MATERIAL_KIND_IRON)){
                frame(lua_state, 8.0);
                if is_excute(agent) {
                    RUMBLE_HIT(agent, Hash40::new("rbkind_77_attackm"), 6);
                }
                else{
                if(0x370870(*FIGHTER_PICKEL_INSTANCE_WORK_ID_INT_HAVE_CRAFT_WEAPON_MATERIAL_KIND, *FIGHTER_PICKEL_MATERIAL_KIND_STONE)){
                    frame(lua_state, 8.0);
                    if is_excute(agent) {
                        RUMBLE_HIT(agent, Hash40::new("rbkind_77_attacks"), 0);
                    }
                    else{
                    if(0x370870(*FIGHTER_PICKEL_INSTANCE_WORK_ID_INT_HAVE_CRAFT_WEAPON_MATERIAL_KIND, *FIGHTER_PICKEL_MATERIAL_KIND_WOOD)){
                        frame(lua_state, 8.0);
                        if is_excute(agent) {
                            RUMBLE_HIT(agent, Hash40::new("rbkind_77_attacks"), 8);
                        }
                        else{
                        frame(lua_state, 0.0);
                        if is_excute(agent) {
                            RUMBLE_HIT(agent, Hash40::new("rbkind_attacks"), 8);
                        }
                    }
                }
            }
        }
    }
}
}
}
}
}
frame(lua_state, 10.0);
if is_excute(agent) {
ControlModule::set_rumble(boma, Hash40::new("rbkind_dash"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(lua_state, 23.0);
}