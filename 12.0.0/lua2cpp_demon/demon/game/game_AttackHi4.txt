battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(true, 10)
set_devil()
frame(Frame=1)
FT_MOTION_RATE(FSM=0.7)
frame(Frame=7)
if(is_excute){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD)
}
frame(Frame=9)
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(true, 7)
set_devil()
if(is_excute){
	damage(MA_MSC_DAMAGE_DAMAGE_NO_REACTION, DAMAGE_NO_REACTION_MODE_DAMAGE_POWER, 6)
}
frame(Frame=11)
FT_MOTION_RATE(FSM=0.6)
frame(Frame=12)
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(true, 6)
set_devil()
frame(Frame=16)
FT_MOTION_RATE(FSM=1)
if(is_excute){
	damage(MA_MSC_DAMAGE_DAMAGE_NO_REACTION, DAMAGE_NO_REACTION_MODE_NORMAL, 0)
}
frame(Frame=17)
if(is_excute){
	HIT_NODE(hash40("shoulderr"), HIT_STATUS_XLU)
	HIT_NODE(hash40("armr"), HIT_STATUS_XLU)
	ATTACK(ID=0, Part=0, Bone=hash40("handr"), Damage=19.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=3.0, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=19.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=4.75, X=0.0, Y=9.0, Z=7.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=19.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=3.5, X=0.0, Y=11.0, Z=3.5, X2=0.0, Y2=8.0, Z2=2.0, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	AttackModule::set_attack_camera_quake_forced(0, CAMERA_QUAKE_KIND_M, false)
}
frame(Frame=18)
if(is_excute){
	AttackModule::clear(ID=2)
	ATTACK(ID=0, Part=0, Bone=hash40("handr"), Damage=19.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=3.0, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	ATTACK(ID=1, Part=0, Bone=hash40("handr"), Damage=19.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=4.5, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	AttackModule::set_attack_camera_quake_forced(0, CAMERA_QUAKE_KIND_M, false)
}
wait(Frames=2)
if(is_excute){
	ATTACK(ID=0, Part=0, Bone=hash40("handr"), Damage=15.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=3.0, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	ATTACK(ID=1, Part=0, Bone=hash40("handr"), Damage=15.0, Angle=90, KBG=62, FKB=0, BKB=65, Size=4.5, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=3, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DEMON_PUNCH02, Type=ATTACK_REGION_PUNCH)
	AttackModule::set_attack_camera_quake_forced(0, CAMERA_QUAKE_KIND_S, false)
}
wait(Frames=3)
if(is_excute){
	HitModule::set_status_all(HIT_STATUS_NORMAL)
}
FT_MOTION_RATE(FSM=0.8)
if(is_excute){
	AttackModule::clear_all()
}
frame(Frame=51)
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(true, 7)
set_devil()
frame(Frame=53)
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(true, 8)
set_devil()
frame(Frame=54)
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(true, 9)
set_devil()
frame(Frame=56)
battle_object_module_accessor()
methodlib::L2CValue::L2CValue(void*)()
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)()
methodlib::L2CValue::as_pointer()const(false, 0)
set_devil()
