#[acmd_script( agent = "dedede", script = "expression_attacks4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacks4(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_L);
    }
    frame(fighter.lua_state_agent, 34.0);
    execute(34);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_L);
    }
    frame(fighter.lua_state_agent, 40.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 4);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
    }
    frame(fighter.lua_state_agent, 42.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 4, true);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackll"), 0);
    }
    frame(fighter.lua_state_agent, 43.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_impact"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 44.0);
    if macros::is_excute(fighter) {
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
    }
    frame(fighter.lua_state_agent, 47.0);
    if macros::is_excute(fighter) {
        macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    frame(fighter.lua_state_agent, 76.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 14);
    }
}