#[acmd_script( agent = "pikachu", script = "effect_specialshold", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_specialshold(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    WorkModule::is_flag(boma, *FIGHTER_PIKACHU_STATUS_WORK_ID_FLAG_SKULL_BASH_FLICK);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        frame(lua_state, 1.0);
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("pikachu_rocket_hold2"), Hash40::new("top"), 0, 4.5, 0, 0, 0, 0, 1, true);
        }
    }
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -4, 0, 0, 0, 0, 0, 0.6, 4, 0, 4, 0, 0, 0, false);
    }
    wait(lua_state, 12.0);
    for _ in 0..3 {
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -3, 0, 0, 0, 0, 0, 0.9, 4, 0, 4, 0, 0, 0, false);
    }
    wait(lua_state, 10.0);
}
for _ in 0..3 {
if is_excute(agent) {
    LANDING_EFFECT(agent, Hash40::new("sys_h_smoke_a"), Hash40::new("top"), -2, 0, 0, 0, 0, 0, 1.2, 4, 0, 4, 0, 0, 0, false);
}
wait(lua_state, 10.0);
}
frame(lua_state, 4.0);
if is_excute(agent) {
EFFECT_FOLLOW(agent, Hash40::new("pikachu_rocket_hold"), Hash40::new("top"), 0, 4.5, 0, 0, 0, 0, 1, true);
}
if is_excute(agent) {
LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -4, 0, 0, 0, 0, 0, 0.6, 4, 0, 4, 0, 0, 0, false);
}
wait(lua_state, 12.0);
if is_excute(agent) {
LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -4, 0, 0, 0, 0, 0, 0.6, 4, 0, 4, 0, 0, 0, false);
}
wait(lua_state, 12.0);
for _ in 0..3 {
if is_excute(agent) {
LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -3, 0, 0, 0, 0, 0, 0.9, 4, 0, 4, 0, 0, 0, false);
}
wait(lua_state, 10.0);
}
for _ in 0..3 {
if is_excute(agent) {
LANDING_EFFECT(agent, Hash40::new("sys_h_smoke_a"), Hash40::new("top"), -2, 0, 0, 0, 0, 0, 1.2, 4, 0, 4, 0, 0, 0, false);
}
wait(lua_state, 10.0);
}
}