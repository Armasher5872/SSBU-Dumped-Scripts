if(is_excute){
	WHOLE_HIT(HIT_STATUS_XLU)
}
frame(Frame=1)
if(is_excute){
	CAM_ZOOM_OUT()
}
WorkModule::is_flag(FIGHTER_LITTLEMAC_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT)
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
	get_value_float(SO_VAR_FLOAT_LR)
	if(0x1444f0(0, 0)){
		if(is_excute){
			PostureModule::scale(300, 0)
			0x1444f0(577296125, 2.5)
			CAM_ZOOM_IN_FINAL_arg13(-30, 10, -20, -5, 70, true, FIGHTER_LITTLEMAC_STATUS_FINAL_WORK_INT_ATTACK_HIT_OBJECT_ID, 0, 20, 5)
		}
		else{
			if(is_excute){
				CAM_ZOOM_IN_FINAL_arg13(300, 0, 2.5, 30, 10, 20, -5, 70, true, FIGHTER_LITTLEMAC_STATUS_FINAL_WORK_INT_ATTACK_HIT_OBJECT_ID, 0, -15, 5)
			}
		}
	}
}
frame(Frame=2)
for(47 Iterations){
	if(is_excute){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=1.0, Angle=315, KBG=100, FKB=50, BKB=0, Size=10.0, X=0.0, Y=20.0, Z=8.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
		ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=1.0, Angle=225, KBG=100, FKB=50, BKB=0, Size=10.0, X=0.0, Y=20.0, Z=30.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
		ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=1.0, Angle=45, KBG=100, FKB=50, BKB=0, Size=10.0, X=0.0, Y=0.0, Z=8.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
		ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=1.0, Angle=135, KBG=100, FKB=50, BKB=0, Size=10.0, X=0.0, Y=0.0, Z=30.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
		AttackModule::set_no_dead_all(true, false)
		AttackModule::set_no_uniq_effect_all(true, false)
	}
	wait(Frames=1)
	if(is_excute){
		AttackModule::clear_all()
	}
	wait(Frames=2)
}
frame(Frame=143)
if(is_excute){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.0, Angle=40, KBG=100, FKB=0, BKB=30, Size=20.0, X=0.0, Y=10.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
	AttackModule::set_no_dead_all(true, false)
	WorkModule::on_flag(Flag=FIGHTER_LITTLEMAC_STATUS_FINAL_FLAG_ATTACK_REQUEST_LOOP_DAMAGE_MOTION)
	WorkModule::set_int64(hash40("fall_damage"), FIGHTER_LITTLEMAC_STATUS_FINAL_WORK_INT_ATTACK_REQUEST_LOOP_DAMAGE_MOTION)
}
frame(Frame=144)
if(is_excute){
	AttackModule::clear_all()
	WorkModule::off_flag(Flag=FIGHTER_LITTLEMAC_STATUS_FINAL_FLAG_ATTACK_REQUEST_LOOP_DAMAGE_MOTION)
}
frame(Frame=149)
if(is_excute){
	CAM_ZOOM_OUT()
	WHOLE_HIT(HIT_STATUS_XLU)
	AttackModule::clear_all()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=10.0, Angle=68, KBG=120, FKB=0, BKB=80, Size=23.0, X=0.0, Y=14.0, Z=18.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.6, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_NONE)
	AttackModule::set_force_reaction(0, true, false)
	WorkModule::on_flag(Flag=FIGHTER_LITTLEMAC_STATUS_FINAL_FLAG_ATTACK_END_HIT)
	AttackModule::set_final_finish_cut_in(0, true, false, -1, false)
}
WorkModule::is_flag(FIGHTER_LITTLEMAC_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT)
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
	if(is_excute){
		PostureModule::scale(2, 0)
		0x1444f0(577296125, 2.5)
		CAM_ZOOM_IN_arg5(0, 0)
	}
}
get_value_float(SO_VAR_FLOAT_LR)
if(0x1444f0(1417232, 0)){
	if(is_excute){
		camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, -10, 10)
	}
	else{
		if(is_excute){
			camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 10, 10)
		}
	}
}
frame(Frame=151)
if(is_excute){
	AttackModule::clear_all()
}
frame(Frame=176)
if(is_excute){
	CAM_ZOOM_OUT()
}
