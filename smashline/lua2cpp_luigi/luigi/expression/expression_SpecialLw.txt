if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
}
frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 10.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 9);
}
frame(fighter.lua_state_agent, 16.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 23.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 30.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 37.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, true);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 40.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 43.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 44.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
}
