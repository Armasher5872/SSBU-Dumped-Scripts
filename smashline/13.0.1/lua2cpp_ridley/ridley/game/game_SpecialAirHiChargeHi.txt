if macros::is_excute(fighter) {
	macros::HIT_NODE(fighter, Hash40::new("wingr2"), *HIT_STATUS_XLU);
	macros::HIT_NODE(fighter, Hash40::new("wingl2"), *HIT_STATUS_XLU);
	macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 18.0, 64, 46, 0, 85, 6.5, 0.0, 25.0, 0.5, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_BODY);
	macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 18.0, 64, 46, 0, 85, 10.0, 0.0, 15.0, 1.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_THRU, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_BODY);
}
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
	HitModule::set_status_all(fighter.module_accessor, *HIT_STATUS_NORMAL);
	AttackModule::clear_all(fighter.module_accessor);
}
