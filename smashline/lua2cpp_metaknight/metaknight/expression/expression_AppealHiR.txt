#[acmd_script( agent = "metaknight", script = "expression_appealhir", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appealhir(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    if !macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE) {
        if macros::is_excute(fighter) {
            ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, true, -1);
        }
        else{
        if macros::is_excute(fighter) {
            ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
        }
    }
}
if macros::is_excute(fighter) {
    ArticleModule::change_motion(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, Hash40::new("appeal_hi"), false, -1.0);
}
frame(fighter.lua_state_agent, 21.0);
if macros::is_excute(fighter) {
    ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
    ItemModule::set_have_item_visibility(fighter.module_accessor, false, 0);
    ItemModule::set_attach_item_visibility(fighter.module_accessor, false);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), false);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), false);
    ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(fighter.lua_state_agent, 50.0);
if macros::is_excute(fighter) {
    ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_MANTLE, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
    ItemModule::set_have_item_visibility(fighter.module_accessor, true, 0);
    ItemModule::set_attach_item_visibility(fighter.module_accessor, true);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), true);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), true);
    ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_nohitm"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
}