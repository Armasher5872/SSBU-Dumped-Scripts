frame(Frame=1)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	notify_event_msc_cmd(0x2d51fcdb09, FIGHTER_BAYONETTA_SHOOTING_SLOT_R_ARM, false, false, true, 20, 0, 15, 0, false)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	notify_event_msc_cmd(0x2b7cb92b79, FIGHTER_BAYONETTA_SHOOTING_SLOT_L_ARM, false, false, true, 20)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	notify_event_msc_cmd(0x2b7cb92b79, FIGHTER_BAYONETTA_SHOOTING_SLOT_R_LEG, false, false, true, 20)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	notify_event_msc_cmd(0x2b7cb92b79, FIGHTER_BAYONETTA_SHOOTING_SLOT_L_LEG, false, false, true, 20)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
FT_MOTION_RATE(FSM=0.7)
0x1cb230()
frame(Frame=7)
0x1cb230()
0x1cb230()
WorkModule::is_flag(FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_HI_FLAG_GROUND_START)
0x1cb230(false, true)
0x1cb230()
0x1cb230()
if(0x1cb230()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1cb230()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=96, KBG=100, FKB=120, BKB=0, Size=2.5, X=0.0, Y=4.5, Z=0.5, X2=0.0, Y2=9.5, Z2=0.5, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=3.0, Angle=103, KBG=100, FKB=130, BKB=0, Size=4.0, X=0.0, Y=6.0, Z=5.0, X2=0.0, Y2=8.0, Z2=5.0, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1cb230()){
			ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.0, Angle=90, KBG=100, FKB=140, BKB=0, Size=3.0, X=0.0, Y=4.0, Z=1.0, X2=0.0, Y2=11.0, Z2=1.0, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=2.0, Angle=100, KBG=100, FKB=135, BKB=0, Size=5.3, X=0.0, Y=6.0, Z=7.5, X2=0.0, Y2=9.5, Z2=7.5, Hitlag=0.8, SDI=0.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
		}
	}
}
wait(Frames=1)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	AttackModule::clear_all()
}
frame(Frame=15)
0x1cb230()
0x1cb230()
FT_START_ADJUST_MOTION_FRAME_arg1(1)
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_HI_FLAG_JUMP)
	0x1cb230()
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_INSTANCE_WORK_ID_FLAG_SHOOTING_ACTION)
	0x1cb230()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.2, Angle=93, KBG=100, FKB=100, BKB=0, Size=5.0, X=0.0, Y=21.0, Z=0.0, X2=0.0, Y2=19.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=0.2, Angle=367, KBG=100, FKB=80, BKB=0, Size=4.5, X=0.0, Y=26.0, Z=0.0, X2=0.0, Y2=19.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=0.2, Angle=93, KBG=100, FKB=140, BKB=0, Size=2.0, X=0.0, Y=18.0, Z=0.0, X2=0.0, Y2=8.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=16)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=0.2, Angle=93, KBG=100, FKB=120, BKB=0, Size=2.0, X=0.0, Y=18.0, Z=0.0, X2=0.0, Y2=9.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=19)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.2, Angle=105, KBG=100, FKB=75, BKB=0, Size=5.0, X=0.0, Y=23.0, Z=0.0, X2=0.0, Y2=20.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=0.2, Angle=105, KBG=100, FKB=30, BKB=0, Size=4.0, X=0.0, Y=25.0, Z=0.0, X2=0.0, Y2=23.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=24)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=0.2, Angle=367, KBG=100, FKB=75, BKB=0, Size=5.0, X=0.0, Y=23.0, Z=0.0, X2=0.0, Y2=20.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=0.2, Angle=367, KBG=100, FKB=135, BKB=0, Size=3.0, X=0.0, Y=25.0, Z=0.0, X2=0.0, Y2=23.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=27)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=0.2, Angle=93, KBG=100, FKB=120, BKB=0, Size=2.0, X=0.0, Y=18.0, Z=0.0, X2=0.0, Y2=11.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_rush"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=30)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS)
	0x1cb230()
	0x1cb230()
	0x1cb230()
	AttackModule::clear_all()
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_INSTANCE_WORK_ID_FLAG_SHOOTING_CHECK_END)
	0x1cb230()
}
frame(Frame=31)
0x1cb230()
0x1cb230()
WorkModule::is_flag(FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_HI_FLAG_REUSE)
0x1cb230(false, false)
0x1cb230()
0x1cb230()
if(0x1cb230()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1cb230()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=32, KBG=80, FKB=0, BKB=45, Size=6.5, X=0.0, Y=26.5, Z=0.0, X2=0.0, Y2=19.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		0x1cb230()
		AttackModule::set_add_reaction_frame(ID=0, Frames=1, Unk=false)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x1cb230()){
			ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=0, KBG=50, FKB=0, BKB=30, Size=6.5, X=0.0, Y=26.5, Z=0.0, X2=0.0, Y2=19.0, Z2=0.0, Hitlag=0.8, SDI=1.5, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			0x1cb230()
			AttackModule::set_add_reaction_frame(ID=0, Frames=1, Unk=false)
			0x1cb230()
			0x1cb230()
			0x1cb230()
		}
	}
}
wait(Frames=2)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	AttackModule::clear_all()
	notify_event_msc_cmd(0x2bfb02b69a, true)
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
frame(Frame=36)
0x1cb230()
0x1cb230()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1cb230()){
	WorkModule::on_flag(Flag=FIGHTER_BAYONETTA_STATUS_WORK_ID_SPECIAL_HI_FLAG_NO_SHOOTING_ENABLE_CANCEL)
	0x1cb230()
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS_BOTH_SIDES)
	0x1cb230()
	0x1cb230()
	0x1cb230()
}
