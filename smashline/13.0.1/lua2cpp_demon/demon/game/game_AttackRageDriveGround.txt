WorkModule::is_flag(fighter.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE);
if(0x3cfb70(false, false)){;
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 2);
set_devil();
if macros::is_excute(fighter) {
macros::WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
}frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
WorkModule::set_int(fighter.module_accessor, *HIT_STATUS_NORMAL, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS);
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 13.0, 100, 100, 100, 50, 6.5, 0.0, 1.0, 5.0, Some(10.0), Some(1.0), Some(5.0), 1.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 4, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
AttackModule::set_catch_only_all(fighter.module_accessor, true, false);
macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 16.0, 60, 95, 0, 55, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
AttackModule::set_attack_camera_quake_forced(fighter.module_accessor, 0, *CAMERA_QUAKE_KIND_NONE, true);
AttackModule::set_no_finish_camera(fighter.module_accessor, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
macros::ATTACK_IGNORE_THROW(fighter, 1, 0, Hash40::new("top"), 18.0, 361, 80, 0, 80, 7.5, 0.0, 7.5, -10.0, Some(0.0), Some(7.5), Some(14.0), 0.8, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_PUNCH);
AttackModule::set_no_finish_camera(fighter.module_accessor, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
}else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}methodlib::L2CValue::as_pointer()const();
clear_past_log_throw();
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE);
AttackModule::clear_all(fighter.module_accessor);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_HIT);
macros::CAM_ZOOM_OUT(fighter);
}frame(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
macros::WHOLE_HIT(fighter, *HIT_STATUS_NORMAL);
}frame(fighter.lua_state_agent, 35.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 3);
set_devil();
frame(fighter.lua_state_agent, 38.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 4);
set_devil();
frame(fighter.lua_state_agent, 40.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 5);
set_devil();
frame(fighter.lua_state_agent, 41.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 6);
set_devil();
frame(fighter.lua_state_agent, 42.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(false, 0);
set_devil();
}else{;
battle_object_module_accessor(0);
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 2);
set_devil();
if macros::is_excute(fighter) {
macros::WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
}frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
WorkModule::set_int(fighter.module_accessor, *HIT_STATUS_NORMAL, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS);
macros::ATTACK(fighter, 0, 0, Hash40::new("top"), 11.5, 100, 100, 100, 50, 6.5, 0.0, 1.0, 5.0, Some(10.0), Some(1.0), Some(5.0), 1.4, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 4, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
AttackModule::set_no_dead_all(fighter.module_accessor, true, false);
AttackModule::set_catch_only_all(fighter.module_accessor, true, false);
macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 13.0, 60, 95, 0, 67, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
AttackModule::set_attack_camera_quake_forced(fighter.module_accessor, 0, *CAMERA_QUAKE_KIND_NONE, true);
AttackModule::set_no_finish_camera(fighter.module_accessor, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
macros::ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
macros::ATTACK_IGNORE_THROW(fighter, 1, 0, Hash40::new("top"), 15.0, 361, 80, 0, 80, 5.0, 0.0, 5.0, -8.5, Some(0.0), Some(5.0), Some(12.5), 0.8, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_PUNCH);
AttackModule::set_no_finish_camera(fighter.module_accessor, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
}else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}methodlib::L2CValue::as_pointer()const();
clear_past_log_throw();
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE);
AttackModule::clear_all(fighter.module_accessor);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_HIT);
macros::CAM_ZOOM_OUT(fighter);
}frame(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
macros::WHOLE_HIT(fighter, *HIT_STATUS_NORMAL);
}frame(fighter.lua_state_agent, 35.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 3);
set_devil();
frame(fighter.lua_state_agent, 38.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 4);
set_devil();
frame(fighter.lua_state_agent, 40.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 5);
set_devil();
frame(fighter.lua_state_agent, 41.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(true, 6);
set_devil();
frame(fighter.lua_state_agent, 42.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(false, 0);
set_devil();
}