methodlib::L2CValue::operatorbool()const(is_excute)
if(0x97290()){
	KineticModule::set_consider_ground_friction(false, KINETIC_ENERGY_RESERVE_ATTRIBUTE_MAIN)
	0x97290()
	0x97290()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=4.0, Angle=80, KBG=47, FKB=0, BKB=120, Size=15.0, X=0.0, Y=10.0, Z=-12.0, X2=0.0, Y2=10.0, Z2=5.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_G, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_FIRE, Type=ATTACK_REGION_NONE)
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
	0x97290()
}
frame(Frame=5)
0x97290()
0x97290()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x97290()){
	AttackModule::clear_all()
}
