methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=5)
0x1483f0()
0x1483f0()
execute(5)
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=10)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 8, false)
	ControlModule::set_rumble()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=12)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	RUMBLE_HIT(hash40("rbkind_attackm"), 0)
	0x1483f0()
	0x1483f0()
}
frame(Frame=13)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 4)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=20)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=21)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	RUMBLE_HIT(hash40("rbkind_attackl"), 0)
	0x1483f0()
	0x1483f0()
}
frame(Frame=40)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x1483f0()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
frame(Frame=42)
0x1483f0()
0x1483f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1483f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_lands"), 0, false)
	ControlModule::set_rumble()
	0x1483f0()
	0x1483f0()
	0x1483f0()
}
