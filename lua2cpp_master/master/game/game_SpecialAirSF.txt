frame(Frame=1)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	SET_SPEED_EX(0, 0, KINETIC_ENERGY_RESERVE_ATTRIBUTE_MAIN)
	0x333150()
	0x333150()
	0x333150()
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS)
	0x333150()
	0x333150()
	0x333150()
	FighterAreaModuleImpl::enable_fix_jostle_area_xy(10, 5, 5, 9)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
}
frame(Frame=2)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	WorkModule::on_flag(Flag=FIGHTER_MASTER_STATUS_SPECIAL_S_FLAG_SPEED_F_REQUEST)
	0x333150()
}
frame(Frame=7)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	FighterAreaModuleImpl::enable_fix_jostle_area_xy(5, 5, 5, 5)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
}
frame(Frame=9)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_NONE)
	0x333150()
	0x333150()
	0x333150()
	ATTACK(ID=0, Part=0, Bone=hash40("haver"), Damage=14.25, Angle=55, KBG=59, FKB=0, BKB=86, Size=4.5, X=0.0, Y=24.5, Z=-2.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	ATTACK(ID=3, Part=0, Bone=hash40("haver"), Damage=14.25, Angle=55, KBG=59, FKB=0, BKB=86, Size=5.0, X=0.0, Y=19.5, Z=-2.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.3, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	ATTACK(ID=1, Part=0, Bone=hash40("haver"), Damage=9.5, Angle=45, KBG=35, FKB=0, BKB=85, Size=4.5, X=0.0, Y=11.5, Z=-2.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.6, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	ATTACK(ID=2, Part=0, Bone=hash40("haver"), Damage=9.5, Angle=45, KBG=35, FKB=0, BKB=85, Size=4.5, X=0.0, Y=7.0, Z=-2.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.6, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_OBJECT)
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	0x333150()
	ATK_SET_SHIELD_SETOFF_MUL(ID=0, ShieldstunMul=2)
	0x333150()
	0x333150()
	ATK_SET_SHIELD_SETOFF_MUL(ID=3, ShieldstunMul=2)
	0x333150()
	0x333150()
}
frame(Frame=13)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	AttackModule::clear_all()
	WorkModule::on_flag(Flag=FIGHTER_MASTER_STATUS_SPECIAL_S_FLAG_ENABLE_LANDING)
	0x333150()
}
frame(Frame=14)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	WorkModule::on_flag(Flag=FIGHTER_MASTER_STATUS_SPECIAL_S_FLAG_SPEED_CHANGE_ATK_END_REQUEST)
	0x333150()
}
frame(Frame=26)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS_BOTH_SIDES)
	0x333150()
	0x333150()
	0x333150()
}
frame(Frame=29)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	WorkModule::on_flag(Flag=FIGHTER_MASTER_STATUS_SPECIAL_S_FLAG_SPEED_CONTROL_REQUEST)
	0x333150()
}
frame(Frame=50)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	WorkModule::off_flag(Flag=FIGHTER_MASTER_STATUS_SPECIAL_S_FLAG_ENABLE_LANDING)
	0x333150()
}
frame(Frame=53)
0x333150()
0x333150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x333150()){
	ArticleModule::remove_exist(FIGHTER_MASTER_GENERATE_ARTICLE_SPEAR)
	0x333150()
}
