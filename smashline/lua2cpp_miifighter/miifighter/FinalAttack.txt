unsafe extern "C" fn game_finalattack(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::WHOLE_HIT(agent, *HIT_STATUS_XLU);
    }
    frame(agent.lua_state_agent, 7.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
        WorkModule::off_flag(agent.module_accessor, *FIGHTER_MIIFIGHTER_STATUS_FINAL_FLAG_REQUEST_LOOP_DAMAGE_MOTION);
    }
    frame(agent.lua_state_agent, 8.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 15.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 16.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 24.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 35.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 36.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 51.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 55.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 56.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 60.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 61.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 65.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 66.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 70.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 71.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 78.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 79.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 89.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 90.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 97.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 98.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 105.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 106.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 113.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 114.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 118.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 119.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 123.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 124.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 130.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.7, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 131.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 136.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 137.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 144.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 145.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 150.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 151.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 157.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 158.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 162.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 163.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 168.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 169.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 173.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 5, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
    }
    frame(agent.lua_state_agent, 174.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 181.0);
    frame(agent.lua_state_agent, 182.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 366, 100, 50, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
    }
    frame(agent.lua_state_agent, 183.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 195.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.4, 100, 100, 90, 0, 19.5, 0.0, 5.0, 20.0, None, None, None, 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_no_dead_all(agent.module_accessor, true, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_MIIFIGHTER_STATUS_FINAL_FLAG_ATTACK_END);
    }
    frame(agent.lua_state_agent, 196.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 220.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_MIIFIGHTER_STATUS_FINAL_FLAG_ATTACK_FINISH);
    }
    frame(agent.lua_state_agent, 221.0);
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 15.0, 270, 132, 0, 63, 25.0, 0.0, 5.0, 0.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_PUNCH);
        AttackModule::set_force_reaction(agent.module_accessor, 0, true, false);
        AttackModule::set_final_finish_cut_in(agent.module_accessor, 0, true, false, 91, false);
        AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_MIIFIGHTER_STATUS_FINAL_FLAG_REQUEST_LOOP_DAMAGE_MOTION);
        WorkModule::set_int64(agent.module_accessor, hash40("fall_damage") as i64, *FIGHTER_MIIFIGHTER_STATUS_FINAL_WORK_INT_REQUEST_LOOP_DAMAGE_MOTION);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
        macros::CAM_ZOOM_OUT(agent);
    }
    frame(agent.lua_state_agent, 267.0);
    if macros::is_excute(agent) {
        cancel(*MA_MSC_CMD_CANCEL_ENABLE_CANCEL);
    }
}

unsafe extern "C" fn effect_finalattack(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_miifighter_final2"), false, false, false);
    }
    frame(agent.lua_state_agent, 7.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 8, 7, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 8, 0, -0.5, -37, -275.5, 0.8, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 24.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), 0, 7, 12, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 32.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 5, 0, -18.7, -18.2, 94, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 49.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 7, 9, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 55.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), 0, 7, 7, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 59.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), 2, 7, 9, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 64.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 7, 9, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 68.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 5, 9, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 74.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 7, 0, -27, -64.7, 35.6, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 78.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 87.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 7, -4, 10, -19, -114.5, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(agent.lua_state_agent, 89.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 97.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), 0, 6, 12, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(agent.lua_state_agent, 97.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 103.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 7, 0, 16.5, -8.7, -193.5, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 105.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 110.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 7, -2, -193.2, 158.7, 329.5, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(agent.lua_state_agent, 113.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 116.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_NO_STOP_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 7, -2, -193.2, 158.7, 329.5, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 122.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 8, 0, -189, 180, 283.5, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 128.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), -1, 7, 0, -183.9, 195.4, 104, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(agent.lua_state_agent, 130.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 136.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 7, 10, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 144.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 6, 8, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 149.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), 0, 8, 10, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 150.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 157.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), 0, 8, 10, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 162.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("top"), -2, 8, 11, 0, 0, 0, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 164.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 0, 7, 0, -13.5, -24.5, -330.5, 0.9, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(agent.lua_state_agent, 168.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 170.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 2, 8, -2, 18.5, -13.5, 287.5, 0.8, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 2);
    }
    frame(agent.lua_state_agent, 173.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 180.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 5, 12, 0, -83.4, 56.1, 126.6, 0.8, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(agent.lua_state_agent, 182.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 191.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_arc"), Hash40::new("miifighter_final_arc"), Hash40::new("top"), 3, 10, -2, 25.5, 51.8, -89.9, 0.7, true, *EF_FLIP_YZ);
        macros::LAST_EFFECT_SET_RATE(agent, 1);
    }
    frame(agent.lua_state_agent, 195.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("miifighter_final_main"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 1.2, true, 0, 0, 0, 0, 0, true);
        macros::EFFECT(agent, Hash40::new("miifighter_final_main2"), Hash40::new("top"), 0, 8, 11, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(agent.lua_state_agent, 209.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_smash_flash"), Hash40::new("sys_smash_flash"), Hash40::new("haver"), -2, -2, -2, 0, 0, 0, 1.5, false, *EF_FLIP_YZ);
    }
    frame(agent.lua_state_agent, 195.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("miifighter_final_jump"), Hash40::new("top"), 2, 10, 0, 90, 0, 0, 1, true);
    }
    frame(agent.lua_state_agent, 220.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("miifighter_final_straight"), Hash40::new("miifighter_final_straight"), Hash40::new("trans"), 0, -1, 0, 90, 0, 0, 1.2, false, *EF_FLIP_YZ);
    }
    frame(agent.lua_state_agent, 220.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("miifighter_final_finish"), Hash40::new("top"), 0, 0, 0, 0, 90, 0, 0.9, false);
    }
}

unsafe extern "C" fn sound_finalattack(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 6.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_mii_final_fighter"));
        macros::PLAY_STATUS(agent, Hash40::new("se_miifighter_final03"));
    }
    frame(agent.lua_state_agent, 75.0);
    if macros::is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
    frame(agent.lua_state_agent, 81.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_miifighter_final06"));
    }
    frame(agent.lua_state_agent, 92.0);
    if macros::is_excute(agent) {
        macros::STOP_SE(agent, Hash40::new("se_miifighter_final06"));
    }
    frame(agent.lua_state_agent, 103.0);
    if macros::is_excute(agent) {
        macros::PLAY_STATUS(agent, Hash40::new("se_miifighter_final03"));
    }
    frame(agent.lua_state_agent, 163.0);
    if macros::is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
        macros::PLAY_SE(agent, Hash40::new("se_miifighter_final04"));
    }
    frame(agent.lua_state_agent, 177.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_miifighter_final06"));
    }
    frame(agent.lua_state_agent, 188.0);
    if macros::is_excute(agent) {
        macros::STOP_SE(agent, Hash40::new("se_miifighter_final06"));
    }
    frame(agent.lua_state_agent, 210.0);
}

unsafe extern "C" fn expression_finalattack(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
    frame(agent.lua_state_agent, 7.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 8);
    }
    frame(agent.lua_state_agent, 15.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 24.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 35.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attacks"), 5);
    }
    frame(agent.lua_state_agent, 55.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 60.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 65.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 70.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 78.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 8);
    }
    frame(agent.lua_state_agent, 89.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 97.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 105.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 113.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attacks"), 5);
    }
    frame(agent.lua_state_agent, 118.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 123.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 130.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 136.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 144.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 150.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 157.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 162.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 168.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 173.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 182.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackl"), 8);
    }
    frame(agent.lua_state_agent, 195.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_S);
    }
    frame(agent.lua_state_agent, 221.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attack_finish"), 0);
    }
}