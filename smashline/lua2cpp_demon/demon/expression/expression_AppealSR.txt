#[acmd_script( agent = "demon", script = "expression_appealsr", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appealsr(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(fighter.lua_state_agent, 11.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 14.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_R, 3);
    }
    frame(fighter.lua_state_agent, 18.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 11, false);
        ControlModule::set_rumble(fighter.module_accessor);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_80_attackm"), 9);
    }
    frame(fighter.lua_state_agent, 31.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_80_attacks"), 11);
    }
    frame(fighter.lua_state_agent, 39.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
    frame(fighter.lua_state_agent, 42.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 3);
    }
    frame(fighter.lua_state_agent, 47.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 15, false);
        ControlModule::set_rumble(fighter.module_accessor);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_80_attackm"), 9);
    }
    frame(fighter.lua_state_agent, 63.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_80_attackm"), 0);
    }
    frame(fighter.lua_state_agent, 83.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
}