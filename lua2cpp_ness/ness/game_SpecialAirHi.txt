methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	GroundModule::select_cliff_hangdata(FIGHTER_NESS_CLIFF_HANG_DATA_SPECIAL_HI)
	0xfda50()
}
frame(Frame=1)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	ATTACK(ID=0, Part=0, Bone=hash40("rot"), Damage=25.0, Angle=361, KBG=80, FKB=0, BKB=83, Size=7.0, X=0.0, Y=0.5, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_SPEED, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PSI)
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	JostleModule::set_status(false)
	0xfda50()
	WorkModule::on_flag(Flag=FIGHTER_NESS_STATUS_SPECIAL_HI_FLAG_CRITICAL)
	0xfda50()
}
frame(Frame=10)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	HIT_NODE(hash40("head"), HIT_STATUS_XLU)
	0xfda50()
	0xfda50()
}
frame(Frame=11)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	ATTACK(ID=0, Part=0, Bone=hash40("rot"), Damage=21.0, Angle=361, KBG=70, FKB=0, BKB=45, Size=4.8, X=0.0, Y=0.5, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_SPEED, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PSI)
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	0xfda50()
	WorkModule::on_flag(Flag=FIGHTER_NESS_STATUS_SPECIAL_HI_FLAG_ATTACK_FALL_START)
	0xfda50()
	WorkModule::off_flag(Flag=FIGHTER_NESS_STATUS_SPECIAL_HI_FLAG_CRITICAL)
	0xfda50()
}
frame(Frame=33)
0xfda50()
0xfda50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xfda50()){
	AttackModule::clear_all()
	HIT_NODE(hash40("head"), HIT_STATUS_NORMAL)
	0xfda50()
	0xfda50()
	WorkModule::on_flag(Flag=FIGHTER_NESS_STATUS_SPECIAL_HI_FLAG_LANDING_ENABLE)
	0xfda50()
	JostleModule::set_status(true)
	0xfda50()
	GroundModule::select_cliff_hangdata(FIGHTER_NESS_CLIFF_HANG_DATA_DEFAULT)
	0xfda50()
}
