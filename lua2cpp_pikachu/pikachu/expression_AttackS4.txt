methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_NONE)
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=10)
for(14 Iterations){
	0x101020()
	0x101020()
	execute(10)
	0x101020()
	WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
	0x101020(false, true)
	0x101020()
	0x101020()
	if(0x101020()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x101020()){
			slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 4)
			0x101020()
			0x101020()
			0x101020()
			0x101020()
			QUAKE(CAMERA_QUAKE_KIND_S)
			0x101020()
		}
	}
	frame(Frame=15)
	0x101020()
	0x101020()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x101020()){
		RUMBLE_HIT(0x13041f1b96, 0)
		0x101020()
		0x101020()
		methodlib::L2CValue::as_hash()const(hash40("rbkind_nohit_attacks"), 0, false)
		ControlModule::set_rumble()
		0x101020()
		0x101020()
		0x101020()
	}
	frame(Frame=16)
	0x101020()
	0x101020()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x101020()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_loopattack"), 0, true)
		ControlModule::set_rumble()
		0x101020()
		0x101020()
		0x101020()
	}
	wait(Frames=1)
	0x101020()
	0x101020()
}
frame(Frame=30)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=48)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 10)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
