#[acmd_script( agent = "sonic", script = "sound_win2", category = ACMD_SOUND, low_priority )]
unsafe fn sound_win2(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    
        frame(lua_state, 0.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("vc_sonic_win02"));
        }
        frame(lua_state, 36.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 40.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 44.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 48.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 52.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 56.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 60.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 78.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_s_win"));
        }
        frame(lua_state, 79.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 96.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_l_win"));
        }
    }
    else{
    if GET_VOICE_REGION(fighter) == *VOICE_US_EN {
        frame(lua_state, 36.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 40.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 44.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 48.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 52.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 56.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 60.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 78.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_s_win"));
        }
        frame(lua_state, 79.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 87.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("vc_sonic_win02"));
        }
        frame(lua_state, 96.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_l_win"));
        }
    }
    else{
    if GET_VOICE_REGION(fighter) == *VOICE_US_FR {
        frame(lua_state, 36.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 40.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 44.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 48.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 52.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 56.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 60.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 78.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_s_win"));
        }
        frame(lua_state, 79.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 87.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("vc_sonic_win02"));
        }
        frame(lua_state, 96.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_l_win"));
        }
    }
    else{
    if GET_VOICE_REGION(fighter) == *VOICE_EU_EN {
        frame(lua_state, 36.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 40.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 44.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 48.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 52.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 56.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 60.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 78.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_s_win"));
        }
        frame(lua_state, 79.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 87.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("vc_sonic_win02"));
        }
        frame(lua_state, 96.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_l_win"));
        }
    }
    else{
    if GET_VOICE_REGION(fighter) == *VOICE_EU_FR {
        frame(lua_state, 36.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 40.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 44.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 48.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 52.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 56.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 60.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 78.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_s_win"));
        }
        frame(lua_state, 79.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 87.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("vc_sonic_win02"));
        }
        frame(lua_state, 96.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_l_win"));
        }
    }
    else{
    if GET_VOICE_REGION(fighter) == *VOICE_EU_IT {
        frame(lua_state, 36.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 40.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 44.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 48.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 52.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 56.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_right_m_win"));
        }
        frame(lua_state, 60.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 78.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_s_win"));
        }
        frame(lua_state, 79.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_step_left_m_win"));
        }
        frame(lua_state, 87.0);
        if is_excute(fighter) {
            PLAY_SE_NO_3D(fighter, Hash40::new("vc_sonic_win02"));
        }
        frame(lua_state, 96.0);
        if is_excute(fighter) {
            PLAY_SE(fighter, Hash40::new("se_sonic_swing_l_win"));
        }
    }
}
}
}
}
}
}