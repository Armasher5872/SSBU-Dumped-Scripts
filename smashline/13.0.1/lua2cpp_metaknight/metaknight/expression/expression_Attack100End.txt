if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
methodlib::L2CValue::as_hash()const(Hash40::new("haver"), *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_X);
AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
VisibilityModule::set_status_default_int64(fighter.module_accessor, Hash40::new("mantle"), Hash40::new("mantle_normal"));
}frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 3);
}frame(fighter.lua_state_agent, 3.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 0);
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 23.0);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
}