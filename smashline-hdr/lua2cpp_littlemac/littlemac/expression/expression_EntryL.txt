#[acmd_script( agent = "littlemac", script = "expression_entryl", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_entryl(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if IS_EXIST_ARTICLE(fighter, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_SWEATLITTLEMAC) {
        if is_excute(fighter) {
            VisibilityModule::set_whole(boma, false);
        }
    }
    if is_excute(fighter) {
        ArticleModule::set_visibility_whole(boma, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_THROWSWEAT, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
        VisibilityModule::set_int64(boma, hash40("swet") as i64, hash40("swet_on") as i64);
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), false);
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), false);
        WorkModule::on_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
    frame(lua_state, 31.0);
    if is_excute(fighter) {
        WorkModule::off_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
    frame(lua_state, 71.0);
    if IS_EXIST_ARTICLE(fighter, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_SWEATLITTLEMAC) {
        if is_excute(fighter) {
            VisibilityModule::set_whole(boma, true);
            ArticleModule::set_visibility_whole(boma, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_SWEATLITTLEMAC, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
        }
    }
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("swet") as i64, hash40("swet_off") as i64);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_LITTLEMAC_INSTANCE_WORK_ID_FLAG_IS_SWEAT_MODEL) {
        if is_excute(fighter) {
            ArticleModule::set_visibility_whole(boma, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_THROWSWEAT, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
        }
    }
    frame(lua_state, 72.0);
    if is_excute(fighter) {
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), true);
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), true);
    }
    frame(lua_state, 73.0);
    if is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
}