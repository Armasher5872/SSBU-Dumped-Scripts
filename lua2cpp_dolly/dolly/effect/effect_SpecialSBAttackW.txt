frame(Frame=3)
0x24ffc0()
0x24ffc0()
WorkModule::is_flag(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_FLAG_COMMAND)
0x24ffc0(false, true)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP(0x18de948e2e, 0x18de948e2e, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		EffectModule::set_disable_render_offset_last()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x122e3c38fc, 0x122e3c38fc, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x12b7356946, 0x12b7356946, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x12c03259d0, 0x12c03259d0, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x125e56cc73, 0x125e56cc73, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x122951fce5, 0x122951fce5, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x12b058ad5f, 0x12b058ad5f, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x12c75f9dc9, 0x12c75f9dc9, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		EFFECT_FOLLOW_FLIP_ALPHA(0x1257e08058, 0x1257e08058, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 1.3)
	}
	else{
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x122e3c38fc, 0x122e3c38fc, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x12b7356946, 0x12b7356946, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x12c03259d0, 0x12c03259d0, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x125e56cc73, 0x125e56cc73, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x122951fce5, 0x122951fce5, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x12b058ad5f, 0x12b058ad5f, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x12c75f9dc9, 0x12c75f9dc9, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
		0x24ffc0(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				EFFECT_FOLLOW_FLIP_ALPHA(0x1257e08058, 0x1257e08058, hash40("rot"), -1, -6, 0, -90, -90, 0, 1, true, EF_FLIP_YZ, 0.9)
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
				0x24ffc0()
			}
		}
	}
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	EffectModule::set_disable_render_offset_last()
}
