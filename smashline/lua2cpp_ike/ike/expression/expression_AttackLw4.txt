#[acmd_script( agent = "ike", script = "expression_attacklw4" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attacklw4(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	frame(fighter.lua_state_agent, 6.0);
	execute(6);
	if macros::is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(fighter.lua_state_agent, 8.0);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 5);
	}
	frame(fighter.lua_state_agent, 11.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 13.0);
	if macros::is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 0.75, 110, 300, 0.8, 0, 12, 24, 24, 40);
		macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashl"), 0);
	}
	frame(fighter.lua_state_agent, 22.0);
	if macros::is_excute(fighter) {
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
	frame(fighter.lua_state_agent, 30.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 31.0);
	if macros::is_excute(fighter) {
		AREA_WIND_2ND_arg10(0, 0.75, 70, 300, 0.8, 0, 12, 24, 24, 40);
	}
	frame(fighter.lua_state_agent, 56.0);
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 10);
		AreaModule::erase_wind(fighter.module_accessor, 0);
	}
