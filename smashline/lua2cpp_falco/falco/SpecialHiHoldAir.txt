unsafe extern "C" fn game_specialhiholdair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 20.0);
    for _ in 0..7 {
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 2.0, 110, 40, 0, 25, 6.0, 0.0, 8.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    wait(agent.lua_state_agent, 1.0);
}
}

unsafe extern "C" fn effect_specialhiholdair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("falco_firebird_hold"), Hash40::new("top"), 0, -2, 0, 0, 0, 0, 1, true);
    }
    if macros::is_excute(agent) {
        macros::BURN_COLOR(agent, 2, 0.1, 0, 0.7);
    }
    wait(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::BURN_COLOR_FRAME(agent, 2, 1, 0.2, 0.1, 0);
    }
    wait(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        macros::BURN_COLOR_NORMAL(agent);
        macros::FLASH(agent, 1, 0.5, 0.3, 0.5);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::COL_NORMAL(agent);
    }
    wait(agent.lua_state_agent, 1.0);
}

unsafe extern "C" fn sound_specialhiholdair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_falco_special_h01"));
    }
}

unsafe extern "C" fn expression_specialhiholdair(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT_STATUS(agent, Hash40::new("rbkind_spinattack"), 0);
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_elecattacks"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 3.0);
    if macros::is_excute(agent) {
        macros::AREA_WIND_2ND_RAD_arg9(agent, 1, 1, 0.02, 2, 0.8, 0, 8, 20, 60);
    }
    frame(agent.lua_state_agent, 42.0);
    if macros::is_excute(agent) {
        AreaModule::erase_wind(agent.module_accessor, 1);
    }
}