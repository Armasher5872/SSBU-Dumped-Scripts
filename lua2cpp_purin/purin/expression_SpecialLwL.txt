methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=1)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 0, false)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=2)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	RUMBLE_HIT(hash40("rbkind_attackll"), 0)
	0xf46f0()
	0xf46f0()
}
frame(Frame=34)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_sleep"), 30, true)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=134)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_sleep"), 30, true)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=187)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_awaken"), 0, false)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=210)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 0, false)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=223)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 0, false)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
