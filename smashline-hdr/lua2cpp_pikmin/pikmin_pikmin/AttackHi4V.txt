unsafe extern "C" fn game_attackhi4_v(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        KineticModule::add_speed(boma, &Vector3f{x: 0.0, y: -0.1, z: 0.0});
        ATTACK(agent, 0, 0, Hash40::new("top"), 20.8, 83, 72, 0, 50, 6.0, 0.0, 3.5, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, true, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_PIKMIN);
        ATTACK(agent, 1, 0, Hash40::new("top"), 16.0, 94, 64, 0, 50, 4.0, 0.0, 3.5, 9.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, true, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_PIKMIN);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        AttackModule::clear(boma, 1, false);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 17.6, 60, 68, 0, 50, 5.0, 0.0, 3.5, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, true, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_PIKMIN);
    }
    frame(lua_state, 11.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
}

unsafe extern "C" fn effect_attackhi4_v(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FOLLOW_COLOR(agent, Hash40::new("pikmin_smash_spin"), Hash40::new("top"), -1, 3, 0, 0, -10, 90, 1, true, 0.36, 0, 1);
        LAST_EFFECT_SET_ALPHA(agent, 0.8);
        EFFECT_FOLLOW(agent, Hash40::new("pikmin_attack_flash"), Hash40::new("top"), 0, 4, 1.6, 0, 0, 0, 1, true);
        LAST_EFFECT_SET_COLOR(agent, 0.36, 0, 1);
    }
    for _ in 0..4 {
    if is_excute(agent) {
        FLASH(agent, 0.8, 1, 0.5, 0);
        FLASH_FRM(agent, 2, 0.8, 1, 0.5, 0.3);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 2, 0.8, 1, 0.5, 0);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        COL_NORMAL(agent);
    }
}
}

unsafe extern "C" fn sound_attackhi4_v(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pikmin_smash_h02"));
        PLAY_SE(agent, Hash40::new("se_pikmin_smash_h04"));
    }
}