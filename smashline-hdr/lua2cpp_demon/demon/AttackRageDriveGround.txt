unsafe extern "C" fn game_attackragedriveground(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if !WorkModule::is_flag(boma, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
        battle_object_module_accessor();
        methodlib::L2CValue::L2CValue(void*)();
        methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
        FighterSpecializer_Demon::set_devil(boma, true, 2);
        if is_excute(agent) {
            WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
        }
        frame(lua_state, 1.0);
        if is_excute(agent) {
            WorkModule::set_int(boma, *HIT_STATUS_NORMAL, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS);
            ATTACK(agent, 0, 0, Hash40::new("top"), 13.0, 100, 100, 100, 50, 6.5, 0.0, 1.0, 5.0, Some(10.0), Some(1.0), Some(5.0), 1.5, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 4, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
            AttackModule::set_no_dead_all(boma, true, false);
            AttackModule::set_catch_only_all(boma, true, false);
            ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 16.0, 60, 95, 0, 55, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
            AttackModule::set_attack_camera_quake_forced(boma, 0, *CAMERA_QUAKE_KIND_NONE, true);
            AttackModule::set_no_finish_camera(boma, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
            ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
            ATTACK_IGNORE_THROW(agent, 1, 0, Hash40::new("top"), 18.0, 361, 80, 0, 80, 7.5, 0.0, 7.5, -10.0, Some(0.0), Some(7.5), Some(14.0), 0.8, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_PUNCH);
            AttackModule::set_no_finish_camera(boma, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
            battle_object_module_accessor();
            methodlib::L2CValue::L2CValue(void*)();
        }
        else{
        methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
    }
    methodlib::L2CValue::as_pointer()const();
    clear_past_log_throw();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::off_flag(boma, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE);
        AttackModule::clear_all(boma);
        WorkModule::on_flag(boma, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_HIT);
        CAM_ZOOM_OUT(agent);
    }
    frame(lua_state, 4.0);
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_NORMAL);
    }
    frame(lua_state, 35.0);
    FighterSpecializer_Demon::set_devil(boma, true, 3);
    frame(lua_state, 38.0);
    FighterSpecializer_Demon::set_devil(boma, true, 4);
    frame(lua_state, 40.0);
    FighterSpecializer_Demon::set_devil(boma, true, 5);
    frame(lua_state, 41.0);
    FighterSpecializer_Demon::set_devil(boma, true, 6);
    frame(lua_state, 42.0);
    FighterSpecializer_Demon::set_devil(boma, false, 0);
}
else{
battle_object_module_accessor(0);
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 2);
if is_excute(agent) {
    WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
}
frame(lua_state, 1.0);
if is_excute(agent) {
    WorkModule::set_int(boma, *HIT_STATUS_NORMAL, *FIGHTER_DEMON_STATUS_ATTACK_RAGE_DRIVE_INT_TARGET_HIT_STATUS);
    ATTACK(agent, 0, 0, Hash40::new("top"), 11.5, 100, 100, 100, 50, 6.5, 0.0, 1.0, 5.0, Some(10.0), Some(1.0), Some(5.0), 1.4, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 4, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
    AttackModule::set_no_dead_all(boma, true, false);
    AttackModule::set_catch_only_all(boma, true, false);
    ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 13.0, 60, 95, 0, 67, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
    AttackModule::set_attack_camera_quake_forced(boma, 0, *CAMERA_QUAKE_KIND_NONE, true);
    AttackModule::set_no_finish_camera(boma, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
    ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_PUNCH);
    ATTACK_IGNORE_THROW(agent, 1, 0, Hash40::new("top"), 15.0, 361, 80, 0, 80, 5.0, 0.0, 5.0, -8.5, Some(0.0), Some(5.0), Some(12.5), 0.8, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_PUNCH);
    AttackModule::set_no_finish_camera(boma, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, true, true);
    battle_object_module_accessor();
    methodlib::L2CValue::L2CValue(void*)();
}
else{
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
clear_past_log_throw();
frame(lua_state, 2.0);
if is_excute(agent) {
WorkModule::off_flag(boma, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_CHECK_DAMAGE);
AttackModule::clear_all(boma);
WorkModule::on_flag(boma, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_HIT);
CAM_ZOOM_OUT(agent);
}
frame(lua_state, 4.0);
if is_excute(agent) {
WHOLE_HIT(agent, *HIT_STATUS_NORMAL);
}
frame(lua_state, 35.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 3);
frame(lua_state, 38.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 4);
frame(lua_state, 40.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 5);
frame(lua_state, 41.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 6);
frame(lua_state, 42.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, false, 0);
}
}

unsafe extern "C" fn effect_attackragedriveground(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if !WorkModule::is_flag(boma, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
        if is_excute(agent) {
            FLASH(agent, 0.45, 0.45, 2, 0.1);
            BURN_COLOR(agent, 3.8, 22, 36, 0.5);
            EffectModule::remove_screen(boma, Hash40::new("demon_ragedrive_bg"), -1);
            EFFECT(agent, Hash40::new("demon_ragedrive_hit_l"), Hash40::new("top"), 2, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
            EFFECT(agent, 0x1ba36691bb, Hash40::new("top"), 2, 7, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
        if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if is_excute(agent) {
                DOWN_EFFECT(agent, Hash40::new("demon_ragedrive_ground"), Hash40::new("top"), 2, 0, 0, 0, 180, 0, 1.5, 0, 0, 0, 0, 0, 0, false);
                EFFECT(agent, Hash40::new("demon_ragedrive_shock"), Hash40::new("top"), 2, 0, 0, 0, 180, 0, 1.5, 0, 0, 0, 0, 0, 0, false);
                EFFECT(agent, 0x184854e951, Hash40::new("top"), 2, 0, 0, 0, 180, 0, 1.3, 0, 0, 0, 0, 0, 0, false);
            }
            else{
            if is_excute(agent) {
                DOWN_EFFECT(agent, Hash40::new("demon_ragedrive_ground"), Hash40::new("top"), 2, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, false);
                EFFECT(agent, Hash40::new("demon_ragedrive_shock"), Hash40::new("top"), 2, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, false);
                EFFECT(agent, 0x184854e951, Hash40::new("top"), 2, 0, 0, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, false);
            }
        }
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 15, 0.45, 0.45, 2, 0);
        BURN_COLOR_FRAME(agent, 13, 3.8, 22, 36, 0);
        ColorBlendModule::set_disable_camera_depth_influence(boma, false);
    }
    frame(lua_state, 35.0);
    if is_excute(agent) {
        ColorBlendModule::set_disable_camera_depth_influence(boma, true);
        FLASH(agent, 0.097, 0.006, 0.238, 0.15);
        BURN_COLOR(agent, 6, 0, 40, 0.045);
        FLASH_FRM(agent, 2, 0.097, 0.006, 0.238, 0.45);
        BURN_COLOR_FRAME(agent, 2, 6, 0, 40, 0.13);
    }
    frame(lua_state, 36.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_end"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 38.0);
    if is_excute(agent) {
        FLASH(agent, 0.097, 0.006, 0.238, 0.45);
        BURN_COLOR(agent, 6, 0, 40, 0.13);
        FLASH_FRM(agent, 8, 0.097, 0.006, 0.238, 0);
        BURN_COLOR_FRAME(agent, 8, 6, 0, 40, 0);
    }
}
else{
if is_excute(agent) {
    FLASH(agent, 0.45, 0.45, 2, 0.1);
    BURN_COLOR(agent, 3.8, 22, 36, 0.5);
    EFFECT(agent, Hash40::new("demon_ragedrive_hit_m"), Hash40::new("top"), 2, 7, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    EFFECT(agent, 0x1bd461a12d, Hash40::new("top"), 2, 7, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
}
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(agent) {
        DOWN_EFFECT(agent, Hash40::new("demon_ragedrive_ground"), Hash40::new("top"), 2, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, false);
        EFFECT(agent, 0x183f53d9c7, Hash40::new("top"), 2, 0, 0, 0, 180, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    }
    else{
    if is_excute(agent) {
        DOWN_EFFECT(agent, Hash40::new("demon_ragedrive_ground"), Hash40::new("top"), 2, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, false);
        EFFECT(agent, 0x183f53d9c7, Hash40::new("top"), 2, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    }
}
}
frame(lua_state, 2.0);
if is_excute(agent) {
FLASH_FRM(agent, 15, 0.45, 0.45, 2, 0);
BURN_COLOR_FRAME(agent, 13, 3.8, 22, 36, 0);
ColorBlendModule::set_disable_camera_depth_influence(boma, false);
}
frame(lua_state, 35.0);
if is_excute(agent) {
ColorBlendModule::set_disable_camera_depth_influence(boma, true);
FLASH(agent, 0.097, 0.006, 0.238, 0.15);
BURN_COLOR(agent, 6, 0, 40, 0.045);
FLASH_FRM(agent, 2, 0.097, 0.006, 0.238, 0.45);
BURN_COLOR_FRAME(agent, 2, 6, 0, 40, 0.13);
}
frame(lua_state, 36.0);
if is_excute(agent) {
EFFECT_FOLLOW(agent, Hash40::new("demon_devil_end"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(lua_state, 38.0);
if is_excute(agent) {
FLASH(agent, 0.097, 0.006, 0.238, 0.45);
BURN_COLOR(agent, 6, 0, 40, 0.13);
FLASH_FRM(agent, 8, 0.097, 0.006, 0.238, 0);
BURN_COLOR_FRAME(agent, 8, 6, 0, 40, 0);
}
}
}

unsafe extern "C" fn sound_attackragedriveground(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        STOP_SE(agent, Hash40::new("se_demon_ragedrive_01"));
        STOP_SE(agent, Hash40::new("se_demon_ragedrive_02"));
        STOP_SE(agent, Hash40::new("se_demon_ragedrive"));
        STOP_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_down"));
        PLAY_SE(agent, Hash40::new("se_demon_ragedrive_03"));
        PLAY_SE(agent, Hash40::new("vc_demon_attack07"));
    }
}

unsafe extern "C" fn expression_attackragedriveground(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    if WorkModule::is_flag(*FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ATTACK_RAGE_CAPTURE) {
    if(is_excute) {
        QUAKE(agent, *CAMEA_QUAKE_KIND_XXL);
        ControlModule::set_rumble(boma, Hash40::new_raw(0x15793001e0), 0, false, BATTLE_OBJECT_ID_INVALID as u32);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
}
else {
if(is_excute) {
    ItemModule::set_have_item_visibility(boma, false, 0);
    QUAKE(agent, *CAMEA_QUAKE_KIND_XXL);
    ControlModule::set_rumble(boma, Hash40::new_raw(0x15793001e0), 0, false, BATTLE_OBJECT_ID_INVALID as u32);
}
}
}