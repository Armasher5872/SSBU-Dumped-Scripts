if macros::is_excute(fighter) {
macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.3, 361, 12, 0, 8, 8.0, 0.0, 10.0, 16.5, Some(0.0), Some(12.0), Some(16.5), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_MAGIC, *ATTACK_REGION_MAGIC);
AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 3, /*Unk*/ false);
macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 5);
}wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}wait_loop_clear(0);
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.3, 361, 12, 0, 8, 8.0, 0.0, 10.0, 16.5, Some(0.0), Some(12.0), Some(16.5), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_MAGIC, *ATTACK_REGION_MAGIC);
AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 3, /*Unk*/ false);
macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 5);
}wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}frame(0, 5);
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.3, 361, 12, 0, 8, 8.0, 0.0, 10.0, 16.5, Some(0.0), Some(12.0), Some(16.5), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_MAGIC, *ATTACK_REGION_MAGIC);
AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 3, /*Unk*/ false);
macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 5);
}wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}frame(0, 8);
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 1, 0, Hash40::new("top"), 0.3, 361, 12, 0, 8, 8.0, 0.0, 10.0, 16.5, Some(0.0), Some(12.0), Some(16.5), 0.5, 0.4, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_magic"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_MAGIC, *ATTACK_REGION_MAGIC);
AttackModule::set_add_reaction_frame(fighter.module_accessor, /*ID*/ 0, /*Frames*/ 3, /*Unk*/ false);
macros::ATK_SET_SHIELD_SETOFF_MUL(fighter, 0, 5);
}wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ FIGHTER_STATUS_ATTACK_FLAG_100*_CONTINUE_CHECK);
}frame(0, 11);
