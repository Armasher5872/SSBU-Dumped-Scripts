frame(Frame=24)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(hash40("sys_atk_smoke"), hash40("top"), -10, 0, 27, 0, 120, 0, 1, 0, 0, 3, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.3)
	0x353770()
}
frame(Frame=25)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 10, 7, 25, 0, 90, 0, 1, 0, 0, 0, 0, 0, 0, true, 1)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 10, 7, 25, 0, 90, 0, 0.8, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.3)
	0x353770()
}
frame(Frame=27)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=30)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), -8, 6, 19, 0, 120, 0, 1.1, 0, 0, 0, 0, 0, 0, true, 1)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(0.9)
	0x353770()
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), -8, 6, 19, 0, 120, 0, 0.9, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.2)
	0x353770()
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=32)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 0, 0, 17, 0, 120, 0, 0.5, 0, 0, 3, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.6)
	0x353770()
}
frame(Frame=34)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 27, 0, 0, 0, 130, 0, 1.2, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=36)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 32, 0, -3, 0, 130, 0, 0.8, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=38)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 36, 0, -5, 0, 130, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=45)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=46)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=48)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 28, 6, 6, 0, -96, 0, 1, 0, 0, 0, 0, 0, 0, true, 1)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.5)
	0x353770()
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 28, 6, 6, 0, -96, 0, 0.8, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.8)
	0x353770()
	EFFECT(hash40("sys_atk_smoke"), hash40("top"), 28, 0, -2.5, 0, -106, 0, 1, 0, 0, 3, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.6)
	0x353770()
}
frame(Frame=49)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 0, 0, 5, 0, -96, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2)
	0x353770()
}
frame(Frame=50)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(hash40("sys_atk_smoke"), hash40("top"), 28, 6, 6, 0, -96, 0, 0.5, 0, 0, 3, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.6)
	0x353770()
}
frame(Frame=52)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), -33, 5, 101, 0, 130, 0, 1.1, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.3)
	0x353770()
}
frame(Frame=54)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	LANDING_EFFECT(hash40("sys_down_smoke"), hash40("top"), 2, 0, 70, 0, 90, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=75)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 0.8, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=76)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 0, 5, 70, 0, 80, 0, 1, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(hash40("sys_atk_smoke"), hash40("top"), -4, 0, 74, 0, 80, 0, 0.9, 0, 0, 3, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.3)
	0x353770()
}
frame(Frame=78)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=80)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 23, 5, 4, 0, -86, 0, 1, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=81)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 19, 0, 5, 0, -86, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2)
	0x353770()
}
frame(Frame=82)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), -7, 0, 6, 0, -86, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2)
	0x353770()
}
frame(Frame=84)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=85)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), -25, 5, 7, 0, 45, 0, 1, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.3)
	0x353770()
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(0x149dfa831d, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), -21, 0, 11, 0, 45, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2.5)
	0x353770()
}
frame(Frame=87)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), -7, 0, 25, 0, 45, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2.5)
	0x353770()
}
frame(Frame=88)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 8, 0, 41, 0, 45, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2.5)
	0x353770()
}
frame(Frame=89)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=90)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 36, 5, 35, 0, -95, 0, 1, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=92)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 8, 0, 33, 0, -95, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2)
	0x353770()
}
frame(Frame=94)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=98)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), -22, 5, -19, 0, 95, 0, 1.2, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(0x149dfa831d, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 0, 0, -28, 0, 95, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2)
	0x353770()
}
frame(Frame=99)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 27, 0, -30, 0, 95, 0, 0.5, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(2)
	0x353770()
}
frame(Frame=100)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=108)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_FOLLOW(0x16d122fce1, hash40("waist"), 0, 0, 0, 0, 0, 0, 1, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	EFFECT_ALPHA(0x17e82f6c35, hash40("top"), 61, 6, 2, 0, -89, 0, 1.3, 0, 0, 0, 0, 0, 0, true, 0.4)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(0.8)
	0x353770()
}
frame(Frame=109)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 21, 0, 4, 0, -90, 0, 1.1, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=112)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 10, 0, 4, 0, -90, 0, 0.6, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=113)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 5, 0, 4, 0, -90, 0, 0.4, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=114)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), 0, 0, 4, 0, -90, 0, 0.35, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=118)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT_OFF_KIND(0x16d122fce1, false, true)
	0x353770()
	0x353770()
	0x353770()
}
frame(Frame=120)
0x353770()
0x353770()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x353770()){
	EFFECT(hash40("sys_turn_smoke"), hash40("top"), -3, 0, 4, 0, -90, 0, 0.3, 0, 0, 0, 0, 0, 0, true)
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	0x353770()
	LAST_EFFECT_SET_RATE(1.4)
	0x353770()
}
