#[acmd_script( agent = "master", script = "expression_attacks4lw", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attacks4lw(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        WorkModule::on_flag(fighter.module_accessor, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(fighter.lua_state_agent, 2.0);
    frame(fighter.lua_state_agent, 14.0);
    if macros::is_excute(fighter) {
        WorkModule::on_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD);
    }
    execute(fighter.lua_state_agent, 14.0);
    if macros::is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    frame(fighter.lua_state_agent, 23.0);
    if macros::is_excute(fighter) {
        ControlModule::set_rumble(fighter.module_accessor, 0x1782d1b9f2, 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(fighter.lua_state_agent, 25.0);
    if macros::is_excute(fighter) {
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_piercel"), 0, 0);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0, 1);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0, 2);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_piercel"), 0, 3);
    }
    frame(fighter.lua_state_agent, 44.0);
    frame(fighter.lua_state_agent, 85.0);
    if macros::is_excute(fighter) {
        WorkModule::on_flag(fighter.module_accessor, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_REQ_EFFECT_AURA);
    }
}