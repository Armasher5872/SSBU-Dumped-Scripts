unsafe extern "C" fn sound_squatwait1(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 3.0);
    if WorkModule::is_flag(boma, *FIGHTER_STATUS_SQUAT_FLAG_REQUEST_SQUAT_SE) {
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_zelda_squat"));
            WorkModule::off_flag(boma, *FIGHTER_STATUS_SQUAT_FLAG_REQUEST_SQUAT_SE);
        }
    }
    frame(lua_state, 72.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
        PLAY_STATUS(agent, Hash40::new("se_koopajr_wait_out"));
    }
    frame(lua_state, 107.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_koopajr_wait_shake"));
    }
    frame(lua_state, 127.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_koopajr_wait_shake"));
    }
    frame(lua_state, 184.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_koopajr_wait_in"));
    }
}

unsafe extern "C" fn expression_squatwait1(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        HIT_NODE(agent, Hash40::new("bust"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("shoulderr"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("shoulderl"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("armr"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("arml"), *HIT_STATUS_OFF);
    }
}