methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_R)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	ItemModule::set_have_item_visibility(false)
	0x13ae40()
	VisibilityModule::set_int64(hash40("item"), hash40("item_shovel"))
	0x13ae40()
	0x13ae40()
}
frame(Frame=4)
0x13ae40()
0x13ae40()
execute(4)
0x13ae40()
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
0x13ae40(false, true)
0x13ae40()
0x13ae40()
if(0x13ae40()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x13ae40()){
		slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 3)
		0x13ae40()
		0x13ae40()
		0x13ae40()
		0x13ae40()
		ItemModule::set_have_item_visibility(false)
		0x13ae40()
	}
}
frame(Frame=6)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x13ae40()
	0x13ae40()
	0x13ae40()
}
frame(Frame=9)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	RUMBLE_HIT(hash40("rbkind_attackm"), 0)
	0x13ae40()
	0x13ae40()
}
frame(Frame=26)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x13ae40()
	0x13ae40()
	0x13ae40()
}
frame(Frame=44)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 4)
	0x13ae40()
	0x13ae40()
	0x13ae40()
	0x13ae40()
}
frame(Frame=47)
0x13ae40()
0x13ae40()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13ae40()){
	VisibilityModule::set_int64(hash40("item"), hash40("item_none"))
	0x13ae40()
	0x13ae40()
}
