#[acmd_script( agent = "fox", script = "game_throwlw", category = ACMD_GAME, low_priority )]
unsafe fn game_throwlw(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 1.0, 60, 100, 0, 85, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
        ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 3.0, 361, 100, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
    }
    frame(lua_state, 23.0);
    IS_EXIST_ARTICLE(fighter, *FIGHTER_FOX_GENERATE_ARTICLE_BLASTER);
    if(0x10d030(false, true)){
        if is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(*FIGHTER_FOX_GENERATE_ARTICLE_BLASTER, Hash40::new("open"));
            ArticleModule::change_motion(boma);
        }
    }
    frame(lua_state, 26.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_FOX_GENERATE_ARTICLE_BLASTER_BULLET, false, -1);
    }
    frame(lua_state, 29.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_FOX_GENERATE_ARTICLE_BLASTER_BULLET, false, -1);
    }
    frame(lua_state, 32.0);
    if is_excute(fighter) {
        ArticleModule::generate_article(boma, *FIGHTER_FOX_GENERATE_ARTICLE_BLASTER_BULLET, false, -1);
    }
    frame(lua_state, 33.0);
    if is_excute(fighter) {
        CHECK_FINISH_CAMERA(fighter, 1, 1);
        FighterCutInManager::set_throw_finish_zoom_rate(boma, 1.6);
        FighterCutInManager::set_throw_finish_offset(boma, 0, 6, 0);
    }
    frame(lua_state, 34.0);
    if is_excute(fighter) {
        let target = WorkModule::get_int64(boma, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT);
        let target_group = WorkModule::get_int64(boma, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP);
        let target_no = WorkModule::get_int64(boma, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO);
        ATK_HIT_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, Hash40::new("throw"), target, target_group, target_no);
    }
    frame(lua_state, 35.0);
    IS_EXIST_ARTICLE(fighter, *FIGHTER_FOX_GENERATE_ARTICLE_BLASTER);
    if(0x10d030(false, true)){
        if is_excute(fighter) {
            methodlib::L2CValue::as_hash()const(*FIGHTER_FOX_GENERATE_ARTICLE_BLASTER, Hash40::new("close"));
            ArticleModule::change_motion(boma);
        }
    }
}