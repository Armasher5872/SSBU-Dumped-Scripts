methodlib::L2CValue::operatorbool()const(is_excute)
if(0x141270()){
	WHOLE_HIT(HIT_STATUS_XLU)
	0x141270()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x141270()){
	WHOLE_HIT(HIT_STATUS_XLU)
	0x141270()
	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
	0x141270()
	0x141270()
	0x141270()
	0x141270()
	0x141270()
	0x141270()
	SLOW_OPPONENT(5, 80)
	0x141270()
	0x141270()
}
WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
0x141270(false, false)
0x141270()
0x141270()
if(0x141270()){
	frame(Frame=5)
	0x141270()
	0x141270()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x141270()){
		FT_SET_FINAL_FEAR_FACE(60)
		0x141270()
		REQ_FINAL_START_CAMERA_arg3(hash40("d04finalchange.nuanmb"), false, false)
		0x141270()
		0x141270()
		0x141270()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x141270()){
			PostureModule::scale(3, 0)
			0x141270(938217529, 2.3)
			0x141270()
			CAM_ZOOM_IN_arg5(0, 0)
			0x141270()
			0x141270()
			0x141270()
			0x141270()
			0x141270()
			0x141270()
		}
		get_value_float(SO_VAR_FLOAT_LR)
		0x141270(0, 0)
		0x141270()
		0x141270()
		if(0x141270()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x141270()){
				camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0)
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x141270()){
					camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0)
					0x141270()
					0x141270()
					0x141270()
					0x141270()
				}
			}
		}
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x141270()){
			FT_START_CUTIN()
		}
	}
}
