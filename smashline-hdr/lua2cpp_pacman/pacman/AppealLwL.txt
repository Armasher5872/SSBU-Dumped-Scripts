unsafe extern "C" fn effect_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 14.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 24.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("pacman_appeal_down"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 14.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_pacman_landing01"));
    }
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_pacman_appeal_l"));
    }
}

unsafe extern "C" fn expression_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("fairy") as i64, hash40("fairy_disp") as i64);
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
        MotionModule::set_rate_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(lua_state, 13.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 5);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(lua_state, 33.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(lua_state, 35.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(lua_state, 38.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
    }
    frame(lua_state, 43.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(lua_state, 48.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
    }
    frame(lua_state, 53.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(lua_state, 58.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(lua_state, 63.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(lua_state, 68.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(lua_state, 73.0);
    if is_excute(agent) {
        MotionModule::set_frame_partial(boma, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(lua_state, 87.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("fairy") as i64, hash40("fairy_disp_off") as i64);
    }
    frame(lua_state, 93.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 4);
    }
}