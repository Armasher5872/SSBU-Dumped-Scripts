unsafe extern "C" fn game_attackairb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 12.0, 361, 92, 0, 30, 6.0, 0.0, 8.0, -5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_B, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_HIP);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 7.0, 361, 70, 0, 10, 6.0, 0.0, 8.0, -5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_B, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_HIP);
    }
    frame(lua_state, 14.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        WorkModule::off_flag(boma, *FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
    }
}

unsafe extern "C" fn effect_attackairb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        frame(lua_state, 6.0);
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_attack_impact"), Hash40::new("top"), 3, 8, -14.5, 0, 0, 0, 1.35, 0, 0, 0, 0, 0, 0, true);
            EFFECT_FOLLOW(agent, Hash40::new("daisy_aire_back_atk"), Hash40::new("top"), 3, 8, -14.5, 0, 0, 0, 1, true);
            EFFECT_DETACH_KIND(agent, Hash40::new("daisy_aire_back_atk"), -1);
        }
        else {
        frame(lua_state, 0.0);
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_attack_impact"), Hash40::new("top"), -3, 8, -14.5, 0, 0, 0, 1.35, 0, 0, 0, 0, 0, 0, true);
            EFFECT_FOLLOW(agent, Hash40::new("daisy_aire_back_atk"), Hash40::new("top"), -3, 8, -14.5, 0, 0, 0, 1, true);
            EFFECT_DETACH_KIND(agent, Hash40::new("daisy_aire_back_atk"), -1);
        }
    }
}
if is_excute(agent) {
    EFFECT(agent, Hash40::new("daisy_aire_back_atk_petals"), Hash40::new("top"), 0, 8, -13.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
}
}

unsafe extern "C" fn sound_attackairb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SEQUENCE(agent, Hash40::new("seq_daisy_rnd_attack"));
        PLAY_SE(agent, Hash40::new("se_daisy_attackair_b01"));
    }
}

unsafe extern "C" fn expression_attackairb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 6.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}