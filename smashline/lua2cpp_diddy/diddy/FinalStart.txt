unsafe extern "C" fn game_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 4, 30);
    }
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 60);
            macros::REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstart.nuanmb"), false);
        }
        else{
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 5, 0);
            0x148390(95671436, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
            macros::FT_START_CUTIN(agent);
        }
    }
}
if macros::is_excute(agent) {
    ArticleModule::set_visibility_whole(agent.module_accessor, *FIGHTER_DIDDY_GENERATE_ARTICLE_BARRELJETS, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
frame(agent.lua_state_agent, 13.0);
if macros::is_excute(agent) {
    ArticleModule::set_visibility_whole(agent.module_accessor, *FIGHTER_DIDDY_GENERATE_ARTICLE_BARRELJETS, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
frame(agent.lua_state_agent, 25.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 0, Hash40::new("waist"), 1.0, 85, 50, 0, 10, 4.0, -3.0, 0.0, -5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
    macros::ATTACK(agent, 1, 0, Hash40::new("waist"), 1.0, 85, 50, 0, 10, 4.0, -3.0, 0.0, 5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
    AttackModule::set_force_reaction(agent.module_accessor, 0, true, false);
    AttackModule::set_force_reaction(agent.module_accessor, 1, true, false);
    AttackModule::set_final_finish_cut_in(agent.module_accessor, 0, true, true, -1, false);
    AttackModule::set_final_finish_cut_in(agent.module_accessor, 1, true, true, -1, false);
}
frame(agent.lua_state_agent, 30.0);
if macros::is_excute(agent) {
    macros::CAM_ZOOM_OUT(agent);
}
frame(agent.lua_state_agent, 58.0);
if macros::is_excute(agent) {
    AttackModule::clear(agent.module_accessor, 0, false);
    AttackModule::clear(agent.module_accessor, 1, false);
    macros::ATTACK(agent, 2, 0, Hash40::new("waist"), 10.0, 60, 100, 0, 75, 10.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
    AttackModule::set_force_reaction(agent.module_accessor, 2, true, false);
    AttackModule::set_final_finish_cut_in(agent.module_accessor, 2, true, true, -1, false);
}
}

unsafe extern "C" fn effect_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::set_visible_kind(agent.module_accessor, Hash40::new("sys_final_aura"), false);
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_diddy_final"), false, false, false);
    }
    frame(agent.lua_state_agent, 15.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("diddy_final_charge"), Hash40::new("bust"), -2.7, -4.7, -4.5, 0, 0, 0, 1.1, true);
        macros::LAST_EFFECT_SET_RATE(agent, 1.3);
        macros::EFFECT_FOLLOW(agent, Hash40::new("diddy_final_charge"), Hash40::new("bust"), -2.7, -4.7, 4.5, 0, 0, 0, 1.1, true);
        macros::LAST_EFFECT_SET_RATE(agent, 1.3);
    }
    if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if macros::is_excute(agent) {
            macros::EFFECT_FOLLOW(agent, Hash40::new("diddy_bjet_landing"), Hash40::new("top"), 0, -3, 0, 0, -90, 0, 1.5, true);
        }
        else{
        if macros::is_excute(agent) {
            macros::EFFECT_FOLLOW(agent, Hash40::new("diddy_bjet_landing"), Hash40::new("top"), 0, -3, 0, 0, 90, 0, 1.5, true);
        }
    }
}
frame(agent.lua_state_agent, 58.0);
if macros::is_excute(agent) {
    macros::EFFECT(agent, Hash40::new("sys_bomb_b"), Hash40::new("top"), 0, 0, 0, 0, 90, 0, 1.3, 0, 0, 0, 0, 0, 0, false);
}
}

unsafe extern "C" fn sound_finalstart(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 13.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_diddy_002"));
    }
    frame(agent.lua_state_agent, 58.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE_NO_3D(agent, Hash40::new("se_diddy_final01"));
    }
}

unsafe extern "C" fn expression_finalstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        WorkModule::on_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        ItemModule::set_attach_item_visibility(agent.module_accessor, false, *ATTACH_ITEM_GROUP_BACK);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        macros::START_INFO_FLASH_EYE(agent);
    }
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_jet"), 32, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 39.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_NONE);
    }
    frame(agent.lua_state_agent, 58.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_explosion"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}