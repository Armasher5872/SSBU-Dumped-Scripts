frame(Frame=2)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_FLIP(hash40("sys_spin_wind"), hash40("sys_spin_wind"), hash40("top"), 0, 5, 0, 0, 0, -7, 0.9, true, EF_FLIP_YZ)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=3)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_FLIP(hash40("sys_spin_wind"), hash40("sys_spin_wind"), hash40("top"), 0, 3, 0, 0, 180, 7, 0.9, true, EF_FLIP_YZ)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=12)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_FLIP(hash40("sys_spin_wind"), hash40("sys_spin_wind"), hash40("top"), 0, 5, 0, 0, 0, -7, 0.9, true, EF_FLIP_YZ)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=13)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT_FOLLOW_FLIP(hash40("sys_spin_wind"), hash40("sys_spin_wind"), hash40("top"), 0, 3, 0, 0, 180, 7, 0.9, true, EF_FLIP_YZ)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
}
frame(Frame=24)
0x101020()
0x101020()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	EFFECT(hash40("sys_attack_impact"), hash40("top"), 0, 5, 0, 0, 0, 0, 1.6, 0, 0, 0, 0, 0, 360, true)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	LAST_EFFECT_SET_ALPHA(0.7)
	0x101020()
	LAST_EFFECT_SET_RATE(1.1)
	0x101020()
}
