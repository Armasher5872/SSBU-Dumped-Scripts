frame(Frame=1)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT(hash40("sys_smash_flash"), hash40("haver"), 0, 18, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=13)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_FOLLOW(0x1150d2f689, hash40("haver"), 0, 0, 0, 0, 0, 0, 1, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=14)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_FOLLOW_NO_STOP(hash40("sys_attack_speedline"), hash40("top"), -4, 4.5, 4, 0, 0, 0, 1, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_PARTICLE_SET_COLOR(2, 1, 0.5)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=15)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_ALPHA(hash40("sys_attack_impact"), hash40("top"), 0, 3, 23, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, true, 1.3)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_EFFECT_SET_RATE(0.8)
	0xffdb0()
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), -4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_EFFECT_SET_RATE(0.75)
	0xffdb0()
}
frame(Frame=17)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_FOLLOW_NO_STOP(hash40("sys_attack_speedline"), hash40("top"), -4, 4.5, 7, 0, 0, 0, 0.8, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_PARTICLE_SET_COLOR(2, 1, 0.5)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=20)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_OFF_KIND(0x1150d2f689, false, false)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=32)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_FOLLOW(0x1150d2f689, hash40("haver"), 0, 0, 0, 0, 0, 0, 1, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=34)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_FOLLOW_NO_STOP(hash40("sys_attack_speedline"), hash40("top"), -4, 4.5, -8, 0, 180, 0, 1.2, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_PARTICLE_SET_COLOR(3, 1.3, 0.5)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=34)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), -1, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_EFFECT_SET_RATE(0.75)
	0xffdb0()
}
frame(Frame=37)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_FOLLOW_NO_STOP(hash40("sys_attack_speedline"), hash40("top"), -4, 4.5, -8, 0, 180, 0, 1.2, true)
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	0xffdb0()
	LAST_PARTICLE_SET_COLOR(3, 1.3, 0.5)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
frame(Frame=39)
0xffdb0()
0xffdb0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xffdb0()){
	EFFECT_OFF_KIND(0x1150d2f689, false, false)
	0xffdb0()
	0xffdb0()
	0xffdb0()
}
