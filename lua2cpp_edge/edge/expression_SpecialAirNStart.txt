methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	ItemModule::set_have_item_visibility(false)
	0x2490c0()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackss"), 3, false)
	ControlModule::set_rumble()
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
wait(Frames=10)
for(5 Iterations){
	0x2490c0()
	0x2490c0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x2490c0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackss"), 3, false)
		ControlModule::set_rumble()
		0x2490c0()
		0x2490c0()
		0x2490c0()
	}
	wait(Frames=10)
	0x2490c0()
	0x2490c0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x2490c0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackss"), 3, false)
		ControlModule::set_rumble()
		0x2490c0()
		0x2490c0()
		0x2490c0()
	}
	wait(Frames=10)
	0x2490c0()
	0x2490c0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x2490c0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackss"), 3, false)
		ControlModule::set_rumble()
		0x2490c0()
		0x2490c0()
		0x2490c0()
	}
	wait(Frames=10)
	0x2490c0()
	0x2490c0()
	frame(Frame=45)
	0x2490c0()
	0x2490c0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x2490c0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attacks"), 3, false)
		ControlModule::set_rumble()
		0x2490c0()
		0x2490c0()
		0x2490c0()
	}
	wait(Frames=8)
	0x2490c0()
	0x2490c0()
}
frame(Frame=85)
for(5 Iterations){
	0x2490c0()
	0x2490c0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x2490c0()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 3, false)
		ControlModule::set_rumble()
		0x2490c0()
		0x2490c0()
		0x2490c0()
	}
	wait(Frames=6)
	0x2490c0()
	0x2490c0()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 8)
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
