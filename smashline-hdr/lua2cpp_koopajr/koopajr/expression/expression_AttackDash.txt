#[acmd_script( agent = "koopajr", script = "expression_attackdash", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_attackdash(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    frame(lua_state, 0.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("clown_face"), Hash40::new("clown_face_mouth_open"));
        VisibilityModule::set_int64(boma, Hash40::new("item"), Hash40::new("item_saw"));
    }
    frame(lua_state, 6.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(boma);
    }
    frame(lua_state, 8.0);
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashss"), 4);
    }
    frame(lua_state, 23.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(boma);
    }
    frame(lua_state, 25.0);
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 0);
    }
}