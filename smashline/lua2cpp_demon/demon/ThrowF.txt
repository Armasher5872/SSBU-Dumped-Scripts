unsafe extern "C" fn game_throwf(agent: &mut L2CAgentBase) {
    is_vr_mode();
    if(0x3cfb70(false, false)){
        methodlib::L2CValue::L2CValue(void*)();
    }
    else {
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
    methodlib::L2CValue::as_pointer()const();
    is_one_on_one_including_thrown();
    if(0x3cfb70(false, true)){
        if macros::is_excute(agent) {
            methodlib::L2CValue::L2CValue(void*)();
        }
        else {
        methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
    }
    methodlib::L2CValue::as_pointer()const();
    check_disabled_motion_camera_of_scale();
    methodlib::L2CValue::L2CValue(void*)();
}
else {
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
}
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_stage();
if WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA) {
if macros::is_excute(agent) {
macros::CHECK_VALID_START_CAMERA(agent, 0, 7, 0, 20, 30, 0, true);
}
}
if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA) {
if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
if macros::is_excute(agent) {
    macros::REQ_MOTION_CAMERA(agent, Hash40::new("e01throwf.nuanmb"), false);
}
}
}
if macros::is_excute(agent) {
PostureModule::scale(agent.module_accessor, 7, 0);
0x3cfb70(-1037516665, 1.5);
CAM_ZOOM_IN_arg5(0, 0);
}
if macros::is_excute(agent) {
macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 2.0, 40, 125, 0, 70, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 3.0, 361, 100, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
}
frame(agent.lua_state_agent, 11.0);
PostureModule::scale(agent.module_accessor);
if(0x3cfb70(-1037516665, 1.4)){
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("kneer"), 5.0, 361, 100, 0, 58, 5.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("footr"), 5.0, 361, 100, 0, 58, 5.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
}
else {
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("kneer"), 5.0, 361, 100, 0, 58, 4.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("footr"), 5.0, 361, 100, 0, 58, 4.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
}
}
}
if macros::is_excute(agent) {
AttackModule::set_catch_only_all(agent.module_accessor, true, false);
}
frame(agent.lua_state_agent, 13.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 39.0);
PostureModule::scale(agent.module_accessor);
if(0x3cfb70(-1037516665, 1.4)){
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 5.0, 361, 100, 0, 58, 5.0, 1.0, 14.0, 5.5, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 5.0, 361, 100, 0, 58, 5.0, 1.5, 15.5, 10.5, Some(5.0), Some(15.5), Some(10.5), 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
}
else {
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 5.0, 361, 100, 0, 58, 4.0, 1.0, 14.0, 5.5, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 5.0, 361, 100, 0, 58, 4.0, 1.5, 16.0, 9.5, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
}
}
}
if macros::is_excute(agent) {
AttackModule::set_catch_only_all(agent.module_accessor, true, false);
}
frame(agent.lua_state_agent, 40.0);
PostureModule::scale(agent.module_accessor);
if(0x3cfb70(-1037516665, 1.4)){
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("kneer"), 5.0, 361, 100, 0, 58, 5.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("footr"), 5.0, 361, 100, 0, 58, 5.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
}
else {
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("kneer"), 5.0, 361, 100, 0, 58, 4.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("footr"), 5.0, 361, 100, 0, 58, 4.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_DEMON_KICK, *ATTACK_REGION_KICK);
}
}
}
if macros::is_excute(agent) {
AttackModule::set_catch_only_all(agent.module_accessor, true, false);
macros::CHECK_FINISH_CAMERA(agent, 9, 1);
lua_bind::FighterCutInManager::set_throw_finish_zoom_rate(singletons::FighterCutInManager(), 1.3);
lua_bind::FighterCutInManager::set_throw_finish_offset(singletons::FighterCutInManager(), Vector3f{x: 5.0, y: 2.0, z: 0.0});
}
frame(agent.lua_state_agent, 42.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
let target = WorkModule::get_int64(agent.module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT);
        let target_group = WorkModule::get_int64(agent.module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP);
        let target_no = WorkModule::get_int64(agent.module_accessor, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO);
        macros::ATK_HIT_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, Hash40::new("throw"), target, target_group, target_no);
macros::CAM_ZOOM_OUT(agent);
}
}

unsafe extern "C" fn effect_throwf(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("top"), 1.5, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    }
    frame(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_ALPHA(agent, Hash40::new("demon_attack_arc_d"), Hash40::new("top"), 1.5, 13, 2.5, -20, 0, -10, 0.9, true, 0.4);
        macros::LAST_EFFECT_SET_RATE(agent, 2.2);
    }
    frame(agent.lua_state_agent, 13.0);
    if macros::is_excute(agent) {
        macros::FOOT_EFFECT(agent, Hash40::new("sys_turn_smoke"), Hash40::new("top"), 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    frame(agent.lua_state_agent, 39.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_ALPHA(agent, Hash40::new("demon_attack_arc_d_s"), Hash40::new("top"), 0.5, 12.3, 3, 25, 18, 195, 0.9, true, 1);
        macros::LAST_EFFECT_SET_RATE(agent, 1.6);
    }
    frame(agent.lua_state_agent, 40.0);
    if macros::is_excute(agent) {
        macros::LANDING_EFFECT(agent, Hash40::new("sys_dash_smoke"), Hash40::new("top"), -1.5, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    }
}

unsafe extern "C" fn sound_throwf(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 2.0);
    if FighterCutInManager::is_play_motion_camera(agent.module_accessor) {
        if macros::is_excute(agent) {
            macros::PLAY_SE(agent, Hash40::new("se_demon_throw_b01"));
        }
        else {
        if macros::is_excute(agent) {
            macros::PLAY_SE(agent, Hash40::new("se_demon_throw_b01_low"));
        }
    }
}
frame(agent.lua_state_agent, 10.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_swing_long01"));
    macros::PLAY_SE(agent, Hash40::new("vc_demon_attack01"));
}
frame(agent.lua_state_agent, 37.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_demon_swing_long02"));
    macros::PLAY_SE(agent, Hash40::new("vc_demon_attack03"));
}
}

unsafe extern "C" fn expression_throwf(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 4.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 3);
    }
    frame(agent.lua_state_agent, 16.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_80_attackl"), 5, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 44.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_80_attackl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 60.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 10);
    }
}