#[acmd_script( agent = "yoshi", script = "expression_escapecommon", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_escapecommon(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 3.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("body") as i64, hash40("body_egg") as i64);
        HIT_NODE(agent, Hash40::new("hip"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("bust"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("head"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("snout"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("armr"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("arml"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("legr"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("legl"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("kneer"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("kneel"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("toer"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("toel"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("tail2"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("rot"), *HIT_STATUS_NORMAL);
    }
    frame(lua_state, 19.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("body") as i64, hash40("body_normal") as i64);
        HIT_NODE(agent, Hash40::new("hip"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("bust"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("head"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("snout"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("armr"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("arml"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("legr"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("legl"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("kneer"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("kneel"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("toer"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("toel"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("tail2"), *HIT_STATUS_NORMAL);
        HIT_NODE(agent, Hash40::new("rot"), *HIT_STATUS_OFF);
    }
    for _ in 0..6 {
    wait(lua_state, 3.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("body") as i64, hash40("body_egg") as i64);
        HIT_NODE(agent, Hash40::new("hip"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("bust"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("head"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("snout"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("armr"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("arml"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("legr"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("legl"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("kneer"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("kneel"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("toer"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("toel"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("tail2"), *HIT_STATUS_OFF);
        HIT_NODE(agent, Hash40::new("rot"), *HIT_STATUS_NORMAL);
    }
    wait(lua_state, 2.0);
}
}