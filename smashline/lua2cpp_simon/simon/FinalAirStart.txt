unsafe extern "C" fn game_finalairstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 4, 50);
    }
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(agent.lua_state_agent, 5.0);
        if macros::is_excute(agent) {
            SlowModule::set_whole(agent.module_accessor, 2, 0);
            macros::FT_SET_FINAL_FEAR_FACE(agent, 40);
        }
    }
    if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if macros::is_excute(agent) {
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart02.nuanmb"), false, false);
        }
        else{
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 5, 0);
            0x11a2c0(-1038318849, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
        }
        else{
        if macros::is_excute(agent) {
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), false, false);
        }
        if macros::is_excute(agent) {
            macros::FT_START_CUTIN(agent);
        }
    }
}
}
frame(agent.lua_state_agent, 29.0);
if macros::is_excute(agent) {
SlowModule::clear_whole(agent.module_accessor);
}
frame(agent.lua_state_agent, 30.0);
if macros::is_excute(agent) {
ArticleModule::set_visibility_whole(agent.module_accessor, *FIGHTER_SIMON_GENERATE_ARTICLE_COFFIN, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
macros::CAM_ZOOM_OUT(agent);
}
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 3.0, 80, 100, 80, 0, 22.0, 0.0, 7.0, 30.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 3.0, 80, 100, 80, 0, 10.0, 0.0, 7.0, 15.0, Some(0.0), Some(11.0), Some(15.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
}
wait(agent.lua_state_agent, 15.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
wait(agent.lua_state_agent, 1.0);
WorkModule::is_flag(agent.module_accessor, *FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_FINAL_HIT);
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
if macros::is_excute(agent) {
WorkModule::on_flag(agent.module_accessor, *FIGHTER_SIMON_STATUS_FINAL_WORK_ID_FLAG_START_COFFIN_ROT_Y);
}
}

unsafe extern "C" fn effect_finalairstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_simon_final"), false, false, false);
    }
    frame(agent.lua_state_agent, 60.0);
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_FINAL_HIT);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if macros::is_excute(agent) {
        EffectModule::remove_screen(agent.module_accessor, Hash40::new("bg_simon_final"), -1);
    }
}

unsafe extern "C" fn sound_finalairstart(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_simon_final01"));
    }
    frame(agent.lua_state_agent, 30.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_simon_final01"));
    }
}

unsafe extern "C" fn expression_finalairstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    frame(agent.lua_state_agent, 27.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 35.0);
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_SIMON_INSTANCE_WORK_ID_FLAG_FINAL_HIT);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attack_critical"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        else{
        wait(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitl"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        wait(agent.lua_state_agent, 20.0);
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitl"), 14, true, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        wait(agent.lua_state_agent, 15.0);
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitl"), 9, true, *BATTLE_OBJECT_ID_INVALID as u32);
        }
        wait(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_31_cypher"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
        }
    }
}
}