WorkModule::is_flag(60180)
0x3a08f0(false, true)
0x3a08f0()
0x3a08f0()
if(0x3a08f0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3a08f0()){
		ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=19.0, Angle=45, KBG=70, FKB=0, BKB=48, Size=0.7, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		0x3a08f0()
		AttackModule::enable_safe_pos()
		AttackModule::disable_tip()
		AttackModule::set_damage_shake_scale(0.5)
		0x3a08f0()
	}
}
frame(Frame=1)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=19.0, Angle=45, KBG=70, FKB=0, BKB=48, Size=3.7, X=-1.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	methodlib::L2CValue::as_hash()const(0x123a5b1b8e, 24, false)
	ControlModule::set_rumble()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=4)
0x3a08f0()
0x3a08f0()
WorkModule::is_flag(54344)
0x3a08f0(false, true)
0x3a08f0()
0x3a08f0()
if(0x3a08f0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x3a08f0()){
		AttackModule::clear_all()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x3a08f0()){
			ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=19.0, Angle=45, KBG=77, FKB=0, BKB=48, Size=0.7, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			AttackModule::enable_safe_pos()
			AttackModule::disable_tip()
			AttackModule::set_damage_shake_scale(0.5)
			0x3a08f0()
		}
		frame(Frame=1)
		0x3a08f0()
		0x3a08f0()
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x3a08f0()){
			ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=19.0, Angle=45, KBG=77, FKB=0, BKB=48, Size=3.7, X=-1.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
			methodlib::L2CValue::as_hash()const(0x123a5b1b8e, 24, false)
			ControlModule::set_rumble()
			0x3a08f0()
			0x3a08f0()
			0x3a08f0()
		}
		frame(Frame=4)
		0x3a08f0()
		0x3a08f0()
		WorkModule::is_flag(54344)
		0x3a08f0(false, true)
		0x3a08f0()
		0x3a08f0()
		if(0x3a08f0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x3a08f0()){
				AttackModule::clear_all()
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x3a08f0()){
					ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=21.0, Angle=45, KBG=70, FKB=0, BKB=48, Size=3.7, X=-1.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
				}
				frame(Frame=14)
				0x3a08f0()
				0x3a08f0()
				WorkModule::is_flag(54344)
				0x3a08f0(false, true)
				0x3a08f0()
				0x3a08f0()
				if(0x3a08f0()){
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x3a08f0()){
						AttackModule::clear_all()
					}
					else{
						methodlib::L2CValue::operatorbool()const(is_excute)
						if(0x3a08f0()){
							ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=21.0, Angle=45, KBG=77, FKB=0, BKB=48, Size=3.7, X=-1.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.1, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
							0x3a08f0()
						}
						frame(Frame=16)
						0x3a08f0()
						0x3a08f0()
						WorkModule::is_flag(54344)
						0x3a08f0(false, true)
						0x3a08f0()
						0x3a08f0()
						if(0x3a08f0()){
							methodlib::L2CValue::operatorbool()const(is_excute)
							if(0x3a08f0()){
								AttackModule::clear_all()
							}
							else{
								methodlib::L2CValue::operatorbool()const(is_excute)
								if(0x3a08f0()){
									ATTACK(ID=0, Part=0, Bone=hash40("center"), Damage=19.0, Angle=45, KBG=74, FKB=0, BKB=48, Size=3.7, X=-1.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=60152, Type=ATTACK_REGION_PUNCH)
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
									0x3a08f0()
								}
								frame(Frame=23)
								0x3a08f0()
								0x3a08f0()
								methodlib::L2CValue::operatorbool()const(is_excute)
							}
						}
					}
				}
			}
		}
	}
}
if(0x3a08f0()){
	AttackModule::clear_all()
}
