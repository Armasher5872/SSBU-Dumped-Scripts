#[acmd_script( agent = "trail", script = "expression_appeallwr", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appeallwr(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 19.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 52.0);
    if ItemModule::is_have_item(agent.module_accessor, 0) {
        if macros::is_excute(agent) {
            macros::FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.03);
        }
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.1);
    }
    frame(agent.lua_state_agent, 54.0);
    if macros::is_excute(agent) {
        macros::FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.13);
    }
    frame(agent.lua_state_agent, 57.0);
    if macros::is_excute(agent) {
        macros::FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.065);
    }
    frame(agent.lua_state_agent, 58.0);
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, true, 0);
    }
    frame(agent.lua_state_agent, 62.0);
    if macros::is_excute(agent) {
        macros::FT_MOTION_INTP_WAIT_ITEM(agent, true, 0.02);
    }
}