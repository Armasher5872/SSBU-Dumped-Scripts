frame(Frame=7)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	HIT_NODE(hash40("handl"), HIT_STATUS_XLU)
	0x11a050()
	0x11a050()
	ATTACK(ID=0, Part=0, Bone=hash40("handl"), Damage=6.5, Angle=93, KBG=68, FKB=0, BKB=43, Size=5.5, X=2.9, Y=-0.5, Z=-0.1, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PUNCH)
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	ATTACK(ID=1, Part=0, Bone=hash40("shoulderl"), Damage=6.5, Angle=93, KBG=68, FKB=0, BKB=43, Size=3.2, X=0.6, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PUNCH)
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
	0x11a050()
}
wait(Frames=4)
0x11a050()
0x11a050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	HIT_NODE(hash40("waist"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("shoulderr"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("shoulderl"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("handr"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("handl"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("legr"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("legl"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("kneer"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("kneel"), HIT_STATUS_NORMAL)
	0x11a050()
	0x11a050()
	HIT_NODE(hash40("rot"), HIT_STATUS_OFF)
	0x11a050()
	0x11a050()
}
0x11a050(0)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a050()){
	AttackModule::clear_all()
}
