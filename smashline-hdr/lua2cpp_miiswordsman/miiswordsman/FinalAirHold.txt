unsafe extern "C" fn game_finalairhold(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    frame(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 25.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -25.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -25.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 25.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    frame(lua_state, 60.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 25.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    for _ in 0..49 {
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -20.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 15.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 0.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, 10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -5.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::set_float(boma, -10.0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(boma, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE, false, -1);
    }
    wait(lua_state, 4.0);
}
}

unsafe extern "C" fn effect_finalairhold(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("miiswordsman_final_flash"), false, true);
        EFFECT_FOLLOW_WORK(agent, *FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_ID_SWORD_FLARE, Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, true);
        LAST_EFFECT_SET_COLOR(agent, 0.3, 1.1, 3);
        AFTER_IMAGE4_ON_WORK_arg29(*FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_TEX_SWORD, *FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_TEX_SWORD_ADD, 3, Hash40::new("haver"), 0, 0.2, 0, Hash40::new("haver"), -0.0, 10.8, 0, true, *FIGHTER_MIISWORDSMAN_INSTANCE_WORK_ID_INT_EFT_ID_SWORD_FLARE, Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("miiswordsman_final_flash"), Hash40::new("top"), 0, 10, 17, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_finalairhold(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_miiswordsman_final01"));
        PLAY_SE(agent, Hash40::new("vc_mii_final_swordsman"));
    }
    frame(lua_state, 173.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_miiswordsman_final03"));
    }
}

unsafe extern "C" fn expression_finalairhold(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
    }
    frame(lua_state, 4.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_spinslash"), 220, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}