unsafe extern "C" fn game_specialairsshoot(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    FT_MOTION_RATE(agent, 0.75);
    if is_excute(agent) {
        FighterAreaModuleImpl::enable_fix_jostle_area(boma, 10.0, 3.0);
    }
    frame(lua_state, 2.0);
    WorkModule::is_flag(boma, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_FAILURE);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        if is_excute(agent) {
            ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 18, 100, 30, 0, 5.0, 0.0, 7.0, 7.0, Some(0.0), Some(7.0), Some(10.0), 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, true, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        }
    }
    frame(lua_state, 10.0);
    WorkModule::is_flag(boma, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_FAILURE);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        if is_excute(agent) {
            ArticleModule::generate_article(boma, *FIGHTER_PACKUN_GENERATE_ARTICLE_POISONBREATH, false, -1);
        }
    }
    frame(lua_state, 21.0);
    FT_MOTION_RATE(agent, 0.9);
    if is_excute(agent) {
        FighterAreaModuleImpl::enable_fix_jostle_area(boma, 5.0, 5.0);
        AttackModule::clear_all(boma);
    }
    wait(lua_state, 10.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_CHANGE_KINETIC);
    }
    frame(lua_state, 20.0);
    FT_MOTION_RATE(agent, 0.55);
}

unsafe extern "C" fn effect_specialairsshoot(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 6.0);
    WorkModule::is_flag(boma, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_FAILURE);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if is_excute(agent) {
            EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("packun_poison_breath2"), Hash40::new("mouth"), 5, -0.6, 0, 0, 90, -100, 1.2, true);
        }
        else{
        if is_excute(agent) {
            EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("packun_poison_breath"), Hash40::new("mouth"), 5, -0.6, 0, 0, 90, -100, 1.1, true);
            LAST_EFFECT_SET_RATE(agent, 1.6);
        }
    }
}
frame(lua_state, 25.0);
if is_excute(agent) {
    EFFECT_DETACH_KIND(agent, Hash40::new("packun_poison_breath"), -1);
}
frame(lua_state, 29.0);
WorkModule::is_flag(boma, *FIGHTER_PACKUN_STATUS_SPECIAL_S_FLAG_FAILURE);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
    if is_excute(agent) {
        EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("packun_poison_mouth2"), Hash40::new("mouth"), 6, -1.5, 0, 0, 90, -130, 1, true);
    }
    else{
    if is_excute(agent) {
        EFFECT_FOLLOW_NO_SCALE(agent, Hash40::new("packun_poison_mouth"), Hash40::new("mouth"), 4, -2, 0, 0, 90, -125, 1, true);
    }
}
}
}

unsafe extern "C" fn sound_specialairsshoot(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_packun_special_s03"));
    }
}

unsafe extern "C" fn expression_specialairsshoot(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attacks"), 2, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attacks"), 2, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attacks"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}