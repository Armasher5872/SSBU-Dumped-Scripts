frame(Frame=6)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	ATTACK(ID=0, Part=0, Bone=hash40("neck"), Damage=8.0, Angle=70, KBG=100, FKB=0, BKB=60, Size=4.6, X=3.0, Y=-1.5, Z=1.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_HEAD)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	ATTACK(ID=1, Part=0, Bone=hash40("hip"), Damage=8.0, Angle=70, KBG=100, FKB=0, BKB=60, Size=3.0, X=0.7, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_HEAD)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=10)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	ATTACK(ID=0, Part=0, Bone=hash40("neck"), Damage=6.0, Angle=70, KBG=80, FKB=0, BKB=60, Size=3.0, X=3.0, Y=-1.5, Z=1.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_HEAD)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	ATTACK(ID=1, Part=0, Bone=hash40("hip"), Damage=6.0, Angle=70, KBG=80, FKB=0, BKB=60, Size=2.5, X=0.7, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_HEAD)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=16)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	AttackModule::clear_all()
}
