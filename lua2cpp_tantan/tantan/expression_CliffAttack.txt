methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	ItemModule::set_have_item_visibility(false)
	0x3a08f0()
	methodlib::L2CValue::as_hash()const(hash40("sword1"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_X, ATTACK_DIRECTION_Y_MINUS)
	AttackModule::set_attack_reference_joint_id()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=22)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 0, false)
	ControlModule::set_rumble()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=24)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	RUMBLE_HIT(hash40("rbkind_attackm"), 0)
	0x3a08f0()
	0x3a08f0()
}
frame(Frame=31)
0x3a08f0()
0x3a08f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3a08f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 8)
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
	0x3a08f0()
}
