frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
macros::FT_DISABLE_CURRY_FACE(fighter, true);
methodlib::L2CValue::as_hash()const(Hash40::new("top"), *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_X);
AttackModule::set_attack_reference_joint_id(fighter.module_accessor);
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 6, true);
}frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 9, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 9);
}frame(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
ItemModule::set_have_item_visibility(fighter.module_accessor, false);
ItemModule::set_attach_item_visibility(fighter.module_accessor, false);
}frame(fighter.lua_state_agent, 15.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 9, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 9, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 35.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 9, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 45.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 48.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
}frame(fighter.lua_state_agent, 53.0);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
}