unsafe extern "C" fn effect_visualscene02(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 10.0);
    if is_excute(agent) {
        methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 500, 500, 0, 1500, 300, false);
        methodlib::L2CValue::as_hash()const();
        EffectModule::request_post_effect_line_circle(boma);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 500, 500, 0, 1500, 300, false);
        methodlib::L2CValue::as_hash()const();
        EffectModule::request_post_effect_line_circle(boma);
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("krool_final_charge_a"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 500, 500, 0, 1500, 300, false);
        methodlib::L2CValue::as_hash()const();
        EffectModule::request_post_effect_line_circle(boma);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        EffectModule::remove_post_effect_line(boma, 10, true);
    }
}

unsafe extern "C" fn sound_visualscene02(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_krool_amb02"));
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_krool_final05"));
    }
    frame(lua_state, 35.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_krool_amb03"));
    }
}

unsafe extern "C" fn expression_visualscene02(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 28.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_elecattacks"), 35, true, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(agent, Hash40::new("rbkind_elecattacks"), 35);
    }
}