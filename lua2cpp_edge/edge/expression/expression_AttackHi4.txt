methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
frame(Frame=13)
0x2490c0()
0x2490c0()
execute(13)
0x2490c0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	methodlib::L2CValue::as_hash()const(hash40("top"), ATTACK_DIRECTION_Y, ATTACK_DIRECTION_Z_MINUS, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	0x2490c0()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
frame(Frame=15)
0x2490c0()
0x2490c0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	RUMBLE_HIT(0x0faf325b53, 36)
	0x2490c0()
	0x2490c0()
}
frame(Frame=27)
0x2490c0()
0x2490c0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x2490c0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl_l"), 9, false)
	ControlModule::set_rumble()
	0x2490c0()
	0x2490c0()
	0x2490c0()
}
