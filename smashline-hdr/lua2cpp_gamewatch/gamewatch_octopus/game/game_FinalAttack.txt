#[acmd_script( agent = "gamewatch_octopus", script = "game_finalattack", category = ACMD_GAME, low_priority )]
unsafe fn game_finalattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    FT_MOTION_RATE(agent, 2.5);
    frame(lua_state, 1.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("roty"), 15.0, 15, 100, 150, 10, 15.0, 0.0, 7.0, 6.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
        ATTACK(agent, 1, 0, Hash40::new("roty"), 15.0, 40, 30, 0, 90, 17.0, 0.0, 6.0, -17.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
        AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
        AttackModule::set_final_finish_cut_in(boma, 1, true, true, -1, false);
        CATCH(agent, 0, Hash40::new("lega"), 8.0, 0.0, 0.0, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_PULLED_OCTOPUS, *COLLISION_SITUATION_MASK_GA);
        CATCH(agent, 1, Hash40::new("legb"), 8.0, 0.0, 0.0, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_PULLED_OCTOPUS, *COLLISION_SITUATION_MASK_GA);
        CATCH(agent, 2, Hash40::new("legc"), 8.0, 0.0, 0.0, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_PULLED_OCTOPUS, *COLLISION_SITUATION_MASK_GA);
        CATCH(agent, 3, Hash40::new("legd"), 8.0, 0.0, 0.0, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_PULLED_OCTOPUS, *COLLISION_SITUATION_MASK_GA);
        ATTACK_ABS(agent, *WEAPON_GAMEWATCH_OCTOPUS_ATTACK_ABSOLUTE_KIND_LEG, 0, 30.0, 0, 40, 0, 80, 0.0, 1.0, *ATTACK_LR_CHECK_LEFT, 1.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
        AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, true);
        WorkModule::set_int(boma, *WEAPON_GAMEWATCH_OCTOPUS_LEG_A_PATTERN_1, *WEAPON_GAMEWATCH_OCTOPUS_STATUS_WORK_INT_CATCH_PATTERN_LEG_A);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 48.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 69.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 75.0);
    if is_excute(agent) {
        WorkModule::set_int(boma, *WEAPON_GAMEWATCH_OCTOPUS_LEG_A_PATTERN_2, *WEAPON_GAMEWATCH_OCTOPUS_STATUS_WORK_INT_CATCH_PATTERN_LEG_A);
    }
    frame(lua_state, 90.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 110.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 4, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}