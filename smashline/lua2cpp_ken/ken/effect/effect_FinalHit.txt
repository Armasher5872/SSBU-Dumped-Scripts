#[acmd_script( agent = "ken", script = "effect_finalhit" , category = ACMD_EFFECT , low_priority)]
unsafe fn effect_finalhit(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		EffectModule::remove_post_effect_line(fighter.module_accessor, 4, true);
	}
	get_value_float(*SO_VAR_FLOAT_LR);
	if(0x16e550(0, 0)){;
		if macros::is_excute(fighter) {
			macros::EFFECT_FOLLOW(fighter, Hash40::new("ken_final_shippu_wind_l"), Hash40::new("rot"), 0, -1, 0.5, -22, 21, -30, 1.2, true);
		}
		else{;
		if macros::is_excute(fighter) {
			macros::EFFECT_FOLLOW(fighter, Hash40::new("ken_final_shippu_wind_r"), Hash40::new("rot"), 0, -1, 0.5, -22, 21, 0, 1.2, true);
			EffectModule::set_disable_render_offset_last(fighter.module_accessor);
		}
	}
}
frame(fighter.lua_state_agent, 65.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("footl"), 10, 10, 7, 0, 0, true);
	methodlib::L2CValue::as_hash()const();
	EffectModule::request_post_effect_line_circle(fighter.module_accessor);
}
frame(0, 66);
if macros::is_excute(fighter) {
	EffectModule::remove_post_effect_line(fighter.module_accessor, 4, true);
}
frame(fighter.lua_state_agent, 68.0);
if macros::is_excute(fighter) {
	macros::EFFECT_OFF_KIND(fighter, Hash40::new("ken_final_shippu_wind_r"), false, true);
	macros::EFFECT_OFF_KIND(fighter, Hash40::new("ken_final_shippu_wind_l"), false, true);
}
