unsafe extern "C" fn game_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        MotionModule::set_rate(boma, 12);
    }
    frame(lua_state, 36.0);
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
        ATTACK(agent, 0, 0, Hash40::new("body"), 10.0, 90, 100, 100, 0, 20.0, 0.0, -15.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
        ATTACK(agent, 1, 0, Hash40::new("body"), 10.0, 270, 100, 868, 0, 20.0, 0.0, -15.0, 0.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_bury"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
        AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
        AttackModule::set_final_finish_cut_in(boma, 1, true, true, -1, false);
        MotionModule::set_rate(boma, 1);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        MotionModule::set_rate(boma, 0.2);
    }
    frame(lua_state, 45.0);
    if is_excute(agent) {
        MotionModule::set_rate(boma, 1);
    }
}

unsafe extern "C" fn effect_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_pikmin_final"), false, false, false);
    }
    frame(lua_state, 37.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("pikmin_final_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("pikmin_final_exhaust"), Hash40::new("exhaust1"), 4, -6, 4, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("pikmin_final_exhaust"), Hash40::new("exhaust2"), 4, -6, 4, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pikmin_step_right_ll"));
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pikmin_step_left_ll"));
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pikmin_step_right_ll"));
    }
    frame(lua_state, 42.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pikmin_step_left_ll"));
    }
}