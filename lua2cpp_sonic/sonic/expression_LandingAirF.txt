methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=3)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_lands"), 0, false)
	ControlModule::set_rumble()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=9)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 8)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=20)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_L, 3)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=22)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
