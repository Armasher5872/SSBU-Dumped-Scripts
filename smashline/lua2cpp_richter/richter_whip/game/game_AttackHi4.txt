#[acmd_script( agent = "richter_whip", script = "game_attackhi4", category = ACMD_GAME, low_priority )]
unsafe fn game_attackhi4(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        PhysicsModule::set_2nd_status(agent.module_accessor, *PH2NDARY_CRAW_NONE);
    }
    macros::FT_MOTION_RATE(agent, 0.2);
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        PhysicsModule::set_2nd_status(agent.module_accessor, *PH2NDARY_CRAW_MOVE);
        battle_object();
        methodlib::L2CValue::L2CValue(void*)();
    }
    else{
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
let object = sv_system::battle_object(agent.lua_state_agent) as *mut BattleObject;
FighterSpecializer_Simon::reset_node_fix_flag_list(object as *mut Fighter);
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(4, 5, 10, 11);
set_node_fix_flag_list();
frame(agent.lua_state_agent, 5.0);
macros::FT_MOTION_RATE(agent, 1.0);
frame(agent.lua_state_agent, 13.0);
macros::FT_MOTION_RATE(agent, 0.5);
frame(agent.lua_state_agent, 19.0);
if macros::is_excute(agent) {
    PhysicsModule::set_2nd_status(agent.module_accessor, *PH2NDARY_CRAW_NONE);
    battle_object();
    methodlib::L2CValue::L2CValue(void*)();
}
else{
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
let object = sv_system::battle_object(agent.lua_state_agent) as *mut BattleObject;
FighterSpecializer_Simon::reset_node_fix_flag_list(object as *mut Fighter);
frame(agent.lua_state_agent, 21.0);
macros::FT_MOTION_RATE(agent, 1.0);
if macros::is_excute(agent) {
PhysicsModule::set_2nd_status(agent.module_accessor, *PH2NDARY_CRAW_COLLIDE);
}
frame(agent.lua_state_agent, 52.0);
if macros::is_excute(agent) {
PhysicsModule::set_2nd_status(agent.module_accessor, *PH2NDARY_CRAW_NONE);
}
}