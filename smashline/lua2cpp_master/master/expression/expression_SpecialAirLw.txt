#[acmd_script( agent = "master", script = "expression_specialairlw", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialairlw(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(fighter.module_accessor, false);
        WorkModule::on_flag(fighter.module_accessor, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
        ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_75_hold_largestart"), 18, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(fighter.lua_state_agent, 19.0);
    for _ in 0..7 {
    if macros::is_excute(fighter) {
        ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_75_hold_large"), 3, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(fighter.lua_state_agent, 3.0);
}
frame(fighter.lua_state_agent, 60.0);
if macros::is_excute(fighter) {
    ControlModule::set_rumble(fighter.module_accessor, Hash40::new("rbkind_nohit_attacks"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(fighter.lua_state_agent, 62.0);
if macros::is_excute(fighter) {
    macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackll"), 0);
}
frame(fighter.lua_state_agent, 67.0);
if macros::is_excute(fighter) {
    macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
}
frame(fighter.lua_state_agent, 118.0);
if macros::is_excute(fighter) {
    WorkModule::on_flag(fighter.module_accessor, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_REQ_EFFECT_AURA);
}
}