frame(Frame=8)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=9.0, Angle=38, KBG=75, FKB=0, BKB=53, Size=3.0, X=0.0, Y=3.0, Z=9.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_WATER)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=9.0, Angle=38, KBG=75, FKB=0, BKB=53, Size=3.6, X=0.0, Y=3.0, Z=12.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_WATER)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=9.0, Angle=38, KBG=75, FKB=0, BKB=53, Size=2.1, X=0.0, Y=3.4, Z=15.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_WATER)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0xe2af0()
	0xe2af0()
}
frame(Frame=9)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=9.0, Angle=38, KBG=75, FKB=0, BKB=53, Size=4.2, X=0.0, Y=3.4, Z=15.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_water"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_WATER)
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	0xe2af0()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0xe2af0()
	0xe2af0()
}
wait(Frames=5)
0xe2af0()
0xe2af0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe2af0()){
	AttackModule::clear_all()
}
