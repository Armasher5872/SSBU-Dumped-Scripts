#[acmd_script( agent = "kamui", script = "expression_finalvisualscene02", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_finalvisualscene02(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    frame(lua_state, 1.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_spinattack"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_spinattack"), 0);
    }
    frame(lua_state, 70.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_erase"), 0);
    }
    frame(lua_state, 75.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_shieldbreak"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_shieldbreak"), 0);
    }
    frame(lua_state, 136.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_attackll"), 0);
    }
    frame(lua_state, 186.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_beaml"), 22, true, *BATTLE_OBJECT_ID_INVALID as u32);
        RUMBLE_FINAL_TARGET(fighter, Hash40::new("rbkind_beaml"), 22);
    }
}