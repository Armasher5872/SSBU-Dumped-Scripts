frame(Frame=17)
for(6 Iterations){
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT(0x1bb4fe2ac9, hash40("top"), 0, 17, 0, 0, 0, 0, 1.2, 45, 45, 45, 0, 0, 0, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		BURN_COLOR(0.1, 1, 2, 0.7)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	wait(Frames=2)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT(0x1bb4fe2ac9, hash40("top"), 0, 27, -10, 0, 0, 0, 1.3, 40, 40, 40, 0, 0, 0, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		BURN_COLOR_FRAME(5, 0.1, 1, 2, 0)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	wait(Frames=1)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT(0x1bb4fe2ac9, hash40("top"), 0, 37, -5, 0, 0, 0, 1.2, 40, 40, 40, 0, 0, 0, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		BURN_COLOR_NORMAL()
	}
	wait(Frames=1)
	0xffdb0()
	0xffdb0()
}
frame(Frame=25)
for(10 Iterations){
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT_FOLLOW(0x17ee5d2f6a, hash40("havel"), 0, 0, 0, 0, 0, 0, 1, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		EFFECT_FOLLOW(0x17ee5d2f6a, hash40("haver"), 0, 0.1, -0.2, 0, 0, 0, 1, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=45)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		AFTER_IMAGE4_ON_arg29(0x16b2253b90, 0x162b2c6a2a, 5, hash40("havel"), 0, 1, 0, hash40("havel"), 0, 48, 0, true, hash40("null"), hash40("haver"), 0, 0, 0, 0, 0, 0, 1, 0, EFFECT_AXIS_X, 0, TRAIL_BLEND_ALPHA, 101, TRAIL_CULL_NONE, 1.4, 0.1)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		AFTER_IMAGE4_ON_arg29(0x16b2253b90, 0x162b2c6a2a, 5, hash40("haver"), 0, 1, 0, hash40("haver"), 0, 48, 0, true, hash40("null"), hash40("haver"), 0, 0, 0, 0, 0, 0, 1, 0, EFFECT_AXIS_X, 0, TRAIL_BLEND_ALPHA, 101, TRAIL_CULL_NONE, 1.4, 0.1)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=50)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT(0x0f83b10283, hash40("top"), 0, 16, 28, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=51)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), 5, 0, 17, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 0, false)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=53)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		LANDING_EFFECT(hash40("sys_action_smoke_h"), hash40("top"), -5, 0, 0, 0, 0, 0, 1.7, 0, 0, 0, 0, 0, 0, false)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=55)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		LANDING_EFFECT(hash40("sys_down_smoke"), hash40("top"), 45, 0, 0, 0, 0, 0, 2.2, 0, 0, 0, 0, 0, 0, false)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		LAST_EFFECT_SET_ALPHA(0.5)
		0xffdb0()
		LAST_EFFECT_SET_RATE(0.8)
		0xffdb0()
	}
	frame(Frame=56)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT(hash40("sys_shield_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		LAST_EFFECT_SET_ALPHA(0.3)
		0xffdb0()
		LAST_EFFECT_SET_RATE(0.4)
		0xffdb0()
		AFTER_IMAGE_OFF(10)
		0xffdb0()
	}
	frame(Frame=70)
	0xffdb0()
	0xffdb0()
	get_value_float(SO_VAR_FLOAT_LR)
	methodlib::L2CValue::operator<(lib::L2CValueconst&)const(97478068832, 0)
	0xffdb0()
	0xffdb0()
	if(0xffdb0()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0xffdb0()){
			EFFECT_FOLLOW(0x0f413911cf, hash40("eye_l"), 0, 0, 0, 0, 0, 0, 1, true)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0xffdb0()){
				EFFECT_FOLLOW(0x0f413911cf, hash40("eye_r"), 0, 0, 0, 0, 0, 0, 1, true)
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
				0xffdb0()
			}
		}
	}
	frame(Frame=85)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		BURN_COLOR(1.5, 0.5, 2, 0)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		EFFECT_FOLLOW(0x123f6f34c8, hash40("top"), 0, 17, 25, 0, 0, 0, 1, false)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=90)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		EFFECT_OFF_KIND(hash40("sys_shield_smoke"), false, true)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		BURN_COLOR_FRAME(5, 1.5, 0.5, 2, 0.5)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=104)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		LANDING_EFFECT(hash40("sys_atk_smoke"), hash40("top"), 5, 0, 17, 0, 0, 0, 1.4, 0, 0, 0, 0, 0, 0, false)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	frame(Frame=105)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		LANDING_EFFECT(hash40("sys_h_smoke_b"), hash40("top"), 0, 0, 0, 0, 0, 0, 1.7, 0, 0, 0, 0, 0, 0, false)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		BURN_COLOR(1.5, 0.5, 2, 0.5)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	wait(Frames=2)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		BURN_COLOR_FRAME(5, 1.5, 0.5, 2, 0)
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
		0xffdb0()
	}
	wait(Frames=1)
	0xffdb0()
	0xffdb0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xffdb0()){
		BURN_COLOR_NORMAL()
	}
	wait(Frames=1)
	0xffdb0()
	0xffdb0()
}
