#[acmd_script( agent = "master", script = "expression_throwb" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_throwb(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        WorkModule::on_flag(boma, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
    }
    frame(lua_state, 15.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_75_turn_small"), 13, false);
        ControlModule::set_rumble(boma);
    }
    frame(lua_state, 29.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attackm"), 6, false);
        ControlModule::set_rumble(boma);
    }
}