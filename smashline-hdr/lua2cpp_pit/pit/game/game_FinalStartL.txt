#[acmd_script( agent = "pit", script = "game_finalstartl", category = ACMD_GAME, low_priority )]
unsafe fn game_finalstartl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 30, 0, 0, 0);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 60);
        }
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstartl.nuanmb"), false);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 4, 0);
            0x111840(615595550, 0.8);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
        }
        if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if is_excute(agent) {
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, -30, 80, 30, -30);
            }
            else{
            if is_excute(agent) {
                REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstartr.nuanmb"), false);
            }
            if is_excute(agent) {
                FT_START_CUTIN(agent);
            }
            else{
            if is_excute(agent) {
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 80, -30, 30, -30);
            }
        }
    }
}
}
}
frame(lua_state, 36.0);
if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
if is_excute(agent) {
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, -30, 80, 30, -30);
}
else{
if is_excute(agent) {
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 80, -30, 30, -30);
}
}
}
}
if is_excute(agent) {
CAM_ZOOM_OUT(agent);
WorkModule::on_flag(boma, *FIGHTER_PIT_STATUS_FINAL_FLAG_CHANGE_AIR);
}
}