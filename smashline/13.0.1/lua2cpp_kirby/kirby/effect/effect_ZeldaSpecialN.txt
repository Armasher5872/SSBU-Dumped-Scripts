frame(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
	macros::EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_flash"), Hash40::new("havel"), 0, 0, 0, -0.0, 0.0, 0.0, 1, true);
	EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
	macros::EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_flash"), Hash40::new("haver"), 0, 0, 0, 0.0, 0.0, 0.0, 1, true);
	EffectModule::enable_sync_init_pos_last(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 5.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x543c60(75024123446, 0)){;
	if macros::is_excute(fighter) {
		macros::EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), -3.5, 13, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
	else{;
	if macros::is_excute(fighter) {
		macros::EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("top"), 3.5, 13, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
	}
}
}
frame(fighter.lua_state_agent, 8.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x543c60(75024123766, 0)){;
if macros::is_excute(fighter) {
	macros::EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_l"), Hash40::new("top"), 0, 6.5, 0, 0, 0, 0, 1.1, true);
}
else{;
if macros::is_excute(fighter) {
	macros::EFFECT_FOLLOW(fighter, Hash40::new("zelda_nayru_r"), Hash40::new("top"), 0, 6.5, 0, 0, 0, 0, 1.1, true);
}
}
}
frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
macros::EFFECT(fighter, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -5, 0, 0, 0, 0, 0, 0.9, 0, 0, 0, 0, 0, 0, false);
}
frame(fighter.lua_state_agent, 12.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(0x543c60(75024123926, 0)){;
if macros::is_excute(fighter) {
macros::LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_r"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
else{;
if macros::is_excute(fighter) {
macros::LANDING_EFFECT(fighter, Hash40::new("sys_whirlwind_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
}
}
for(6 Iterations){;
wait(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
macros::COL_NORMAL(fighter);
}
wait(fighter.lua_state_agent, 2.0);
}
