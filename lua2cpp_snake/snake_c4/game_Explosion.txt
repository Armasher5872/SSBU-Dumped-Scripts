methodlib::L2CValue::operatorbool()const(is_excute)
if(0x114290()){
	ATTACK(ID=0, Part=0, Bone=hash40("rot"), Damage=17.0, Angle=80, KBG=90, FKB=0, BKB=40, Size=3.0, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=true, Flinchless=false, DisableHitlag=false, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=true, Effect=hash40("collision_attr_fire"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_BOMB, Type=ATTACK_REGION_BOMB)
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	0x114290()
	VisibilityModule::set_whole(false)
	0x114290()
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x114290()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x114290()
	0x114290()
	0x114290()
}
frame(Frame=1)
0x114290()
0x114290()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x114290()){
	AttackModule::set_size(ID=0, Size=17)
	0x114290()
	0x114290()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosion"), 0, false)
	ControlModule::set_rumble()
	0x114290()
	0x114290()
	0x114290()
}
frame(Frame=2)
0x114290()
0x114290()
WorkModule::is_flag(WEAPON_SNAKE_C4_INSTANCE_WORK_ID_FLAG_GROUND)
0x114290(false, false)
0x114290()
0x114290()
if(0x114290()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x114290()){
		AttackModule::clear_all()
	}
}
frame(Frame=3)
0x114290()
0x114290()
WorkModule::is_flag(WEAPON_SNAKE_C4_INSTANCE_WORK_ID_FLAG_GROUND)
0x114290(false, true)
0x114290()
0x114290()
if(0x114290()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x114290()){
		AttackModule::clear_all()
	}
}
