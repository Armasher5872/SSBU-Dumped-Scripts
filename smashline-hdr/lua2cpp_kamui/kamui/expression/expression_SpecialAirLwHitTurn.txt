#[acmd_script( agent = "kamui", script = "expression_specialairlwhitturn", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialairlwhitturn(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_counter"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        VisibilityModule::set_int64(boma, Hash40::new("dragon"), Hash40::new("dragon_horn"));
        VisibilityModule::set_int64(boma, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
        VisibilityModule::set_int64(boma, Hash40::new("hair"), Hash40::new("hair_hide"));
    }
    frame(lua_state, 26.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_L);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_explosionm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 46.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("hair"), Hash40::new("hair_normal"));
    }
    frame(lua_state, 47.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
    }
    frame(lua_state, 50.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("dragon"), Hash40::new("dragon_none"));
    }
}