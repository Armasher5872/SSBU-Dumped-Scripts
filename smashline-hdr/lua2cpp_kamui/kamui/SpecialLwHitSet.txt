unsafe extern "C" fn effect_speciallwhit_set(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if is_excute(agent) {
        EFFECT_FLW_UNSYNC_VIS(agent, Hash40::new("kamui_transform_dragon"), Hash40::new("waist"), 0, 0, 0, 0, 0, 0, 0.8, true);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if is_excute(agent) {
        EFFECT_FLW_UNSYNC_VIS(agent, Hash40::new("kamui_transform_dragon"), Hash40::new("handr"), 0, 0, 0, 180, 0, 0, 0.5, true);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if is_excute(agent) {
        EFFECT_FLW_UNSYNC_VIS(agent, Hash40::new("kamui_transform_dragon"), Hash40::new("handl"), 0, 0, 0, 0, 0, 0, 0.5, true);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if is_excute(agent) {
        EFFECT_FLW_UNSYNC_VIS(agent, Hash40::new("kamui_transform_dragon"), Hash40::new("toer"), 0, -2, 0, 0, 0, 90, 0.6, true);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true);
    if is_excute(agent) {
        EFFECT_FLW_UNSYNC_VIS(agent, Hash40::new("kamui_transform_dragon"), Hash40::new("toel"), 0, -2, 0, 0, 0, 90, 0.6, true);
    }
}