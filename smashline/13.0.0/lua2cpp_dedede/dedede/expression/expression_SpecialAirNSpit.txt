if is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
}if is_excute(fighter) {
VisibilityModule::set_int64(boma, Hash40::new("body"), Hash40::new("body_swell"));
HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_OFF);
HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("virtualwaist"), *HIT_STATUS_NORMAL);
}frame(0, 6);
if is_excute(fighter) {
VisibilityModule::set_int64(boma, Hash40::new("body"), Hash40::new("body_normal"));
HIT_NODE(fighter, Hash40::new("footr"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("footl"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("waist"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("head"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("shoulderr"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("shoulderl"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("armr"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("arml"), *HIT_STATUS_NORMAL);
HIT_NODE(fighter, Hash40::new("virtualwaist"), *HIT_STATUS_OFF);
}if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_beams"), 0, false);
ControlModule::set_rumble(boma, 0);
}