unsafe extern "C" fn game_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    FT_MOTION_RATE(agent, 0.6);
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 5, 90);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 70);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04finalstart.nuanmb"), true, false);
            FT_START_CUTIN(agent);
        }
        else {
        if is_excute(agent) {
            PostureModule::scale(boma, 3, 0);
            0x11a0d0(-2004456512, 2.7);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 15);
        }
    }
}
frame(lua_state, 40.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 100.0);
FT_MOTION_RATE(agent, 1.0);
if is_excute(agent) {
    WorkModule::on_flag(boma, *FIGHTER_PACMAN_STATUS_FINAL_FLAG_CHANGE);
}
frame(lua_state, 101.0);
if is_excute(agent) {
    SlowModule::set_whole(boma, 5, 0);
}
frame(lua_state, 102.0);
if is_excute(agent) {
    SlowModule::clear_whole(boma);
}
frame(lua_state, 105.0);
if is_excute(agent) {
    SlowModule::set_whole(boma, 5, 0);
}
frame(lua_state, 106.0);
if is_excute(agent) {
    SlowModule::clear_whole(boma);
}
frame(lua_state, 110.0);
if is_excute(agent) {
    WorkModule::on_flag(boma, *FIGHTER_PACMAN_STATUS_FINAL_FLAG_START_MOVE);
}
}

unsafe extern "C" fn effect_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_pacman_final"), false, false, false);
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("finpacman_change_start"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 1.5);
        EFFECT_FLW_POS(agent, Hash40::new("finpacman_change_start_flash"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, false);
        LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(lua_state, 70.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("sys_final_aura"), false, false);
    }
    frame(lua_state, 75.0);
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("finpacman_change_start_ring"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, false);
        LAST_EFFECT_SET_RATE(agent, 1.5);
    }
    frame(lua_state, 127.0);
    if is_excute(agent) {
        FT_REMOVE_FINAL_AURA(agent, true);
    }
}

unsafe extern "C" fn sound_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_pacman_final01"));
    }
}

unsafe extern "C" fn expression_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        START_INFO_FLASH_EYE(agent);
        ItemModule::set_have_item_visibility(boma, false, 0);
        VisibilityModule::set_int64(boma, hash40("final_poweresa") as i64, hash40("final_poweresa_disp") as i64);
    }
    frame(lua_state, 77.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        VisibilityModule::set_int64(boma, hash40("final_poweresa") as i64, hash40("final_poweresa_disp_off") as i64);
    }
    frame(lua_state, 88.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_warpstar"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 155.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
}