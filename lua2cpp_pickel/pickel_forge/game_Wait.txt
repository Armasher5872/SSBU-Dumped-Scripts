methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x349fc0()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=8.0, Angle=70, KBG=78, FKB=0, BKB=58, Size=6.4, X=0.0, Y=4.6, Z=0.0, X2=0.0, Y2=4.8, Z2=0.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=2, Trip=0.0, Rehit=0, Reflectable=true, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_G, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_HEAVY, Type=ATTACK_REGION_OBJECT)
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=0.0, Angle=361, KBG=0, FKB=0, BKB=0, Size=5.0, X=0.0, Y=5.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=10, Reflectable=true, Absorbable=false, Flinchless=true, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_search"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_OBJECT)
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	0x349fc0()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_HIGH, false)
	0x349fc0()
	0x349fc0()
}
frame(Frame=1)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	methodlib::L2CValue::as_hash()const(0x1778c298b0, 0, false)
	ControlModule::set_rumble()
	0x349fc0()
	0x349fc0()
	0x349fc0()
}
frame(Frame=2)
0x349fc0()
0x349fc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x349fc0()){
	AttackModule::clear(ID=0)
	0x349fc0()
	AttackModule::clear(ID=1)
	0x349fc0()
}
