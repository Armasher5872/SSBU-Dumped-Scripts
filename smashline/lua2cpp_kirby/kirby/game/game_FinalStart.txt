unsafe extern "C" fn game_finalstart(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::SLOW_OPPONENT(agent, 4, 50);
        macros::WHOLE_HIT(agent, *HIT_STATUS_XLU);
        ArticleModule::generate_article(agent.module_accessor, *FIGHTER_KIRBY_GENERATE_ARTICLE_ULTRASWORD, false, -1);
        ArticleModule::generate_article(agent.module_accessor, *FIGHTER_KIRBY_GENERATE_ARTICLE_ULTRASWORDHAT, false, -1);
        ArticleModule::change_motion(agent.module_accessor, *FIGHTER_KIRBY_GENERATE_ARTICLE_ULTRASWORD, Hash40::new("final_start"), false, -1.0);
        ArticleModule::change_motion(agent.module_accessor, *FIGHTER_KIRBY_GENERATE_ARTICLE_ULTRASWORDHAT, Hash40::new("final_start"), false, -1.0);
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 30, 0, 0, 0);
    }
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 60);
            macros::REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstart.nuanmb"), false);
            macros::FT_START_CUTIN(agent);
        }
        else{
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 5, 0);
            0x543c60(-1165490952, 1.3);
            CAM_ZOOM_IN_arg5(0, 0);
            macros::FT_START_CUTIN(agent);
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 20, 0, 0, 0);
        }
    }
}
frame(agent.lua_state_agent, 17.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 0, Hash40::new("top"), 3.0, 22, 100, 30, 0, 10.0, 0.0, 8.0, 15.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_paralyze"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(agent.module_accessor, true, false);
    AttackModule::set_catch_only_all(agent.module_accessor, true, false);
}
frame(agent.lua_state_agent, 20.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 22.0);
if macros::is_excute(agent) {
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 25, -5, 10, -5);
}
frame(agent.lua_state_agent, 54.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 0, Hash40::new("haver"), 5.0, 361, 0, 0, 70, 9.0, 0.0, 0.0, 0.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    macros::ATTACK(agent, 1, 0, Hash40::new("haver"), 5.0, 361, 0, 0, 70, 9.0, 0.0, 18.0, 0.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    macros::ATTACK(agent, 2, 0, Hash40::new("haver"), 5.0, 361, 0, 0, 70, 9.0, 0.0, 35.0, 0.0, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    macros::ATTACK(agent, 3, 0, Hash40::new("throw"), 5.0, 361, 0, 0, 70, 9.0, -4.0, 5.0, 1.5, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(agent.module_accessor, true, false);
}
frame(agent.lua_state_agent, 58.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 3, 0, Hash40::new("throw"), 5.0, 361, 0, 0, 70, 8.0, 5.0, 10.0, 1.5, None, None, None, 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(agent.module_accessor, true, false);
}
frame(agent.lua_state_agent, 61.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
}
}