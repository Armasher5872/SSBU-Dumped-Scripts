#[acmd_script( agent = "yoshi", script = "game_specialairn", category = ACMD_GAME, low_priority )]
unsafe fn game_specialairn(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    macros::FT_MOTION_RATE(agent, 1.1);
    frame(agent.lua_state_agent, 15.0);
    macros::FT_MOTION_RATE(agent, 1.0);
    frame(agent.lua_state_agent, 16.0);
    if macros::is_excute(agent) {
        GrabModule::set_rebound(agent.module_accessor, true);
    }
    frame(agent.lua_state_agent, 17.0);
    if WorkModule::get_int(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_INT_KIND) == *FIGHTER_KIND_KIRBY {
        if macros::is_excute(agent) {
            macros::CATCH(agent, 0, Hash40::new("throw"), 4.0, -0.9, -0.5, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_YOSHI, *COLLISION_SITUATION_MASK_A);
            macros::CATCH(agent, 1, Hash40::new("throw"), 3.5, -2.0, -0.5, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_YOSHI, *COLLISION_SITUATION_MASK_G);
            macros::CATCH(agent, 2, Hash40::new("top"), 5.9, 0.0, 7.0, 9.0, *FIGHTER_STATUS_KIND_CAPTURE_YOSHI, *COLLISION_SITUATION_MASK_GA);
        }
        else{
        if macros::is_excute(agent) {
            macros::CATCH(agent, 0, Hash40::new("mouth2"), 4.0, -0.9, -0.5, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_YOSHI, *COLLISION_SITUATION_MASK_A);
            macros::CATCH(agent, 1, Hash40::new("mouth2"), 3.5, -2.0, -0.5, 0.0, *FIGHTER_STATUS_KIND_CAPTURE_YOSHI, *COLLISION_SITUATION_MASK_G);
            macros::CATCH(agent, 2, Hash40::new("top"), 5.9, 0.0, 7.0, 9.0, *FIGHTER_STATUS_KIND_CAPTURE_YOSHI, *COLLISION_SITUATION_MASK_GA);
        }
    }
}
if macros::is_excute(agent) {
    macros::ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 1.0, 0, 50, 0, 70, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(agent.lua_state_agent, 18.0);
if macros::is_excute(agent) {
    grab!(agent, *MA_MSC_CMD_GRAB_CLEAR, 2);
}
frame(agent.lua_state_agent, 21.0);
if macros::is_excute(agent) {
    grab!(agent, *MA_MSC_CMD_GRAB_CLEAR_ALL);
    AttackModule::clear_all(agent.module_accessor);
    GrabModule::set_rebound(agent.module_accessor, false);
}
}