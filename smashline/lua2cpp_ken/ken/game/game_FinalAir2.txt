unsafe extern "C" fn game_finalair2(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 0, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 6, 30);
    }
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            macros::FT_START_CUTIN(agent);
            macros::FT_SET_FINAL_FEAR_FACE(agent, 40);
            macros::REQ_FINAL_START_CAMERA(agent, Hash40::new("d04final2.nuanmb"), true);
        }
        else{
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 3, 0);
            0x16e550(1760657085, 1.8);
            CAM_ZOOM_IN_arg5(0, 0);
            macros::FT_START_CUTIN(agent);
        }
        frame(agent.lua_state_agent, 28.0);
        if macros::is_excute(agent) {
            macros::CAM_ZOOM_OUT(agent);
        }
    }
}
PostureModule::scale(agent.module_accessor);
if(0x16e550(1760657085, 1.4)){
    if macros::is_excute(agent) {
        macros::ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 366, 100, 140, 0, 35.0, 0.0, 5.0, -1.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 0, 0.0, 0, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
    }
    else{
    PostureModule::scale(agent.module_accessor);
    if(0x16e550(1760657085, 0.5)){
        if macros::is_excute(agent) {
            macros::ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 366, 100, 22, 0, 35.0, 0.0, 5.0, -1.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 0, 0.0, 0, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        }
        else{
        if macros::is_excute(agent) {
            macros::ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 366, 100, 70, 0, 35.0, 0.0, 5.0, -1.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, true, 0, 0.0, 0, false, false, true, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        }
    }
}
}
}
wait(agent.lua_state_agent, 10.0);
if macros::is_excute(agent) {
AttackModule::clear(agent.module_accessor, 0, false);
}
frame(agent.lua_state_agent, 48.0);
if macros::is_excute(agent) {
SlowModule::set_whole(agent.module_accessor, 2, 0);
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
SlowModule::clear_whole(agent.module_accessor);
}
frame(agent.lua_state_agent, 52.0);
if macros::is_excute(agent) {
macros::SA_SET(agent, *SITUATION_KIND_AIR);
camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 40, -40, 20, 0);
WorkModule::on_flag(agent.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_FINAL_FLAG_ADJUST_SHINRYUKEN_POS);
}
frame(agent.lua_state_agent, 90.0);
}