unsafe extern "C" fn game_jumpaerialfront(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    FighterSpecializer_Demon::set_devil(boma, true, 10);
    frame(lua_state, 6.0);
    FighterSpecializer_Demon::set_devil(boma, true, 8);
    frame(lua_state, 7.0);
    FighterSpecializer_Demon::set_devil(boma, true, 5);
    frame(lua_state, 8.0);
    FighterSpecializer_Demon::set_devil(boma, true, 4);
    frame(lua_state, 9.0);
    FighterSpecializer_Demon::set_devil(boma, true, 3);
    frame(lua_state, 10.0);
    FighterSpecializer_Demon::set_devil(boma, true, 2);
    frame(lua_state, 27.0);
    FighterSpecializer_Demon::set_devil(boma, true, 3);
    frame(lua_state, 30.0);
    FighterSpecializer_Demon::set_devil(boma, true, 4);
    frame(lua_state, 32.0);
    FighterSpecializer_Demon::set_devil(boma, true, 5);
    frame(lua_state, 33.0);
    FighterSpecializer_Demon::set_devil(boma, true, 6);
    frame(lua_state, 34.0);
    FighterSpecializer_Demon::set_devil(boma, true, 9);
    frame(lua_state, 35.0);
    FighterSpecializer_Demon::set_devil(boma, false, 0);
}

unsafe extern "C" fn effect_jumpaerialfront(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_jump_aerial"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_sign_flash"), Hash40::new("head"), 0, 0, 0, 0, 0, 0, 1, true);
        ColorBlendModule::set_disable_camera_depth_influence(boma, true);
        FLASH(agent, 0.25, 0.08, 0.6, 0);
        FLASH_SET_DIRECTION(agent, -1, 0, 0);
        BURN_COLOR(agent, 8, 3, 36, 0);
        FLASH_FRM(agent, 2, 0.25, 0.08, 0.6, 0.4);
        BURN_COLOR_FRAME(agent, 2, 8, 3, 36, 0.4);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_start"), Hash40::new("top"), 0, 0, 1, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_start_aura"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_start_elec"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        FLASH(agent, 0.25, 0.08, 0.6, 0.4);
        BURN_COLOR(agent, 8, 3, 36, 0.4);
        FLASH_FRM(agent, 3, 0.25, 0.08, 0.6, 0);
        BURN_COLOR_FRAME(agent, 3, 8, 3, 36, 0);
    }
    frame(lua_state, 32.0);
    if is_excute(agent) {
        ColorBlendModule::set_disable_camera_depth_influence(boma, true);
        FLASH(agent, 0.097, 0.006, 0.238, 0.15);
        FLASH_SET_DIRECTION(agent, 0, 0, 0);
        BURN_COLOR(agent, 6, 0, 40, 0.045);
        FLASH_FRM(agent, 2, 0.097, 0.006, 0.238, 0.45);
        BURN_COLOR_FRAME(agent, 2, 6, 0, 40, 0.13);
    }
    frame(lua_state, 33.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_end"), Hash40::new("bust"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 35.0);
    if is_excute(agent) {
        FLASH(agent, 0.097, 0.006, 0.238, 0.45);
        BURN_COLOR(agent, 6, 0, 40, 0.13);
        FLASH_FRM(agent, 8, 0.097, 0.006, 0.238, 0);
        BURN_COLOR_FRAME(agent, 8, 6, 0, 40, 0);
    }
}

unsafe extern "C" fn sound_jumpaerialfront(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 4.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_spark"));
        SET_PLAY_INHIVIT(agent, Hash40::new("se_demon_spark"), 20);
    }
    frame(lua_state, 12.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_jump02"));
    }
    frame(lua_state, 41.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_spark_end"));
    }
}

unsafe extern "C" fn expression_jumpaerialfront(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    methodlua2cpp::L2CFighterAnimcmdExpressionCommon::expression_JumpAerialFrontRumble()();
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_80_aerial"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}