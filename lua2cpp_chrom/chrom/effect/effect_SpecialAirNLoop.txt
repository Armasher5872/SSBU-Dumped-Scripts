methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12ba60()){
	EFFECT_FOLLOW(0x147a10edd6, hash40("sword1"), 0, 0, 0, 0, 0, 0, 1, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	EFFECT_FOLLOW(0x14e319bc6c, hash40("sword1"), 0, 0, 0, 0, 0, 0, 1, true)
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 0)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x12ba60()){
			EFFECT_FOLLOW(0x1204018b5d, hash40("sword1"), 0, 0, 0, 0, 0, 0, 1, true)
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FLASH(0.392, 0, 0.941, 0.1)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
frame(Frame=35)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FLASH(0.392, 0, 0.941, 0.2)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 1)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		get_value_float(SO_VAR_FLOAT_LR)
		0x12ba60(0, 0)
		0x12ba60()
		0x12ba60()
		if(0x12ba60()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x12ba60()){
				EFFECT(0x0defe751cb, hash40("top"), 0, 0, 0, 0, 180, 0, 0.7, 0, 0, 0, 0, 0, 0, true)
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x12ba60()){
					EFFECT(0x0defe751cb, hash40("top"), 0, 0, 0, 0, 0, 0, 0.7, 0, 0, 0, 0, 0, 0, true)
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
				}
			}
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		EFFECT_FOLLOW(0x1917b0f394, hash40("sword1"), 0, 0, 1.25, 0, 0, 0, 1, true)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		LAST_EFFECT_SET_RATE(1)
		0x12ba60()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FLASH(0.392, 0, 0.941, 0.3)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
frame(Frame=35)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FLASH(0.392, 0, 0.941, 0.35)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 2)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		get_value_float(SO_VAR_FLOAT_LR)
		0x12ba60(576, 0)
		0x12ba60()
		0x12ba60()
		if(0x12ba60()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x12ba60()){
				EFFECT(0x0d98e0615d, hash40("top"), 0, 0, 0, 0, 180, 0, 0.8, 0, 0, 0, 0, 0, 0, true)
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x12ba60()){
					EFFECT(0x0d98e0615d, hash40("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true)
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
				}
			}
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		EFFECT_FOLLOW(0x1917b0f394, hash40("sword1"), 0, 0, 1.25, 0, 0, 0, 1.5, true)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		LAST_EFFECT_SET_RATE(1)
		0x12ba60()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FLASH(0.392, 0, 0.941, 0.4)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
frame(Frame=35)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FLASH(0.392, 0, 0.941, 0.45)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 3)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x12ba60()){
			FLASH(0.392, 0, 0.941, 0.5)
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
		}
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
wait_loop_sync_mot()
methodlib::L2CAgent::pop()
0x12ba60()
wait_loop_sync_mot()
for(6 Iterations){
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		EFFECT_FOLLOW(0x147a10edd6, hash40("sword1"), 0, 0, 0, 0, 0, 0, 1, true)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		EFFECT_FOLLOW(0x14e319bc6c, hash40("sword1"), 0, 0, 0, 0, 0, 0, 1, true)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 0)
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x12ba60()){
			EFFECT_FOLLOW(0x1204018b5d, hash40("sword1"), 0, 0, 0, 0, 0, 0, 1, true)
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -8, 0, 0, 0, 0, 0, 0.5, 8, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		FLASH(0.392, 0, 0.941, 0.0)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
frame(Frame=35)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -8, 0, 0, 0, 0, 0, 0.0, 8, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		FLASH(0.392, 0, 0.941, 0.0)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 1)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		get_value_float(SO_VAR_FLOAT_LR)
		0x12ba60(0, 0)
		0x12ba60()
		0x12ba60()
		if(0x12ba60()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x12ba60()){
				EFFECT(0x0defe751cb, hash40("top"), 0, 0, 0, 0, 180, 0, 0.0, 0, 0, 0, 0, 0, 0, true)
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x12ba60()){
					EFFECT(0x0defe751cb, hash40("top"), 0, 0, 0, 0, 0, 0, 0.0, 0, 0, 0, 0, 0, 0, true)
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
				}
			}
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		EFFECT_FOLLOW(0x1917b0f394, hash40("sword1"), 0, 0, 1.25, 0, 0, 0, 1, true)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		LAST_EFFECT_SET_RATE(1)
		0x12ba60()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -10, 0, 0, 0, 0, 0, 0.75, 10, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		FLASH(0.392, 0, 0.941, 0.3)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
frame(Frame=35)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -10, 0, 0, 0, 0, 0, 0.87, 10, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		FLASH(0.392, 0, 0.941, 0.35)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 2)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		get_value_float(SO_VAR_FLOAT_LR)
		0x12ba60(0, 0)
		0x12ba60()
		0x12ba60()
		if(0x12ba60()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x12ba60()){
				EFFECT(0x0d98e0615d, hash40("top"), 0, 0, 0, 0, 180, 0, 0.0, 0, 0, 0, 0, 0, 0, true)
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x12ba60()){
					EFFECT(0x0d98e0615d, hash40("top"), 0, 0, 0, 0, 0, 0, 0.0, 0, 0, 0, 0, 0, 0, true)
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
					0x12ba60()
				}
			}
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		EFFECT_FOLLOW(0x1917b0f394, hash40("sword1"), 0, 0, 1.25, 0, 0, 0, 1.5, true)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		LAST_EFFECT_SET_RATE(1)
		0x12ba60()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -12, 0, 0, 0, 0, 0, 1, 12, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		FLASH(0.392, 0, 0.941, 0.4)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
frame(Frame=35)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -12, 0, 0, 0, 0, 0, 1.1, 12, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		FLASH(0.392, 0, 0.941, 0.45)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(FIGHTER_ROY_STATUS_SPECIAL_N_WORK_INT_READY_LEVEL, 3)
for(6 Iterations){
	0x12ba60()
	0x12ba60()
	if(0x12ba60()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x12ba60()){
			FLASH(0.392, 0, 0.941, 0.5)
			0x12ba60()
			0x12ba60()
			0x12ba60()
			0x12ba60()
		}
	}
	wait(Frames=4)
	0x12ba60()
	0x12ba60()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12ba60()){
		FOOT_EFFECT(hash40("sys_dash_smoke"), hash40("top"), -16, 0, 0, 0, 0, 0, 1.25, 12, 0, 4, 0, 0, 0, false)
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		0x12ba60()
		COL_NORMAL()
	}
	wait(Frames=2)
	0x12ba60()
	0x12ba60()
}
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
0x12ba60()
loc.imp._Unwind_Resume()
