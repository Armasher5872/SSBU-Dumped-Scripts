unsafe extern "C" fn effect_appealhil(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        FOOT_EFFECT_FLIP(agent, Hash40::new("sys_run_smoke"), Hash40::new("sys_run_smoke"), Hash40::new("top"), -1, 0, 1, 0, -30, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 27.0);
    if is_excute(agent) {
        LANDING_EFFECT_FLIP(agent, Hash40::new("sys_down_smoke"), Hash40::new("sys_down_smoke"), Hash40::new("top"), -2, 0, -4, 0, 0, 0, 0.4, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 42.0);
    if is_excute(agent) {
        LANDING_EFFECT_FLIP(agent, Hash40::new("sys_down_smoke"), Hash40::new("sys_down_smoke"), Hash40::new("top"), 2, 0, -2, 0, 0, 0, 0.45, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 71.0);
    if is_excute(agent) {
        LANDING_EFFECT_FLIP(agent, Hash40::new("sys_down_smoke"), Hash40::new("sys_down_smoke"), Hash40::new("top"), -1, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
}

unsafe extern "C" fn sound_appealhil(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_rise"));
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_step_right_s"));
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_step_left_s"));
    }
    frame(lua_state, 41.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_landing02"));
    }
    frame(lua_state, 49.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_dash_start"));
    }
    frame(lua_state, 71.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_landing02"));
        PLAY_SE(agent, Hash40::new("vc_yoshi_attack06"));
    }
}

unsafe extern "C" fn expression_appealhil(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_walk_hv"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 26.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_walk_hv"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 42.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_lands"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 71.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_lands"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}