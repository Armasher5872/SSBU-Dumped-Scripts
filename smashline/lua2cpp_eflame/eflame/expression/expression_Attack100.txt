#[acmd_script( agent = "eflame", script = "expression_attack100", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_attack100(fighter: &mut L2CAgentBase) {
    wait_loop_clear();
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attacks"), 2);
    }
    frame(fighter.lua_state_agent, 2.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll"), 4, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 6.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll"), 4, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 10.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll"), 4, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 14.0);
    methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll"), 4, false);
    ControlModule::set_rumble(fighter.module_accessor);
}