#[acmd_script( agent = "trail", script = "expression_specialsend", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialsend(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_landl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 2.0);
    for _ in 0..18 {
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_81_specials_land"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 2.0);
}
frame(lua_state, 40.0);
ItemModule::is_have_item(boma, 0);
if(0x4ae890(false, true)){
    if is_excute(fighter) {
        FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.13);
    }
}
frame(lua_state, 43.0);
if is_excute(fighter) {
    FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.1);
}
frame(lua_state, 48.0);
if is_excute(fighter) {
    ItemModule::set_have_item_visibility(boma, true, 0);
}
frame(lua_state, 53.0);
if is_excute(fighter) {
    FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0);
}
if is_excute(fighter) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_81_landingairlwlight"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
wait(lua_state, 2.0);
}