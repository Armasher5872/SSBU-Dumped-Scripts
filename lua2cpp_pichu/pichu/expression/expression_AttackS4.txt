methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_NONE)
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=14)
0x1032e0()
0x1032e0()
execute(14)
0x1032e0()
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
0x1032e0(false, true)
0x1032e0()
0x1032e0()
if(0x1032e0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x1032e0()){
		slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 4)
		0x1032e0()
		0x1032e0()
		0x1032e0()
		0x1032e0()
	}
}
frame(Frame=16)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	RUMBLE_HIT(hash40("rbkind_attacks"), 4)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_elecattack"), 0, true)
	ControlModule::set_rumble()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=30)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=31)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	RUMBLE_HIT(hash40("rbkind_attackl"), 0)
	0x1032e0()
	0x1032e0()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohit_attacks"), 0, false)
	ControlModule::set_rumble()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
frame(Frame=35)
0x1032e0()
0x1032e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x1032e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 5)
	0x1032e0()
	0x1032e0()
	0x1032e0()
	0x1032e0()
}
