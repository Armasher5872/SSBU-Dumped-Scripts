unsafe extern "C" fn game_finalfinish(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_XLU);
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if is_excute(agent) {
                CAM_ZOOM_IN_arg5(2, 0, 0.8, 0, 0);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 40, 0);
            }
            else {
            if is_excute(agent) {
                CAM_ZOOM_IN_arg5(2, 0, 0.8, 0, 0);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
            }
        }
    }
}
frame(lua_state, 1.0);
FT_MOTION_RATE(agent, 0.5);
if is_excute(agent) {
    SET_RATE_ARTICLE(agent, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 2);
    ArticleModule::remove(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_BUNSHIN);
    WorkModule::on_flag(boma, *FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ENABLE_TRANS);
}
frame(lua_state, 5.0);
if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalfinishl.nuanmb"), true);
        }
        else {
        if is_excute(agent) {
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalfinishr.nuanmb"), true);
        }
    }
}
}
frame(lua_state, 30.0);
FT_MOTION_RATE(agent, 1.0);
if is_excute(agent) {
SET_RATE_ARTICLE(agent, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 1);
}
frame(lua_state, 50.0);
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
if is_excute(agent) {
    ATTACK(agent, 0, 2, Hash40::new("top"), 10.0, 160, 90, 0, 100, 30.0, 0.0, 3.0, -11.0, None, None, None, 100.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    AttackModule::set_force_reaction(boma, 0, true, false);
}
else {
if is_excute(agent) {
    ATTACK(agent, 0, 2, Hash40::new("top"), 10.0, 20, 90, 0, 100, 30.0, 0.0, 3.0, 11.0, None, None, None, 100.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_NONE);
    AttackModule::set_force_reaction(boma, 0, true, false);
}
}
}
if is_excute(agent) {
WorkModule::on_flag(boma, *FIGHTER_METAKNIGHT_STATUS_FINAL_FLAG_ATTACK_END_HIT);
}
wait(lua_state, 1.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
SlowModule::set_whole(boma, 2, 0);
}
frame(lua_state, 54.0);
FT_MOTION_RATE(agent, 1.2);
if is_excute(agent) {
SET_RATE_ARTICLE(agent, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 0.833);
}
frame(lua_state, 70.0);
FT_MOTION_RATE(agent, 0.8);
if is_excute(agent) {
SET_RATE_ARTICLE(agent, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, 1.25);
SlowModule::clear_whole(boma);
CAM_ZOOM_OUT(agent);
}
frame(lua_state, 100.0);
if is_excute(agent) {
ArticleModule::set_visibility_whole(boma, *FIGHTER_METAKNIGHT_GENERATE_ARTICLE_FOURWINGS, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
}

unsafe extern "C" fn effect_finalfinish(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("sys_bg_black"), false, false);
        EFFECT_OFF_KIND(agent, Hash40::new("metaknight_sword"), false, false);
    }
    frame(lua_state, 43.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("haver"), 0, 14, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 49.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("metaknight_sword"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 3, 3, 0, 6, -15, true);
            methodlib::L2CValue::as_hash()const();
            EffectModule::request_post_effect_line_circle(boma);
        }
        else {
        if is_excute(agent) {
            methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 3, 3, 0, 6, 20, true);
            methodlib::L2CValue::as_hash()const(0);
            EffectModule::request_post_effect_line_circle(boma);
        }
    }
}
frame(lua_state, 50.0);
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("metaknight_final_last_trace_l"), Hash40::new("top"), 0, 0, -32.859, 0, 180, 0, 1, true);
        EffectModule::set_disable_render_offset_last(boma);
        EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), -4.65, -2.883, -19, -162.6, 67.7, -138.2, 1, true);
    }
    else {
    if is_excute(agent) {
        EFFECT_FLW_POS(agent, Hash40::new("metaknight_final_last_trace_r"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
        EffectModule::set_disable_render_offset_last(boma);
        EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("metaknight_final_hit"), Hash40::new("top"), -12.857, 0, 18, 70, 42.5, -46, 1, true);
        EffectModule::set_disable_render_offset_last(boma);
    }
}
}
frame(lua_state, 54.0);
if is_excute(agent) {
EffectModule::remove_post_effect_line(boma, 3, true);
EFFECT_OFF_KIND(agent, Hash40::new("metaknight_sword"), false, false);
}
}

unsafe extern "C" fn sound_finalfinish(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_metaknight_final07"));
    }
    frame(lua_state, 51.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_metaknight_final08"));
    }
}

unsafe extern "C" fn expression_finalfinish(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        VisibilityModule::set_status_default_int64(boma, Hash40::new("mantle"), Hash40::new("mantle_wing"));
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 33.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_28_soaring"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_slash_critical"), 0);
    }
    frame(lua_state, 100.0);
    if is_excute(agent) {
        VisibilityModule::set_status_default_int64(boma, Hash40::new("mantle"), Hash40::new("mantle_normal"));
    }
}