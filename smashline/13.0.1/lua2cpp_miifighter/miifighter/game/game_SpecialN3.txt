frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MIIFIGHTER_STATUS_WORK_ID_FLAG_BAKURETU_KICK_TURN);
}frame(fighter.lua_state_agent, 31.0);
if macros::is_excute(fighter) {
WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MIIFIGHTER_STATUS_WORK_ID_FLAG_BAKURETU_KICK_TURN);
}frame(fighter.lua_state_agent, 40.0);
if macros::is_excute(fighter) {
damage(MSC=*MA_MSC_DAMAGE_DAMAGE_NO_REACTION, Type=*DAMAGE_NO_REACTION_MODE_ALWAYS, DamageThreshold=0);
}frame(fighter.lua_state_agent, 50.0);
if macros::is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("legl"), 25.0, 361, 80, 0, 40, 4.0, 6.8, 0.0, 0.0, None, None, None, 1.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
ATTACK(fighter, 1, 0, Hash40::new("legl"), 23.0, 361, 80, 0, 40, 3.0, -4.7, 0.0, 0.0, 2.2, 0.0, 0.0, 1.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
}wait(fighter.lua_state_agent, 3.0);
if macros::is_excute(fighter) {
damage(MSC=*MA_MSC_DAMAGE_DAMAGE_NO_REACTION, Type=*DAMAGE_NO_REACTION_MODE_NORMAL, DamageThreshold=0);
AttackModule::clear_all(boma);
}frame(fighter.lua_state_agent, 55.0);
FT_MOTION_RATE(fighter, 0.714);
frame(fighter.lua_state_agent, 90.0);
FT_MOTION_RATE(fighter, 1);
