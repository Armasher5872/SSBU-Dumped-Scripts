unsafe extern "C" fn effect_appealsl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 6.0);
    if is_excute(agent) {
        FOOT_EFFECT_FLIP(agent, Hash40::new("sys_run_smoke"), Hash40::new("sys_run_smoke"), Hash40::new("top"), 1, 0, 2, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 13.0);
    if is_excute(agent) {
        FOOT_EFFECT_FLIP(agent, Hash40::new("sys_run_smoke"), Hash40::new("sys_run_smoke"), Hash40::new("top"), 0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 26.0);
    if is_excute(agent) {
        FOOT_EFFECT_FLIP(agent, Hash40::new("sys_run_smoke"), Hash40::new("sys_run_smoke"), Hash40::new("top"), -3, 0, 4, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 33.0);
    if is_excute(agent) {
        FOOT_EFFECT_FLIP(agent, Hash40::new("sys_run_smoke"), Hash40::new("sys_run_smoke"), Hash40::new("top"), -3, 0, -1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
    frame(lua_state, 42.0);
    if is_excute(agent) {
        FOOT_EFFECT_FLIP(agent, Hash40::new("sys_run_smoke"), Hash40::new("sys_run_smoke"), Hash40::new("top"), -1, 0, 1, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_ZX);
    }
}

unsafe extern "C" fn sound_appealsl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 5.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_special_s02"));
    }
    wait(lua_state, 25.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_special_s02"));
    }
    wait(lua_state, 16.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_dash_stop"));
    }
    wait(lua_state, 13.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_yoshi_attack02"));
    }
    wait(lua_state, 65.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_yoshi_landing01"));
    }
}

unsafe extern "C" fn expression_appealsl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}