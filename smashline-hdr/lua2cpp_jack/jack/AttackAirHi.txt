unsafe extern "C" fn game_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 5.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
        ATTACK(agent, 0, 0, Hash40::new("kneer"), 0.75, 80, 80, 0, 20, 4.0, 4.7, 0.0, 0.0, None, None, None, 0.7, 1.2, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 4, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
        ATTACK(agent, 1, 0, Hash40::new("kneer"), 0.75, 367, 100, 0, 30, 4.0, 4.7, 0.0, 0.0, None, None, None, 0.7, 1.2, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, 0, 0.0, 4, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
    }
    frame(lua_state, 19.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("kneer"), 3.0, 80, 155, 0, 50, 4.5, 4.8, 0.0, 0.0, Some(2.5), Some(0.0), Some(0.0), 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
    }
    if WorkModule::is_flag(boma, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_DOYLE) {
        if is_excute(agent) {
            ATTACK(agent, 0, 0, Hash40::new("kneer"), 3.0, 80, 155, 0, 50, 5.0, 4.3, 0.0, 0.0, Some(1.5), Some(0.0), Some(0.0), 1.7, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
            ATTACK(agent, 1, 1, Hash40::new("top"), 7.0, 80, 126, 0, 50, 5.0, 0.0, 20.0, 1.5, Some(0.0), Some(24.0), Some(0.0), 1.7, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_HEAVY, *ATTACK_REGION_PUNCH);
        }
    }
    frame(lua_state, 22.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        WorkModule::off_flag(boma, *FIGHTER_STATUS_ATTACK_AIR_FLAG_ENABLE_LANDING);
    }
}

unsafe extern "C" fn effect_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if WorkModule::is_flag(boma, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_DOYLE) {
        frame(lua_state, 4.0);
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 15, 1.3, 12, 0, 0, 0.7, true);
            EFFECT_FOLLOW_RND(agent, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 22, 2.5, 12, 0, 0, 0.3, 2, 6, 2, 0, 0, 0, true);
            LAST_EFFECT_SET_RATE(agent, 2);
        }
    }
    frame(lua_state, 5.0);
    for _ in 0..2 {
    if is_excute(agent) {
        EFFECT_FOLLOW_RND(agent, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 19, 2.3, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
        LAST_EFFECT_SET_RATE(agent, 2);
    }
    wait(lua_state, 3.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_RND(agent, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 13, 1, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
        LAST_EFFECT_SET_RATE(agent, 2);
    }
    wait(lua_state, 3.0);
}
frame(lua_state, 16.0);
if is_excute(agent) {
    EFFECT_FOLLOW_RND(agent, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 19, 2.3, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
    LAST_EFFECT_SET_RATE(agent, 2);
}
frame(lua_state, 19.0);
if is_excute(agent) {
    EFFECT_FOLLOW_RND(agent, Hash40::new("jack_spin_wind"), Hash40::new("top"), 0, 13, 1, 12, 0, 0, 0.4, 2, 6, 2, 0, 0, 0, true);
    LAST_EFFECT_SET_RATE(agent, 2);
}
get_value_float(*SO_VAR_FLOAT_LR);
for _ in 0..3 {
}
if(0x304a00(312, 0)){
if is_excute(agent) {
    EFFECT_FOLLOW(agent, Hash40::new("jack_doyle_attack_arc"), Hash40::new("top"), -11, 17, -6, 20, 0, 60, 1.2, true);
    LAST_EFFECT_SET_RATE(agent, 1.5);
}
else{
if is_excute(agent) {
    EFFECT_FOLLOW(agent, Hash40::new("jack_doyle_attack_arc"), Hash40::new("top"), 11, 17, -6, -20, 0, 120, 1.2, true);
    LAST_EFFECT_SET_RATE(agent, 1.5);
}
}
}
}

unsafe extern "C" fn sound_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 4.0);
    if is_excute(agent) {
        PLAY_SEQUENCE(agent, Hash40::new("seq_jack_rnd_attack_m"));
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_jack_attackair_h01"));
    }
    if WorkModule::is_flag(boma, *FIGHTER_JACK_INSTANCE_WORK_ID_FLAG_DOYLE) {
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_jack_attackair_h01_doyle"));
        }
    }
}

unsafe extern "C" fn expression_attackairhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 3.0);
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 10, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackss"), 5);
    }
    frame(lua_state, 14.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 0);
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, true, 0);
    }
}