#[acmd_script( agent = "krool", script = "expression_specialnspitb", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialnspitb(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
        VisibilityModule::set_int64(boma, hash40("crown") as i64, hash40("crown_hide") as i64);
    }
    if IS_EXIST_ARTICLE(agent, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT) {
        if is_excute(agent) {
            ArticleModule::set_visibility_whole(boma, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
        }
    }
    frame(lua_state, 23.0);
    WorkModule::is_flag(boma, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_N_SUCTION_IRONBALL);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if is_excute(agent) {
            QUAKE(agent, *CAMERA_QUAKE_KIND_S);
        }
        else{
        if is_excute(agent) {
            QUAKE(agent, *CAMERA_QUAKE_KIND_M);
        }
    }
}
if is_excute(agent) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_explosion"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(lua_state, 60.0);
if is_excute(agent) {
    VisibilityModule::set_int64(boma, hash40("crown") as i64, hash40("crown_normal") as i64);
}
if IS_EXIST_ARTICLE(agent, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT) {
    if is_excute(agent) {
        ArticleModule::set_visibility_whole(boma, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
    }
}
frame(lua_state, 70.0);
if is_excute(agent) {
    ItemModule::set_have_item_visibility(boma, true, 0);
    notify_event_msc_cmd!(agent, Hash40::new_raw(0x23c33f3bdc));
}
}