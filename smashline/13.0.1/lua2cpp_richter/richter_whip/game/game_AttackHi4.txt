frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_NONE);
}macros::FT_MOTION_RATE(fighter, 0.2);
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_MOVE);
battle_object();
methodlib::L2CValue::L2CValue(void*)();
}else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}methodlib::L2CValue::as_pointer()const();
reset_node_fix_flag_list();
battle_object();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(4, 5, 10, 11);
set_node_fix_flag_list();
frame(fighter.lua_state_agent, 5.0);
macros::FT_MOTION_RATE(fighter, 1);
frame(fighter.lua_state_agent, 13.0);
macros::FT_MOTION_RATE(fighter, 0.5);
frame(fighter.lua_state_agent, 19.0);
if macros::is_excute(fighter) {
PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_NONE);
battle_object();
methodlib::L2CValue::L2CValue(void*)();
}else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}methodlib::L2CValue::as_pointer()const();
reset_node_fix_flag_list();
frame(fighter.lua_state_agent, 21.0);
macros::FT_MOTION_RATE(fighter, 1);
if macros::is_excute(fighter) {
PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_COLLIDE);
}frame(fighter.lua_state_agent, 52.0);
if macros::is_excute(fighter) {
PhysicsModule::set_2nd_status(fighter.module_accessor, PH2*NDARY_CRAW_NONE);
}