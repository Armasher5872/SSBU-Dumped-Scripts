unsafe extern "C" fn expression_specialnstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 10.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 10.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 10.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 10.0);
    frame(lua_state, 45.0);
    for _ in 0..5 {
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attacks"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(lua_state, 8.0);
}
frame(lua_state, 85.0);
for _ in 0..5 {
if is_excute(agent) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_attackm"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
wait(lua_state, 6.0);
}
if is_excute(agent) {
slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 8);
}
}