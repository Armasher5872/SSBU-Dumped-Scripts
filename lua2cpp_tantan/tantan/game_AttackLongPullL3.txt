WorkModule::is_flag(53592)
0x3a08f0(false, true)
0x3a08f0()
0x3a08f0()
if(0x3a08f0()){
	WorkModule::is_flag(53724)
	0x3a08f0(false, true)
	0x3a08f0()
	0x3a08f0()
	if(0x3a08f0()){
		WorkModule::is_flag(53544)
		0x3a08f0(false, true)
		0x3a08f0()
		0x3a08f0()
		if(0x3a08f0()){
			frame(Frame=1)
			0x3a08f0()
			0x3a08f0()
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x3a08f0()){
				ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=15.0, Angle=361, KBG=75, FKB=0, BKB=40, Size=5.5, X=0.0, Y=7.0, Z=8.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_LL, SFXType=60148, Type=ATTACK_REGION_PUNCH)
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
				AttackModule::set_damage_shake_scale(0.5)
				0x3a08f0()
				methodlib::L2CValue::as_hash()const(0x139ac1c81b, 9, false)
				ControlModule::set_rumble()
				0x3a08f0()
				0x3a08f0()
				0x3a08f0()
			}
			frame(Frame=2)
			0x3a08f0()
			0x3a08f0()
			methodlib::L2CValue::operatorbool()const(is_excute)
		}
		else{
			WorkModule::is_flag(LUA_SCRIPT_LINE_MAX)
			0x3a08f0(false, true)
			0x3a08f0()
			0x3a08f0()
			if(0x3a08f0()){
				frame(Frame=1)
				0x3a08f0()
				0x3a08f0()
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x3a08f0()){
					ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=13.8, Angle=361, KBG=75, FKB=0, BKB=40, Size=5.5, X=0.0, Y=7.0, Z=8.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_LL, SFXType=60148, Type=ATTACK_REGION_PUNCH)
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					AttackModule::set_damage_shake_scale(0.5)
					0x3a08f0()
					methodlib::L2CValue::as_hash()const(0x139ac1c81b, 9, false)
					ControlModule::set_rumble()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
				}
				frame(Frame=2)
				0x3a08f0()
				0x3a08f0()
				methodlib::L2CValue::operatorbool()const(is_excute)
			}
			else{
				frame(Frame=1)
				0x3a08f0()
				0x3a08f0()
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x3a08f0()){
					ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=8.0, Angle=361, KBG=90, FKB=0, BKB=50, Size=5.5, X=0.0, Y=7.0, Z=8.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=60148, Type=ATTACK_REGION_PUNCH)
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
					AttackModule::set_damage_shake_scale(0.5)
					0x3a08f0()
					methodlib::L2CValue::as_hash()const(0x139ac1c81b, 9, false)
					ControlModule::set_rumble()
					0x3a08f0()
					0x3a08f0()
					0x3a08f0()
				}
				frame(Frame=2)
				0x3a08f0()
				0x3a08f0()
				methodlib::L2CValue::operatorbool()const(is_excute)
			}
		}
	}
	if(0x3a08f0()){
		AttackModule::clear_all()
	}
	0x3a08f0(0)
}
