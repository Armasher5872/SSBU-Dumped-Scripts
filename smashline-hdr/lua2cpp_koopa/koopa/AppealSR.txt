unsafe extern "C" fn effect_appealsr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 32.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("koopa_appeal_s"), Hash40::new("mouth2"), 0, -1.3, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 56.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("koopa_appeal_s"), Hash40::new("mouth2"), 1, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 73.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("koopa_appeal_s"), Hash40::new("mouth2"), 1, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
}

unsafe extern "C" fn sound_appealsr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 27.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_koopa_swing_m"));
    }
    frame(lua_state, 31.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_koopa_appeal02"));
    }
    frame(lua_state, 48.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_koopa_swing_s"));
    }
    frame(lua_state, 52.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_koopa_appeal02"));
    }
    frame(lua_state, 67.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_koopa_swing_m"));
    }
    frame(lua_state, 71.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_koopa_appeal02"));
    }
}

unsafe extern "C" fn expression_appealsr(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 32.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 52.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 73.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}