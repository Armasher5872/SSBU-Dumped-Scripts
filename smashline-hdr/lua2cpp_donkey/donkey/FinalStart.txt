unsafe extern "C" fn game_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 7, 30);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(lua_state, 5.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 20);
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstart.nuanmb"), false);
            FT_START_CUTIN(agent);
        }
    }
    frame(lua_state, 15.0);
    if is_excute(agent) {
        SlowModule::set_whole(boma, 30, 0);
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        SlowModule::clear_whole(boma);
    }
    else {
    if is_excute(agent) {
        PostureModule::scale(boma, 5, 0);
        0x120890(298784397, 2);
        CAM_ZOOM_IN_arg5(0, 0);
        FT_START_CUTIN(agent);
    }
}
frame(lua_state, 24.0);
if is_excute(agent) {
    SlowModule::clear_whole(boma);
}
frame(lua_state, 25.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 29.0);
if is_excute(agent) {
    ATTACK(agent, 0, 0, Hash40::new("top"), 12.0, 361, 0, 0, 0, 13.0, 0.0, 10.0, 8.0, Some(0.0), Some(10.0), Some(28.0), 5.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
    AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 34.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 35.0);
if is_excute(agent) {
    AttackModule::clear_all(boma);
}
frame(lua_state, 37.0);
if is_excute(agent) {
    WorkModule::on_flag(boma, *FIGHTER_DONKEY_STATUS_FINAL_FLAG_TO_ATTACK);
}
}

unsafe extern "C" fn effect_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_donkey_final"), false, false, false);
        LANDING_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 4.0);
    if is_excute(agent) {
        LANDING_EFFECT_FLIP(agent, Hash40::new("sys_shield_smoke"), Hash40::new("sys_shield_smoke"), Hash40::new("top"), 0, 0, 0, 0, 30, 0, 1.25, 0, 0, 0, 0, 0, 0, false, *EF_FLIP_YZ);
        LAST_EFFECT_SET_RATE(agent, 1.4);
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        EFFECT_FLIP(agent, Hash40::new("donkey_giantpunch"), Hash40::new("donkey_giantpunch"), Hash40::new("top"), 2, 12, 18, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true, *EF_FLIP_YZ);
        LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.7);
        EFFECT_OFF_KIND(agent, Hash40::new("sys_shield_smoke"), false, true);
    }
    frame(lua_state, 29.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_attack_impact"), Hash40::new("top"), 28, 12, 0, 0, 0, 0, 2.3, 0, 0, 0, 0, 0, 360, false);
        LAST_EFFECT_SET_RATE(agent, 0.6);
    }
    frame(lua_state, 60.0);
    if is_excute(agent) {
        EffectModule::remove_screen(boma, Hash40::new("bg_donkey_final"), -1);
    }
}

unsafe extern "C" fn sound_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 25.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_donkey_final01"));
    }
}

unsafe extern "C" fn expression_finalstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        START_INFO_FLASH_EYE(agent);
    }
    frame(lua_state, 29.0);
    if is_excute(agent) {
        RUMBLE_HIT_STATUS(agent, Hash40::new("rbkind_attack_finish"), 0);
    }
    frame(lua_state, 34.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 80.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_ENABLE_FACIAL_ON_FINAL);
        FT_UPDATE_FACE_MOTION(agent);
    }
}