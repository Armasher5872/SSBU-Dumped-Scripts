methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=5)
0xf46f0()
0xf46f0()
execute(5)
0xf46f0()
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)
0xf46f0()
0xf46f0()
if(0xf46f0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0xf46f0()){
		slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
		0xf46f0()
		0xf46f0()
		0xf46f0()
	}
}
frame(Frame=12)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_R, 4)
	0xf46f0()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=14)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
frame(Frame=16)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	RUMBLE_HIT(hash40("rbkind_attackl"), 0)
	0xf46f0()
	0xf46f0()
}
frame(Frame=33)
0xf46f0()
0xf46f0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf46f0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 4)
	0xf46f0()
	0xf46f0()
	0xf46f0()
	0xf46f0()
}
