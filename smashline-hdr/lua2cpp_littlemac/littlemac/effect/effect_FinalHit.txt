#[acmd_script( agent = "littlemac", script = "effect_finalhit", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_finalhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::set_visible_kind(boma, Hash40::new("sys_final_aura"), false);
        EFFECT_STENCIL_ON(agent);
        EffectModule::req_screen(boma, Hash40::new("bg_littlemac_final2"), false, false, false);
        methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 10, 8, 0, 8, 15, true);
        methodlib::L2CValue::as_hash()const();
        EffectModule::request_post_effect_line_circle(boma);
        FOOT_EFFECT(agent, 0, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.3);
        EFFECT(agent, Hash40::new("sys_hit_normal"), Hash40::new("top"), 0, 11, 18, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        EFFECT_FLW_UNSYNC_VIS(agent, Hash40::new("littlemac_counter_arc"), Hash40::new("top"), -3, 14, 6, 10, -40, 70, 1.4, true);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_landing_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.3);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        EffectModule::remove_post_effect_line(boma, 6, true);
    }
}