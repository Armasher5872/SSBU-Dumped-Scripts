if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
ItemModule::set_have_item_visibility(fighter.module_accessor, false);
methodlib::L2CValue::as_hash()const(Hash40::new("sword1"), *ATTACK_DIRECTION_X, *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_Z);
AttackModule::set_attack_reference_joint_id(boma);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
}frame(fighter.lua_state_agent, 7.0);
if macros::is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD);
}execute(7);
if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
ItemModule::set_have_item_visibility(fighter.module_accessor, false);
}WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
if macros::is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
}}frame(fighter.lua_state_agent, 11.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attacks"), 2, false);
ControlModule::set_rumble(boma);
}frame(fighter.lua_state_agent, 13.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0);
}frame(fighter.lua_state_agent, 14.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, true);
ControlModule::set_rumble(boma);
}wait(fighter.lua_state_agent, 6.0);
