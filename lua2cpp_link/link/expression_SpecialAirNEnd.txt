methodlib::L2CValue::operatorbool()const(is_excute)
if(0x119170()){
	ItemModule::set_have_item_visibility(false)
	0x119170()
	VisibilityModule::set_int64(hash40("sword"), hash40("sword_back"))
	0x119170()
	0x119170()
	VisibilityModule::set_int64(hash40("shield"), hash40("shield_back"))
	0x119170()
	0x119170()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x119170()
	0x119170()
	0x119170()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x119170()
	0x119170()
	0x119170()
}
frame(Frame=2)
0x119170()
0x119170()
WorkModule::is_flag(FIGHTER_LINK_STATUS_BOW_FLAG_CHARGE_MAX)
0x119170(false, true)
0x119170()
0x119170()
if(0x119170()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x119170()){
		methodlib::L2CValue::as_hash()const(hash40("rbkind_attackl"), 0, false)
		ControlModule::set_rumble()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x119170()){
			methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 0, false)
			ControlModule::set_rumble()
			0x119170()
			0x119170()
			0x119170()
		}
	}
}
frame(Frame=22)
0x119170()
0x119170()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x119170()){
	VisibilityModule::set_int64(hash40("sword"), hash40("sword_normal"))
	0x119170()
	0x119170()
	ArticleModule::change_status_exist(FIGHTER_LINK_GENERATE_ARTICLE_BOW, WN_LINK_BOW_STATUS_KIND_BACK)
	0x119170()
	0x119170()
}
frame(Frame=23)
0x119170()
0x119170()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x119170()){
	VisibilityModule::set_int64(hash40("shield"), hash40("shield_normal"))
	0x119170()
	0x119170()
}
