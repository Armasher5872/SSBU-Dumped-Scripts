methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	ItemModule::set_have_item_visibility(false)
	0x142050()
	WorkModule::on_flag(Flag=FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE)
	0x142050()
}
frame(Frame=7)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x142050()
}
frame(Frame=8)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 10, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=20)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 10, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=25)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=31)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 9, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=41)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=42)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 4, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=48)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 8, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=57)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=62)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 7, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=71)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashs"), 14, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=87)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 18, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=96)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=106)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 13, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=118)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=119)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 12, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=130)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x142050()
}
frame(Frame=132)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 15, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=136)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=148)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 6, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=154)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=155)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashm"), 20, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=165)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
}
frame(Frame=171)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x142050()
}
frame(Frame=176)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_beamm"), 10, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=187)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x142050()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashm"), 14, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=202)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_explosionm"), 0, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=207)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x142050()
}
frame(Frame=216)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=220)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_smashhold1"), 0, true)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=260)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_erase"), 0, false)
	ControlModule::set_rumble()
	0x142050()
	0x142050()
	0x142050()
}
frame(Frame=263)
0x142050()
0x142050()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x142050()){
	QUAKE(CAMERA_QUAKE_KIND_L)
	0x142050()
	RUMBLE_HIT(hash40("rbkind_explosionl"), 0)
	0x142050()
	0x142050()
}
