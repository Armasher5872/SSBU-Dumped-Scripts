unsafe extern "C" fn game_startair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 18.0);
    if macros::is_excute(agent) {
        macros::CAM_ZOOM_OUT(agent);
    }
    frame(agent.lua_state_agent, 19.0);
    frame(agent.lua_state_agent, 23.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 48.0);
    if macros::is_excute(agent) {
        WorkModule::on_flag(agent.module_accessor, *WEAPON_GANON_GANOND_INSTANCE_WORK_ID_FLAG_HIT_RUMBLE_CHECK);
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitll_l"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 50.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_L);
        macros::ATTACK(agent, 0, 1, Hash40::new("top"), 10.0, 270, 100, 250, 0, 25.0, 0.0, 25.0, 50.0, Some(0.0), Some(25.0), Some(18.0), 2.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_paralyze"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
        AttackModule::set_final_finish_cut_in(agent.module_accessor, 0, true, true, -1, false);
    }
    wait(agent.lua_state_agent, 5.0);
    if macros::is_excute(agent) {
        AttackModule::clear_all(agent.module_accessor);
    }
    frame(agent.lua_state_agent, 55.0);
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 2, 50, 0, 0, 0);
    }
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        PostureModule::scale(agent.module_accessor);
        0xffe90(1095804846, 0.5);
        get_value_float(*SO_VAR_FLOAT_LR);
        if(methodlib::L2CValue::operator<(lib::L2CValueconst&)const(35264, 0)){
            if macros::is_excute(agent) {
                CAM_ZOOM_IN_arg5(10, 0, 1.2, 0.1, -0.3);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 10);
            }
            else{
            if macros::is_excute(agent) {
                CAM_ZOOM_IN_arg5(10, 0, 1.2, 0.1, 0.3);
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 10);
            }
        }
    }
}
frame(agent.lua_state_agent, 60.0);
if macros::is_excute(agent) {
    WorkModule::off_flag(agent.module_accessor, *WEAPON_GANON_GANOND_INSTANCE_WORK_ID_FLAG_HIT_RUMBLE_CHECK);
}
wait(agent.lua_state_agent, 35.0);
if macros::is_excute(agent) {
    macros::CAM_ZOOM_OUT(agent);
}
frame(agent.lua_state_agent, 96.0);
macros::FT_MOTION_RATE(agent, 2.0);
frame(agent.lua_state_agent, 105.0);
macros::FT_MOTION_RATE(agent, 1.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 20, 70, 220, 40, 20.0, 0.0, 20.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_purple"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_NONE);
}
wait(agent.lua_state_agent, 10.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
}
}

unsafe extern "C" fn effect_startair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 17.0);
    for _ in 0..6 {
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("ganon_final_transform_light"), Hash40::new("top"), 0, 17, 0, 0, 0, 0, 1.2, 45, 45, 45, 0, 0, 0, true);
        macros::BURN_COLOR(agent, 0.1, 1, 2, 0.7);
    }
    wait(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("ganon_final_transform_light"), Hash40::new("top"), 0, 27, -10, 0, 0, 0, 1.3, 40, 40, 40, 0, 0, 0, true);
        macros::BURN_COLOR_FRAME(agent, 5, 0.1, 1, 2, 0);
    }
    wait(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("ganon_final_transform_light"), Hash40::new("top"), 0, 37, -5, 0, 0, 0, 1.2, 40, 40, 40, 0, 0, 0, true);
        macros::BURN_COLOR_NORMAL(agent);
    }
    wait(agent.lua_state_agent, 1.0);
}
frame(agent.lua_state_agent, 25.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("ganon_final_sword_flare"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, true);
    macros::EFFECT_FOLLOW(agent, Hash40::new("ganon_final_sword_flare"), Hash40::new("haver"), 0, 0.1, -0.2, 0, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 45.0);
if macros::is_excute(agent) {
    macros::AFTER_IMAGE4_ON_arg29(agent, Hash40::new("tex_ganon_final_sword1"), Hash40::new("tex_ganon_final_sword2"), 4, Hash40::new("havel"), 0, 1, 0, Hash40::new("havel"), 0, 48, 0, true, Hash40::new("null"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
    macros::AFTER_IMAGE4_ON_arg29(agent, Hash40::new("tex_ganon_final_sword1"), Hash40::new("tex_ganon_final_sword2"), 4, Hash40::new("haver"), 0, 1, 0, Hash40::new("haver"), 0, 48, 0, true, Hash40::new("null"), Hash40::new("haver"), 0, 0, 0, 0, 0, 0, 1, 0, *EFFECT_AXIS_X, 0, *TRAIL_BLEND_ALPHA, 101, *TRAIL_CULL_NONE, 1.4, 0.1);
}
frame(agent.lua_state_agent, 50.0);
if macros::is_excute(agent) {
    macros::EFFECT(agent, Hash40::new("ganon_final_cut"), Hash40::new("top"), 0, 16, 28, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
}
frame(agent.lua_state_agent, 55.0);
if macros::is_excute(agent) {
    macros::LAST_EFFECT_SET_ALPHA(agent, 0.3);
    macros::LAST_EFFECT_SET_RATE(agent, 0.8);
}
frame(agent.lua_state_agent, 56.0);
if macros::is_excute(agent) {
    macros::AFTER_IMAGE_OFF(agent, 6);
}
frame(agent.lua_state_agent, 57.0);
get_value_float(*SO_VAR_FLOAT_LR);
if(methodlib::L2CValue::operator<(lib::L2CValueconst&)const(97478066016, 0)){
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("ganon_final_eye"), Hash40::new("eye_l"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    else{
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("ganon_final_eye"), Hash40::new("eye_r"), 0, 0, 0, 0, 0, 0, 1, true);
    }
}
}
frame(agent.lua_state_agent, 90.0);
if macros::is_excute(agent) {
macros::BURN_COLOR(agent, 1.5, 0.5, 2, 0);
macros::EFFECT_FOLLOW(agent, Hash40::new("ganon_final_attack"), Hash40::new("top"), 0, 17, 25, 0, 0, 0, 1, false);
}
frame(agent.lua_state_agent, 95.0);
if macros::is_excute(agent) {
macros::BURN_COLOR_FRAME(agent, 5, 1.5, 0.5, 2, 0.5);
}
frame(agent.lua_state_agent, 105.0);
for _ in 0..10 {
if macros::is_excute(agent) {
macros::BURN_COLOR(agent, 1.5, 0.5, 2, 0.5);
}
wait(agent.lua_state_agent, 2.0);
if macros::is_excute(agent) {
macros::BURN_COLOR_FRAME(agent, 5, 1.5, 0.5, 2, 0);
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
macros::BURN_COLOR_NORMAL(agent);
}
wait(agent.lua_state_agent, 1.0);
}
}

unsafe extern "C" fn sound_startair(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 26.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ganon_final02"));
    }
    frame(agent.lua_state_agent, 46.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ganon_final03"));
    }
}