GET_VOICE_REGION()
0x43c10(0, VOICE_DEFAULT)
0x43c10()
if(0x43c10()){
	frame(Frame=40)
	0x43c10()
	0x43c10()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x43c10()){
		PLAY_SE(hash40("vc_ptrainer_win"))
	}
	else{
		GET_VOICE_REGION()
		0x43c10(0, VOICE_US_EN)
		0x43c10()
		if(0x43c10()){
			frame(Frame=68)
			0x43c10()
			0x43c10()
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x43c10()){
				PLAY_SE(hash40("vc_ptrainer_win"))
			}
			else{
				GET_VOICE_REGION()
				0x43c10(0, VOICE_US_FR)
				0x43c10()
				if(0x43c10()){
					frame(Frame=68)
					0x43c10()
					0x43c10()
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x43c10()){
						PLAY_SE(hash40("vc_ptrainer_win"))
					}
					else{
						GET_VOICE_REGION()
						0x43c10(0, VOICE_EU_EN)
						0x43c10()
						if(0x43c10()){
							frame(Frame=68)
							0x43c10()
							0x43c10()
							methodlib::L2CValue::operatorbool()const(is_excute)
							if(0x43c10()){
								PLAY_SE(hash40("vc_ptrainer_win"))
							}
							else{
								GET_VOICE_REGION()
								0x43c10(0, VOICE_EU_FR)
								0x43c10()
								if(0x43c10()){
									frame(Frame=68)
									0x43c10()
									0x43c10()
									methodlib::L2CValue::operatorbool()const(is_excute)
									if(0x43c10()){
										PLAY_SE(hash40("vc_ptrainer_win"))
									}
									else{
										GET_VOICE_REGION()
										0x43c10(0, VOICE_EU_IT)
										0x43c10()
										if(0x43c10()){
											frame(Frame=68)
											0x43c10()
											0x43c10()
											methodlib::L2CValue::operatorbool()const(is_excute)
											if(0x43c10()){
												PLAY_SE(hash40("vc_ptrainer_win"))
												0x43c10()
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
