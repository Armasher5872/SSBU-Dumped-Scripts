#[acmd_script( agent = "lucina", script = "expression_finaldashend", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_finaldashend(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        ItemModule::set_have_item_visibility(boma, false);
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        AREA_WIND_2ND_arg10(0, 3, 135, 8, 1, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 7.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_elecattack"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 11.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 145, 9, 0.9, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 21.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 155, 10, 0.8, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 31.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 165, 11, 0.7, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 34.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 41.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 175, 12, 0.6, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 51.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 185, 13, 0.5, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 61.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 200, 14, 0.4, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 71.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 220, 15, 0.2, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 81.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(0, 3, 240, 16, 0.2, -4, 8, 30, 20, 50);
    }
    frame(lua_state, 91.0);
    if is_excute(fighter) {
        AreaModule::erase_wind(boma, 0);
    }
}