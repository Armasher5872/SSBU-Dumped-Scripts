unsafe extern "C" fn game_specialairlwattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 5.0);
    if WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_ATTACK_UP) {
        if is_excute(agent) {
            ATTACK(agent, 0, 0, Hash40::new("legl"), 13.0, 90, 95, 0, 50, 8.5, 10.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
            ATTACK(agent, 1, 0, Hash40::new("legl"), 13.0, 90, 95, 0, 50, 7.0, 2.5, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
            AttackModule::set_force_reaction(boma, 0, true, false);
            AttackModule::set_force_reaction(boma, 1, true, false);
        }
        else {
        if WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_ATTACK_UP_SIDE) {
            if is_excute(agent) {
                ATTACK(agent, 0, 0, Hash40::new("legl"), 12.0, 60, 95, 0, 62, 7.5, 10.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                ATTACK(agent, 1, 0, Hash40::new("legl"), 12.0, 60, 95, 0, 62, 6.0, 2.5, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                AttackModule::set_force_reaction(boma, 0, true, false);
                AttackModule::set_force_reaction(boma, 1, true, false);
            }
            else {
            if WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_ATTACK_SIDE) {
                if is_excute(agent) {
                    ATTACK(agent, 0, 0, Hash40::new("legl"), 11.0, 361, 85, 0, 62, 6.0, 10.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                    ATTACK(agent, 1, 0, Hash40::new("legl"), 11.0, 361, 85, 0, 62, 5.0, 2.5, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                    AttackModule::set_force_reaction(boma, 0, true, false);
                    AttackModule::set_force_reaction(boma, 1, true, false);
                }
                else {
                if WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_ATTACK_DOWN_SIDE) {
                    if is_excute(agent) {
                        ATTACK(agent, 0, 0, Hash40::new("legl"), 12.0, 25, 72, 0, 62, 7.5, 10.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                        ATTACK(agent, 1, 0, Hash40::new("legl"), 12.0, 25, 72, 0, 62, 6.0, 2.5, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                        AttackModule::set_force_reaction(boma, 0, true, false);
                        AttackModule::set_force_reaction(boma, 1, true, false);
                    }
                    else {
                    if WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_ATTACK_DOWN) {
                        if is_excute(agent) {
                            ATTACK(agent, 0, 0, Hash40::new("legl"), 13.0, 270, 65, 0, 25, 8.5, 10.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                            ATTACK(agent, 1, 0, Hash40::new("legl"), 13.0, 45, 95, 0, 50, 8.5, 10.0, 0.0, 0.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 5, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_KICK);
                            AttackModule::set_force_reaction(boma, 0, true, false);
                            AttackModule::set_force_reaction(boma, 1, true, false);
                        }
                    }
                }
            }
        }
    }
}
}
}
}
frame(lua_state, 20.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
}
}

unsafe extern "C" fn effect_specialairlwattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        FLASH(agent, 1, 1, 1, 0);
    }
    frame(lua_state, 2.0);
    if !WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_APPEAR_EFFECT_1) {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("gekkouga_migawari_appearance"), Hash40::new("top"), 0, 10, 0, 0, 0, 0, 1.1, 0, 0, 0, 0, 0, 0, false);
            LAST_EFFECT_SET_RATE(agent, 1.3);
            WorkModule::on_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_APPEAR_EFFECT_1);
        }
    }
    frame(lua_state, 3.0);
    if !WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_APPEAR_EFFECT_2) {
        if is_excute(agent) {
            EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("gekkouga_pump_line"), Hash40::new("top"), 0, 10, 17, 0, 180, 0, 1, true);
            WorkModule::on_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_APPEAR_EFFECT_2);
        }
    }
    frame(lua_state, 19.0);
    if is_excute(agent) {
        COL_NORMAL(agent);
    }
}

unsafe extern "C" fn sound_specialairlwattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if !WorkModule::is_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_APPEAR_SOUND) {
        frame(lua_state, 2.0);
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("vc_gekkouga_004"));
            PLAY_SE(agent, Hash40::new("se_gekkouga_special_l03"));
            WorkModule::on_flag(boma, *FIGHTER_GEKKOUGA_STATUS_SPECIAL_LW_FLAG_APPEAR_SOUND);
        }
    }
}

unsafe extern "C" fn expression_specialairlwattack(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        VisibilityModule::set_whole(boma, true);
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackl"), 0);
    }
}