unsafe extern "C" fn game_speciallwcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    FighterSpecializer_Demon::set_devil(boma, true, 5);
    if is_excute(agent) {
        FT_CATCH_STOP(agent, 2, 1);
        ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 5.0, 70, 30, 0, 60, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
    }
    frame(lua_state, 2.0);
    is_vr_mode();
    if(0x3cfb70(false, false)){
        battle_object_module_accessor();
        methodlib::L2CValue::L2CValue(void*)();
    }
    else{
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
is_one_on_one_including_thrown();
if(0x3cfb70(false, true)){
    if is_excute(agent) {
        battle_object_module_accessor();
        methodlib::L2CValue::L2CValue(void*)();
    }
    else{
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
}
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_scale();
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const();
check_disabled_motion_camera_of_stage();
if WorkModule::is_flag(boma, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_ENABLE_THROW_MOTION_CAMERA) {
if WorkModule::is_flag(boma, *FIGHTER_DEMON_STATUS_SPECIAL_LW_FLAG_ENABLE_MOTION_CAMERA) {
    if !WorkModule::is_flag(boma, *FIGHTER_DEMON_INSTANCE_WORK_ID_FLAG_DISABLE_THROW_MOTION_CAMERA) {
        if is_excute(agent) {
            REQ_MOTION_CAMERA(agent, 0x1857a8bd1d, false);
        }
    }
}
}
frame(lua_state, 3.0);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Demon::set_devil(boma, true, 5);
}

unsafe extern "C" fn effect_speciallwcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_start"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_start_aura"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_start_elec"), Hash40::new("bust"), 0, 0, 1, 0, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("sys_catch"), Hash40::new("handl"), 0, 0, 0, 0, 0, 0, 1, true);
        FLASH(agent, 0.25, 0.08, 0.6, 0.4);
        FLASH_SET_DIRECTION(agent, -1, 0, 0);
        BURN_COLOR(agent, 8, 3, 36, 0.4);
        FLASH_FRM(agent, 3, 0.25, 0.08, 0.6, 0);
        BURN_COLOR_FRAME(agent, 3, 8, 3, 36, 0);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        EFFECT_DETACH_KIND(agent, Hash40::new("demon_devil_start"), -1);
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_aura2"), Hash40::new("handl"), 0.7, 0, 0, 0, 0, 0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
    }
    frame(lua_state, 20.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_heavens_start"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1.5, true);
        EFFECT_OFF_KIND(agent, Hash40::new("demon_devil_aura2"), false, true);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_aura2"), Hash40::new("handl"), 0.7, 0, 0, 0, 0, 0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
    }
    frame(lua_state, 48.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_heavens_speedline"), Hash40::new("rot"), 0, -5, -3, 0, 180, 0, 1, true);
    }
    frame(lua_state, 50.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("demon_devil_aura2"), Hash40::new("handl"), 0.7, 0, 0, 0, 0, 0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
    }
}

unsafe extern "C" fn sound_speciallwcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_demon_special_l01"));
        PLAY_SE(agent, Hash40::new("se_demon_ragedrive_01"));
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_spark"));
        PLAY_SE(agent, Hash40::new("se_demon_ragedrive_hit"));
    }
    frame(lua_state, 6.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_up"));
    }
    frame(lua_state, 44.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_ragedrive_whoosh_down"));
    }
    frame(lua_state, 46.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_demon_ragedrive_02"));
    }
}

unsafe extern "C" fn expression_speciallwcatch(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_80_attackl"), 7, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 13.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_furafura"), 16, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}