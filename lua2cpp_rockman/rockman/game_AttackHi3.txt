frame(Frame=6)
0xf4ae0()
0xf4ae0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf4ae0()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=17.0, Angle=85, KBG=100, FKB=0, BKB=38, Size=2.5, X=0.0, Y=6.0, Z=8.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.6, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_PUNCH)
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
}
frame(Frame=7)
0xf4ae0()
0xf4ae0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf4ae0()){
	ATTACK(ID=0, Part=0, Bone=hash40("armr"), Damage=12.0, Angle=85, KBG=80, FKB=0, BKB=40, Size=6.5, X=4.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PUNCH)
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
}
frame(Frame=10)
0xf4ae0()
0xf4ae0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf4ae0()){
	ATTACK(ID=0, Part=0, Bone=hash40("armr"), Damage=8.0, Angle=70, KBG=80, FKB=0, BKB=70, Size=5.0, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PUNCH)
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	ATTACK(ID=1, Part=0, Bone=hash40("armr"), Damage=8.0, Angle=70, KBG=80, FKB=0, BKB=70, Size=5.0, X=4.5, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_PUNCH)
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
	0xf4ae0()
}
frame(Frame=17)
0xf4ae0()
0xf4ae0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xf4ae0()){
	AttackModule::clear_all()
}
