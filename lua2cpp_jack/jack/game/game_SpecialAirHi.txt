methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	ArticleModule::generate_article(FIGHTER_JACK_GENERATE_ARTICLE_WIREROPE)
	0x3046e0()
}
frame(Frame=8)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	WorkModule::on_flag(Flag=FIGHTER_JACK_STATUS_SPECIAL_HI_FLAG_REVERSE_LR)
	0x3046e0()
}
frame(Frame=12)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_AIR_LASSO_FLAG_CHECK)
	0x3046e0()
	WorkModule::on_flag(Flag=FIGHTER_STATUS_AIR_LASSO_FLAG_HANG_IMMIDIATE)
	0x3046e0()
}
frame(Frame=13)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	GroundModule::select_cliff_hangdata(FIGHTER_JACK_CLIFF_HANG_DATA_AIR_LASSO)
	0x3046e0()
	WorkModule::off_flag(Flag=FIGHTER_STATUS_AIR_LASSO_FLAG_HANG_IMMIDIATE)
	0x3046e0()
}
frame(Frame=15)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	WorkModule::off_flag(Flag=FIGHTER_STATUS_AIR_LASSO_FLAG_CHECK)
	0x3046e0()
}
frame(Frame=19)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	ArticleModule::change_status(FIGHTER_JACK_GENERATE_ARTICLE_WIREROPE, WEAPON_JACK_WIREROPE_STATUS_KIND_EXTEND)
	0x3046e0()
	0x3046e0()
	AreaModule::reset_area(FIGHTER_JACK_AREA_KIND_ITEM_CATCH)
	0x3046e0()
	ENABLE_AREA(FIGHTER_JACK_AREA_KIND_ITEM_CATCH)
	0x3046e0()
	AreaModule::reset_area(FIGHTER_JACK_AREA_KIND_ITEM_CATCH_ADD)
	0x3046e0()
	ENABLE_AREA(FIGHTER_JACK_AREA_KIND_ITEM_CATCH_ADD)
	0x3046e0()
}
frame(Frame=20)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	ATTACK(ID=0, Part=0, Bone=hash40("throw"), Damage=5.0, Angle=55, KBG=56, FKB=0, BKB=76, Size=2.7, X=1.5, Y=2.0, Z=2.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=5.0, Angle=55, KBG=56, FKB=0, BKB=76, Size=2.7, X=0.0, Y=22.0, Z=3.2, X2=0.0, Y2=38.0, Z2=10.6, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_OBJECT)
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
	0x3046e0()
}
frame(Frame=21)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	AttackModule::clear(ID=1)
	0x3046e0()
}
frame(Frame=23)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	UNABLE_AREA(FIGHTER_JACK_AREA_KIND_ITEM_CATCH_ADD)
	0x3046e0()
}
frame(Frame=24)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	AttackModule::clear_all()
}
frame(Frame=25)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS)
	0x3046e0()
	0x3046e0()
	0x3046e0()
}
frame(Frame=26)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	AttackModule::clear_all()
}
frame(Frame=27)
0x3046e0()
0x3046e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x3046e0()){
	ArticleModule::change_status(FIGHTER_JACK_GENERATE_ARTICLE_WIREROPE, WEAPON_JACK_WIREROPE_STATUS_KIND_BACK)
	0x3046e0()
	0x3046e0()
	search(MA_MSC_CMD_SEARCH_SEARCH_SCH_CLR_ALL)
	0x3046e0()
	0x3046e0()
	UNABLE_AREA(FIGHTER_JACK_AREA_KIND_ITEM_CATCH)
	0x3046e0()
}
