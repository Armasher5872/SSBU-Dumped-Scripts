if macros::is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_NO_FLIP_SQUID);
}WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
if macros::is_excute(fighter) {
ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID);
}}MotionModule::motion_kind(boma);
MotionModule::frame(fighter.module_accessor, 0x00000002b0);
MotionModule::rate(fighter.module_accessor, -1407754940);
methodlib::L2CValue::as_hash()const(-1407754940, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false);
ArticleModule::change_motion(boma);
if macros::is_excute(fighter) {
ArticleModule::set_frame(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID);
ArticleModule::set_rate(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID);
ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID);
StatusModule::status_kind(boma);
methodlib::L2CValue::operator==(lib::L2CValueconst&)const(0, *FIGHTER_STATUS_KIND_REBIRTH);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_FORCE_LOUPE);
}get_value_float(0, *SO_VAR_FLOAT_LR);
if(0x13d500(0, 0)){;
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(*FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, Hash40::new("throw_b_l"));
ArticleModule::change_motion(boma);
}else{;
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(*FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, Hash40::new("throw_b_r"));
ArticleModule::change_motion(boma);
}}}if macros::is_excute(fighter) {
ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, 0, 9.0, 45, 70, 0, 70, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
ATTACK_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, 0, 3.0, 361, 100, 0, 40, 0.0, 1.0, *ATTACK_LR_CHECK_F, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_THROW);
}frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, true);
}frame(fighter.lua_state_agent, 13.0);
if macros::is_excute(fighter) {
VisibilityModule::set_whole(fighter.module_accessor, false);
}frame(fighter.lua_state_agent, 16.0);
if macros::is_excute(fighter) {
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_INSTANCE_WORK_ID_FLAG_REVERSE_LR_FINISH_CAMERA_THROW_ORBIT);
CHECK_FINISH_CAMERA(fighter, 17, 5);
FighterCutInManager::set_throw_finish_zoom_rate(fighter.module_accessor, 1.5);
FighterCutInManager::set_throw_finish_offset(fighter.module_accessor, 5, 0, 0);
}frame(fighter.lua_state_agent, 17.0);
if macros::is_excute(fighter) {
REVERSE_LR(fighter);
ATK_HIT_ABS(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, Hash40::new("throw"), *FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP, *FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO);
}frame(fighter.lua_state_agent, 43.0);
if macros::is_excute(fighter) {
VisibilityModule::set_whole(fighter.module_accessor, true);
}frame(fighter.lua_state_agent, 51.0);
if macros::is_excute(fighter) {
ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false);
}