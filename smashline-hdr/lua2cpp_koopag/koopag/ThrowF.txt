unsafe extern "C" fn effect_throwf(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 32.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_bomb_a"), Hash40::new("top"), 0, 25, 45, 0, 0, 0, 1.3, 0, 0, 0, 0, 0, 0, true);
    }
    frame(lua_state, 35.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_FLIP(agent, Hash40::new("sys_attack_arc_d"), Hash40::new("sys_attack_arc_d"), Hash40::new("top"), 0, 32, 15, 0, -10, 90, 3.2, true, *EF_FLIP_YZ);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 25, 0, -5, 0, 0, 0, 1.7, 0, 0, 0, 0, 0, 0, true);
        }
        else{
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -25, 0, -5, 0, 0, 0, 1.7, 0, 0, 0, 0, 0, 0, true);
        }
    }
}
frame(lua_state, 36.0);
if is_excute(agent) {
    EFFECT(agent, Hash40::new("sys_smash_flash_s"), Hash40::new("throw"), 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, true);
}
}

unsafe extern "C" fn sound_throwf(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_common_throw_01"));
    }
    wait(lua_state, 34.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_common_throw_02"));
    }
}

unsafe extern "C" fn expression_throwf(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 34.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
    }
}