unsafe extern "C" fn game_finalairhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_XLU);
        CAM_ZOOM_OUT(agent);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 2.0, 361, 100, 100, 0, 15.0, 0.0, 9.0, 4.0, Some(0.0), Some(9.0), Some(20.0), 2.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
        AttackModule::set_no_dead_all(boma, true, false);
        AttackModule::set_no_uniq_effect_all(boma, true, false);
        PostureModule::scale(boma, 1, 0);
        0x1462c0(1128533056, 2.5);
        CAM_ZOOM_IN_arg5(0, 0);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -10, 7);
        }
        else{
        if is_excute(agent) {
            camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 10, 7);
        }
    }
}
wait(lua_state, 3.0);
if is_excute(agent) {
    AttackModule::clear_all(boma);
}
frame(lua_state, 45.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
}