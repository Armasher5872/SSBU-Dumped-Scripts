unsafe extern "C" fn game_final(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 0, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 10, 70);
    }
    if !WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(agent.lua_state_agent, 5.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 40);
            macros::REQ_FINAL_START_CAMERA(agent, Hash40::new("d04final.nuanmb"), true);
            macros::FT_START_CUTIN(agent);
        }
        else{
        if macros::is_excute(agent) {
            macros::FT_START_CUTIN(agent);
        }
        if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
            if macros::is_excute(agent) {
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
                PostureModule::scale(agent.module_accessor, 3, 0);
                0x16e550(1760657085, 1.8);
                CAM_ZOOM_IN_arg5(0, 0);
            }
            else{
            if macros::is_excute(agent) {
                camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
                PostureModule::scale(agent.module_accessor, 3, 0);
                0x16e550(1760657085, 1.8);
                CAM_ZOOM_IN_arg5(0, 0);
            }
        }
    }
}
}
frame(agent.lua_state_agent, 10.0);
macros::FT_MOTION_RATE(agent, 15.0);
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 1.0, 365, 100, 48, 17, 11.0, 0.0, 8.0, 8.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_paralyze"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 1.0, 365, 100, 48, 17, 11.0, 0.0, 8.0, 8.0, None, None, None, 0.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, true, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_paralyze"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
AttackModule::set_no_uniq_effect_all(agent.module_accessor, true, false);
AttackModule::set_damage_shake_scale(agent.module_accessor, 0.18);
}
PostureModule::scale(agent.module_accessor, 0);
if(0x16e550(1760657085, 1.4)){
if macros::is_excute(agent) {
    AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 15.0, y: 0.0}, 5, false);
    AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 15.0, y: 0.0}, 5, false);
}
else{
PostureModule::scale(agent.module_accessor);
if(0x16e550(0, 0.5)){
    if macros::is_excute(agent) {
        AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 20.0, y: 0.0}, 2, false);
        AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 20.0, y: 0.0}, 2, false);
    }
    else{
    if macros::is_excute(agent) {
        AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 13.0, y: 5.0}, 5, false);
        AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 15.0, y: 4.0}, 10, false);
    }
}
}
}
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 13.0);
macros::FT_MOTION_RATE(agent, 1.0);
frame(agent.lua_state_agent, 22.0);
frame(agent.lua_state_agent, 25.0);
if macros::is_excute(agent) {
macros::CAM_ZOOM_OUT(agent);
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 5.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 5.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
AttackModule::set_optional_hit_effect(agent.module_accessor, 0, Hash40::new("ken_final_shippu_hit_rush"));
AttackModule::set_optional_hit_effect(agent.module_accessor, 1, Hash40::new("ken_final_shippu_hit_rush"));
}
PostureModule::scale(agent.module_accessor, 0);
if(0x16e550(1760657085, 1.4)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 12.0, y: 5.0}, 13, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 15.0, y: 20.0}, 5, false);
}
else{
PostureModule::scale(agent.module_accessor);
if(0x16e550(0, 0.5)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 28.0, y: 5.0}, 13, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 37.0, y: 10.0}, 15, false);
}
else{
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 15.0, y: 1.0}, 9, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 19.0, y: 5.0}, 15, false);
}
}
}
}
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 40.0);
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 5.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 5.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
AttackModule::set_optional_hit_effect(agent.module_accessor, 0, Hash40::new("ken_final_shippu_hit_rush"));
AttackModule::set_optional_hit_effect(agent.module_accessor, 1, Hash40::new("ken_final_shippu_hit_rush"));
}
PostureModule::scale(agent.module_accessor, 0);
if(0x16e550(1760657085, 1.4)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 13.0, y: 4.0}, 13, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 13.0, y: 7.0}, 15, false);
}
else{
PostureModule::scale(agent.module_accessor);
if(0x16e550(0, 0.5)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 37.0, y: 4.0}, 13, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 37.0, y: 7.0}, 15, false);
}
else{
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 20.0, y: 2.0}, 13, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 20.0, y: 4.0}, 15, false);
}
}
}
}
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 55.0);
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 8.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 8.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
AttackModule::set_optional_hit_effect(agent.module_accessor, 0, Hash40::new("ken_final_shippu_hit_rush"));
AttackModule::set_optional_hit_effect(agent.module_accessor, 1, Hash40::new("ken_final_shippu_hit_rush"));
}
PostureModule::scale(agent.module_accessor, 0);
if(0x16e550(1760657085, 1.4)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 13.0, y: 8.0}, 10, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 13.0, y: 10.0}, 15, false);
}
else{
PostureModule::scale(agent.module_accessor);
if(0x16e550(0, 0.5)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 46.0, y: 8.0}, 10, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 46.0, y: 12.0}, 15, false);
}
else{
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 22.0, y: 4.0}, 10, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 22.0, y: 7.0}, 15, false);
}
}
}
}
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 64.0);
if macros::is_excute(agent) {
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 8.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
macros::ATTACK(agent, 1, 0, Hash40::new("top"), 3.2, 45, 150, 40, 0, 9.0, 0.0, 11.0, 8.0, Some(0.0), Some(11.0), Some(10.0), 1.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
AttackModule::set_optional_hit_effect(agent.module_accessor, 0, Hash40::new("ken_final_shippu_hit_rush"));
AttackModule::set_optional_hit_effect(agent.module_accessor, 1, Hash40::new("ken_final_shippu_hit_rush"));
}
PostureModule::scale(agent.module_accessor, 0);
if(0x16e550(1760657085, 1.4)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 14.0, y: 8.0}, 14, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 16.0, y: 10.0}, 15, false);
}
else{
PostureModule::scale(agent.module_accessor);
if(0x16e550(0, 0.5)){
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 44.0, y: 8.0}, 14, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 52.0, y: 10.0}, 15, false);
}
else{
if macros::is_excute(agent) {
AttackModule::set_vec_target_pos(agent.module_accessor, 0, Hash40::new("top"), &Vector2f{x: 22.0, y: 4.0}, 14, false);
AttackModule::set_vec_target_pos(agent.module_accessor, 1, Hash40::new("top"), &Vector2f{x: 26.0, y: 5.0}, 15, false);
}
}
}
}
}
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
frame(agent.lua_state_agent, 76.0);
if macros::is_excute(agent) {
WorkModule::on_flag(agent.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_FINAL_FLAG_LOCK_ATTACK);
macros::ATTACK(agent, 0, 0, Hash40::new("top"), 4.0, 50, 95, 40, 0, 11.0, 0.0, 8.0, 8.0, Some(0.0), Some(10.0), Some(8.0), 3.0, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KEN_FINAL01, *ATTACK_REGION_KICK);
AttackModule::set_no_dead_all(agent.module_accessor, true, false);
}
PostureModule::scale(agent.module_accessor, 0);
0x16e550(1760657085, 1.4);
PostureModule::scale(agent.module_accessor);
0x16e550(0, 0.5);
wait(agent.lua_state_agent, 1.0);
if macros::is_excute(agent) {
AttackModule::clear_all(agent.module_accessor);
}
if macros::is_excute(agent) {
WorkModule::on_flag(agent.module_accessor, *FIGHTER_RYU_STATUS_WORK_ID_FINAL_FLAG_BRANCH_HIT);
SlowModule::clear_whole(agent.module_accessor, 0);
}
}

unsafe extern "C" fn effect_final(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        EffectModule::req_screen(agent.module_accessor, Hash40::new("bg_ken_final_shippu"), false, false, false);
    }
    frame(agent.lua_state_agent, 9.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("ken_final_shippu_hold"), Hash40::new("top"), 0, 12, -1, 0, 0, 0, 1, true);
    }
    frame(agent.lua_state_agent, 10.0);
    if get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if macros::is_excute(agent) {
            macros::EFFECT_FOLLOW(agent, Hash40::new("ken_final_shippu_start"), Hash40::new("top"), -10, 15, 0, 0, 0, 0, 0.6, true);
        }
        else{
        if macros::is_excute(agent) {
            macros::EFFECT_FOLLOW(agent, Hash40::new("ken_final_shippu_start"), Hash40::new("top"), 10, 15, 0, 0, 0, 0, 0.6, true);
        }
    }
}
frame(agent.lua_state_agent, 23.0);
if macros::is_excute(agent) {
    macros::LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("ken_final_shippu_arc"), Hash40::new("ken_final_shippu_arc"), Hash40::new("top"), 0, 9, 0, -24, -60, 35, 1.3, true, *EF_FLIP_YZ);
    macros::LAST_EFFECT_SET_RATE(agent, 1.3);
}
frame(agent.lua_state_agent, 38.0);
if macros::is_excute(agent) {
    macros::LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("ken_final_shippu_arc"), Hash40::new("ken_final_shippu_arc"), Hash40::new("top"), 0, 10.5, 0, -32, -50, 48, 1.3, true, *EF_FLIP_YZ);
    macros::LAST_EFFECT_SET_RATE(agent, 1.3);
}
frame(agent.lua_state_agent, 54.0);
if macros::is_excute(agent) {
    macros::LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("ken_final_shippu_arc"), Hash40::new("ken_final_shippu_arc"), Hash40::new("top"), 0, 5, 0, -20, -65, 28, 1.3, true, *EF_FLIP_YZ);
    macros::LAST_EFFECT_SET_RATE(agent, 1.5);
}
frame(agent.lua_state_agent, 61.0);
if macros::is_excute(agent) {
    macros::LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("ken_final_shippu_arc"), Hash40::new("ken_final_shippu_arc"), Hash40::new("top"), 0, 10.5, 0, -24, -60, 35, 1.3, true, *EF_FLIP_YZ);
    macros::LAST_EFFECT_SET_RATE(agent, 1.3);
}
frame(agent.lua_state_agent, 75.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW(agent, Hash40::new("ken_final_shippu_speedline"), Hash40::new("top"), 0, 7, -8, -20, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 76.0);
if macros::is_excute(agent) {
    methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("kneer"), 30, 30, 0, 0, 0, true);
    methodlib::L2CValue::as_hash()const();
    EffectModule::request_post_effect_line_circle(agent.module_accessor);
}
frame(agent.lua_state_agent, 82.0);
if macros::is_excute(agent) {
    EffectModule::remove_post_effect_line(agent.module_accessor, 4, true);
}
frame(agent.lua_state_agent, 90.0);
if macros::is_excute(agent) {
    EffectModule::remove_screen(agent.module_accessor, Hash40::new("bg_ken_final_shippu"), -1);
}
}

unsafe extern "C" fn sound_final(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_01"));
    }
    frame(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_ken_final03"));
    }
    frame(agent.lua_state_agent, 14.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_02"));
    }
    frame(agent.lua_state_agent, 23.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_03"));
        macros::PLAY_SE(agent, Hash40::new("se_ken_final_swing_m"));
    }
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_ken_final04"));
    }
    frame(agent.lua_state_agent, 38.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_04"));
        macros::PLAY_SE(agent, Hash40::new("se_ken_final_swing_l"));
    }
    frame(agent.lua_state_agent, 54.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_05"));
        macros::PLAY_SE(agent, Hash40::new("se_ken_final_swing_s"));
    }
    frame(agent.lua_state_agent, 62.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_03"));
        macros::PLAY_SE(agent, Hash40::new("se_ken_final_swing_m"));
    }
    frame(agent.lua_state_agent, 75.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_ken_final01_04"));
        macros::PLAY_SE(agent, Hash40::new("se_ken_final_swing_l"));
    }
}

unsafe extern "C" fn expression_final(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        macros::AREA_WIND_2ND_RAD_arg9(agent, 1, 4, 0.01, 8, 0.6, -4, 12, 35, 80);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        macros::START_INFO_FLASH_EYE(agent);
    }
    frame(agent.lua_state_agent, 23.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitl"), 13, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 25.0);
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackl"), 0);
    }
    frame(agent.lua_state_agent, 38.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm"), 13, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 40.0);
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 13);
    }
    frame(agent.lua_state_agent, 53.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm"), 7, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 62.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm"), 7, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 71.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitll_l"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 76.0);
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackll"), 0);
    }
}