#[acmd_script( agent = "master", script = "expression_attackairhi", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_attackairhi(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        ItemModule::set_have_item_visibility(boma, false);
        WorkModule::on_flag(boma, *FIGHTER_MASTER_INSTANCE_WORK_ID_FLAG_SWORD_OFF_EFFECT_AURA);
    }
    frame(lua_state, 8.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_attacks"), 2, false);
        ControlModule::set_rumble(boma);
    }
    frame(lua_state, 10.0);
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
    }
    frame(lua_state, 11.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, true);
        ControlModule::set_rumble(boma);
    }
    wait(lua_state, 6.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, true);
        ControlModule::set_rumble(boma);
    }
    wait(lua_state, 6.0);
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohits"), 4, true);
        ControlModule::set_rumble(boma);
    }
    wait(lua_state, 6.0);
}