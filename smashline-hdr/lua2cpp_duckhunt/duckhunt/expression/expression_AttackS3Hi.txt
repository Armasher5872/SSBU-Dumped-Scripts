#[acmd_script( agent = "duckhunt", script = "expression_attacks3hi", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attacks3hi(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("duckhead"), *ATTACK_DIRECTION_X, *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_Z);
        AttackModule::set_attack_reference_joint_id(boma);
        VisibilityModule::set_int64(boma, Hash40::new("body"), Hash40::new("body_openwing"));
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 5);
    }
    frame(lua_state, 6.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 8.0);
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
    }
    frame(lua_state, 21.0);
    if is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 5);
    }
    frame(lua_state, 41.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("body"), Hash40::new("body_normal"));
    }
}