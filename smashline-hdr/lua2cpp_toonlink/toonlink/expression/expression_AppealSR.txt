#[acmd_script( agent = "toonlink", script = "expression_appealsr", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appealsr(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ArticleModule::set_visibility_whole(boma, *FIGHTER_TOONLINK_GENERATE_ARTICLE_FAIRY, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
    }
    frame(lua_state, 5.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("shield") as i64, hash40("shield_back") as i64);
        VisibilityModule::set_int64(boma, hash40("sword") as i64, hash40("sword_back") as i64);
    }
    frame(lua_state, 92.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("shield") as i64, hash40("shield_normal") as i64);
        VisibilityModule::set_int64(boma, hash40("sword") as i64, hash40("sword_normal") as i64);
    }
}