#[acmd_script( agent = "kamui", script = "expression_attackairlw", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attackairlw(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        AttackModule::set_attack_reference_joint_id(boma, Hash40::new("rot"), AttackDirectionAxis(*ATTACK_DIRECTION_Y), AttackDirectionAxis(*ATTACK_DIRECTION_X), AttackDirectionAxis(*ATTACK_DIRECTION_Z));
    }
    frame(lua_state, 7.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("dragon"), Hash40::new("dragon_horn"));
    }
    frame(lua_state, 10.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
        VisibilityModule::set_int64(boma, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
    }
    frame(lua_state, 11.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("hair"), Hash40::new("hair_hide"));
        VisibilityModule::set_int64(boma, Hash40::new("dragon"), Hash40::new("dragon_spear_leg_lr"));
    }
    frame(lua_state, 12.0);
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_piercess"), 0);
    }
    frame(lua_state, 27.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("hair"), Hash40::new("hair_normal"));
    }
    frame(lua_state, 28.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
    }
    frame(lua_state, 30.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, Hash40::new("dragon"), Hash40::new("dragon_none"));
    }
}