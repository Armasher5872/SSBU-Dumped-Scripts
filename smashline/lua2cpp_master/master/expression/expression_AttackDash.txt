#[acmd_script( agent = "master", script = "expression_attackdash" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_attackdash(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 4);
    }
    frame(fighter.lua_state_agent, 2.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 4, true);
    }
    frame(fighter.lua_state_agent, 6.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 8.0);
    if macros::is_excute(fighter) {
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 3, 0);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 3, 4);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashl"), 9, 1);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashl"), 9, 2);
        macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashl"), 9, 3);
    }
    frame(fighter.lua_state_agent, 35.0);
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 10);
    }
}