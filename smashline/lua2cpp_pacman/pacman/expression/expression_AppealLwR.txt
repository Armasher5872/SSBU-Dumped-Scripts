#[acmd_script( agent = "pacman", script = "expression_appeallwr", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appeallwr(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(fighter.lua_state_agent, 8.0);
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, hash40("fairy") as i64, hash40("fairy_disp") as i64);
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
        MotionModule::set_rate_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(fighter.lua_state_agent, 13.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 5);
    }
    frame(fighter.lua_state_agent, 18.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
    }
    frame(fighter.lua_state_agent, 23.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(fighter.lua_state_agent, 28.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
    }
    frame(fighter.lua_state_agent, 33.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(fighter.lua_state_agent, 35.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(fighter.lua_state_agent, 38.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(fighter.lua_state_agent, 43.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(fighter.lua_state_agent, 48.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 0);
    }
    frame(fighter.lua_state_agent, 53.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 1);
    }
    frame(fighter.lua_state_agent, 56.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(fighter.lua_state_agent, 58.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
    }
    frame(fighter.lua_state_agent, 63.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(fighter.lua_state_agent, 68.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 2);
    }
    frame(fighter.lua_state_agent, 73.0);
    if macros::is_excute(fighter) {
        MotionModule::set_frame_partial(fighter.module_accessor, *FIGHTER_PACMAN_MOTION_PART_SET_KIND_MATERIAL, 3);
    }
    frame(fighter.lua_state_agent, 87.0);
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, hash40("fairy") as i64, hash40("fairy_disp_off") as i64);
    }
    frame(fighter.lua_state_agent, 93.0);
    if macros::is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 4);
    }
}