frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
	macros::EFFECT(fighter, Hash40::new("sys_smash_flash"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, 5, 5, 5, 0, 0, 0, false);
}
wait(fighter.lua_state_agent, 4.0);
wait(fighter.lua_state_agent, 4.0);
wait(fighter.lua_state_agent, 4.0);
frame(fighter.lua_state_agent, 13.0);
if macros::is_excute(fighter) {
	macros::FLASH(fighter, 1, 1, 0.502, 0.549);
}
frame(fighter.lua_state_agent, 14.0);
if macros::is_excute(fighter) {
	macros::FLASH_FRM(fighter, 5, 1, 1, 0.502, 0);
}
frame(fighter.lua_state_agent, 18.0);
if macros::is_excute(fighter) {
	macros::EFFECT_FOLLOW_FLIP(fighter, Hash40::new("donkey_giantpunch"), Hash40::new("donkey_giantpunch"), Hash40::new("top"), 0, 11.5, 17, 17, -10, 0, 1, true, *EF_FLIP_YZ);
	macros::EFFECT_FOLLOW_FLIP(fighter, Hash40::new("donkey_giantpunch_max"), Hash40::new("donkey_giantpunch_max"), Hash40::new("top"), 0, 11.5, 17, 17, -10, 0, 1, true, *EF_FLIP_YZ);
}
frame(fighter.lua_state_agent, 19.0);
if macros::is_excute(fighter) {
	macros::COL_NORMAL(fighter);
	macros::LANDING_EFFECT(fighter, Hash40::new("sys_h_smoke_b"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
	macros::EFFECT_FOLLOW_FLIP(fighter, Hash40::new("donkey_giantpunch_impact"), Hash40::new("donkey_giantpunch_impact"), Hash40::new("top"), -2, 6, 31, 0, 0, 0, 1.5, true, *EF_FLIP_YZ);
	macros::LAST_EFFECT_SET_COLOR(fighter, 1, 0.992, 0.04);
}
frame(fighter.lua_state_agent, 21.0);
for(4 Iterations){;
if macros::is_excute(fighter) {
	macros::EFFECT_FOLLOW(fighter, Hash40::new("donkey_giantpunch_hold"), Hash40::new("arml"), 0, 0, 0, 0, 9, 0, 1, true);
}
wait(fighter.lua_state_agent, 5.0);
}
