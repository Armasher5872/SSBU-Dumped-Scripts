frame(Frame=4)
0x112490()
0x112490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x112490()){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD)
	0x112490()
}
frame(Frame=9)
0x112490()
0x112490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x112490()){
	ATTACK(ID=0, Part=0, Bone=hash40("kneer"), Damage=10.0, Angle=30, KBG=70, FKB=0, BKB=70, Size=4.2, X=8.0, Y=-0.5, Z=0.0, X2=-2.0, Y2=0.0, Z2=0.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.3, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0x112490()
	0x112490()
}
wait(Frames=2)
0x112490()
0x112490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x112490()){
	AttackModule::clear_all()
}
frame(Frame=17)
0x112490()
0x112490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x112490()){
	ATTACK(ID=0, Part=0, Bone=hash40("kneer"), Damage=12.0, Angle=30, KBG=68, FKB=0, BKB=70, Size=4.6, X=8.0, Y=-0.5, Z=0.0, X2=-2.0, Y2=0.0, Z2=0.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.3, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	0x112490()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0x112490()
	0x112490()
}
wait(Frames=2)
0x112490()
0x112490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x112490()){
	AttackModule::clear_all()
}
