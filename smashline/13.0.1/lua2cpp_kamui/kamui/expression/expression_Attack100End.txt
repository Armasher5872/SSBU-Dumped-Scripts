if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("havel"), *ATTACK_DIRECTION_Y, *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_X);
AttackModule::set_attack_reference_joint_id(boma);
ItemModule::set_have_item_visibility(boma, false);
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
}frame(lua_state, 1.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(boma);
}frame(lua_state, 2.0);
if is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
ControlModule::set_rumble(boma);
}frame(lua_state, 3.0);
if is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
}frame(lua_state, 38.0);
if is_excute(fighter) {
VisibilityModule::set_int64(boma, Hash40::new("hair"), Hash40::new("hair_normal"));
}frame(lua_state, 39.0);
if is_excute(fighter) {
VisibilityModule::set_int64(boma, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
}frame(lua_state, 42.0);
if is_excute(fighter) {
VisibilityModule::set_int64(boma, Hash40::new("dragon"), Hash40::new("dragon_none"));
}