methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101020()){
	ATTACK(ID=0, Part=0, Bone=hash40("neck"), Damage=2.0, Angle=70, KBG=50, FKB=0, BKB=20, Size=1.6, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=5, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_elec"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_ELEC, Type=ATTACK_REGION_BODY)
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	0x101020()
	JostleModule::set_status(false)
	0x101020()
}
