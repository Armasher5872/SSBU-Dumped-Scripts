frame(lua_state, 6.0);
if is_excute(fighter) {
WorkModule::on_flag(boma, /*Flag*/ *FIGHTER_STATUS_ATTACK_FLAG_START_SMASH_HOLD);
}frame(lua_state, 12.0);
WorkModule::is_flag(boma, *FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
if is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("sword"), 15.0, 92, 86, 0, 55, 4.3, 0.0, 7.0, 0.0, 0.0, 4.0, 0.0, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_SWORD);
ATTACK(fighter, 1, 0, Hash40::new("top"), 10.0, 70, 79, 0, 70, 3.5, 0.0, 9.0, 7.5, 0.0, 9.0, -3.0, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_SWORD);
}}wait(lua_state, 1.0);
if is_excute(fighter) {
AttackModule::set_size(boma, /*ID*/ 0, /*Size*/ 5.8);
AttackModule::clear(boma, /*ID*/ 1);
}wait(lua_state, 4.0);
if is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("sword"), 10.0, 70, 80, 0, 60, 2.5, 0.0, 8.0, 0.0, 0.0, 2.0, 0.0, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_elec"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_ELEC, *ATTACK_REGION_SWORD);
}frame(lua_state, 33.0);
if is_excute(fighter) {
AttackModule::clear_all(boma);
}frame(lua_state, 39.0);
if(0x1420d0(*FIGHTER_REFLET_INSTANCE_WORK_ID_INT_THUNDER_SWORD_CURRENT_POINT, 0)){;
WorkModule::is_flag(boma, *FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
if is_excute(fighter) {
VisibilityModule::set_int64(boma, Hash40::new("sword"), Hash40::new("sword_normal"));
WorkModule::off_flag(boma, /*Flag*/ *FIGHTER_REFLET_INSTANCE_WORK_ID_FLAG_THUNDER_SWORD_ON);
}}}if is_excute(fighter) {
battle_object();
methodlib::L2CValue::L2CValue(void*)();
}else{;
if is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("sword"), 9.0, 55, 84, 0, 45, 4.2, 0.0, 5.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, 0, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
}}wait(lua_state, 1.0);
if is_excute(fighter) {
AttackModule::set_size(boma, /*ID*/ 0, /*Size*/ 5.8);
}wait(lua_state, 4.0);
if is_excute(fighter) {
AttackModule::clear_all(boma);
}else{;
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
methodlib::L2CValue::as_pointer()const(1.5, 22);
throwaway_sword();
}