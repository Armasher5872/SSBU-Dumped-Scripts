unsafe extern "C" fn game_finalair(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        FT_SET_FINAL_SMASH_LIGHT(agent, true);
        ArticleModule::generate_article(boma, *FIGHTER_BUDDY_GENERATE_ARTICLE_BIGBIRD, false, -1);
        ArticleModule::generate_article(boma, *FIGHTER_BUDDY_GENERATE_ARTICLE_BIGBIRDBASE, false, -1);
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, -5, -5, 15, -10);
        SLOW_OPPONENT(agent, 15, 30);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 5.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 75);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            FT_START_CUTIN(agent);
            SlowModule::set_whole(boma, 2, 0);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 4, 0);
            0x18cc20(0, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
        }
    }
}
if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
    frame(lua_state, 13.0);
    if is_excute(agent) {
        SlowModule::clear_whole(boma);
        SlowModule::set_whole(boma, 4, 0);
    }
}
frame(lua_state, 18.0);
if is_excute(agent) {
    SlowModule::clear_whole(boma);
}
else{
frame(lua_state, 25.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
}
frame(lua_state, 30.0);
if is_excute(agent) {
QUAKE(agent, *CAMERA_QUAKE_KIND_L);
}
frame(lua_state, 31.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 13);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 9);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 18);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
PostureModule::scale(boma, 1, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 8);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 4);
PostureModule::scale(boma);
0x18cc20(0, 10);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 4.5);
PostureModule::scale(boma);
0x18cc20(0, 10);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 32.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 13);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 9);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 30);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
PostureModule::scale(boma, 1, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 8);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 4);
PostureModule::scale(boma);
0x18cc20(0, 10);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 10);
PostureModule::scale(boma);
0x18cc20(0, 10);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 33.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 11);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 35);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
PostureModule::scale(boma, 1, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 8);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 4);
PostureModule::scale(boma);
0x18cc20(0, 10);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 10);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 34.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 11);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 35);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
PostureModule::scale(boma, 1, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 8);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 4);
PostureModule::scale(boma);
0x18cc20(0, 10);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 20);
PostureModule::scale(boma);
0x18cc20(0, 10);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 35.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 11);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 40);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 36.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 11);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 45);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 37.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 11);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 45);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
frame(lua_state, 38.0);
if is_excute(agent) {
PostureModule::scale(boma, 0, 0, Hash40::new("top"), 10.0, 70, 100, 100, 0);
0x18cc20(0, 15);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 11);
PostureModule::scale(boma);
0x18cc20(0, 26);
PostureModule::scale(boma);
0x18cc20(0, 0);
PostureModule::scale(boma);
0x18cc20(0, 55);
PostureModule::scale(boma);
0x18cc20(0, 26);
ATTACK(agent, 0.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_SPEED, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
AttackModule::set_no_dead_all(boma, true, false);
}
wait(lua_state, 2.0);
if is_excute(agent) {
AttackModule::clear_all(boma);
REMOVE_FINAL_SCREEN_EFFECT(agent, 0);
}
frame(lua_state, 120.0);
if is_excute(agent) {
CAM_ZOOM_OUT(agent);
}
}