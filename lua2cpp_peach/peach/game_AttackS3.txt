frame(Frame=7)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	ATTACK(ID=0, Part=0, Bone=hash40("legr"), Damage=7.0, Angle=88, KBG=102, FKB=0, BKB=50, Size=4.0, X=0.0, Y=1.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	ATTACK(ID=1, Part=0, Bone=hash40("kneer"), Damage=7.0, Angle=88, KBG=102, FKB=0, BKB=50, Size=4.5, X=0.0, Y=1.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
wait(Frames=1)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	ATTACK(ID=2, Part=0, Bone=hash40("kneer"), Damage=8.0, Angle=75, KBG=102, FKB=0, BKB=55, Size=5.0, X=6.0, Y=1.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
wait(Frames=2)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	AttackModule::clear(ID=0)
	0xe4440()
	AttackModule::clear(ID=1)
	0xe4440()
	ATTACK(ID=2, Part=0, Bone=hash40("kneer"), Damage=6.0, Angle=92, KBG=120, FKB=0, BKB=40, Size=4.0, X=6.0, Y=1.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
	0xe4440()
}
frame(Frame=16)
0xe4440()
0xe4440()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe4440()){
	AttackModule::clear_all()
}
