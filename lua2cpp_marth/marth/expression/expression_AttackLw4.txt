methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=4)
0x139640()
0x139640()
execute(4)
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	methodlib::L2CValue::as_hash()const(hash40("haver"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	0x139640()
	0x139640()
	0x139640()
	0x139640()
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2, true)
	0x139640()
	0x139640()
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=4)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 14, false)
	ControlModule::set_rumble()
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=6)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	RUMBLE_HIT(hash40("rbkind_slashm"), 0, 0)
	0x139640()
	0x139640()
	0x139640()
	RUMBLE_HIT(hash40("rbkind_slashm"), 0, 1)
	0x139640()
	0x139640()
	0x139640()
	RUMBLE_HIT(hash40("rbkind_slashm"), 0, 2)
	0x139640()
	0x139640()
	0x139640()
	RUMBLE_HIT(hash40("rbkind_slashll"), 0, 3)
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=19)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
	0x139640()
	0x139640()
	0x139640()
}
frame(Frame=46)
0x139640()
0x139640()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x139640()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 12)
	0x139640()
	0x139640()
	0x139640()
	0x139640()
}
