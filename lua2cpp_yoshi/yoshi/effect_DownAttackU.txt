methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101b50()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
}
frame(Frame=13)
0x101b50()
0x101b50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101b50()){
	EFFECT_FOLLOW_FLIP_ALPHA(hash40("sys_attack_arc"), hash40("sys_attack_arc"), hash40("top"), 0, 5, 7, 0, -10, 15, 1, true, EF_FLIP_YZ, 0.6)
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
}
frame(Frame=17)
0x101b50()
0x101b50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101b50()){
	LANDING_EFFECT(hash40("sys_whirlwind_l"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false)
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
}
frame(Frame=19)
0x101b50()
0x101b50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101b50()){
	EFFECT_FOLLOW_FLIP_ALPHA(hash40("sys_attack_arc"), hash40("sys_attack_arc"), hash40("top"), 0, 5.5, -5, 0, 180, -10, 1, true, EF_FLIP_YZ, 0.6)
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
}
frame(Frame=44)
0x101b50()
0x101b50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x101b50()){
	LANDING_EFFECT(hash40("sys_down_smoke"), hash40("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false)
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
	0x101b50()
}
