if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("arml"), *ATTACK_DIRECTION_X, *ATTACK_DIRECTION_Z, *ATTACK_DIRECTION_Y);
AttackModule::set_attack_reference_joint_id(boma);
FT_ATTACK_ABS_CAMERA_QUAKE(fighter, *FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, *CAMERA_QUAKE_KIND_NONE);
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
}frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_horn"));
}frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_hide"));
}frame(fighter.lua_state_agent, 6.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_hide"));
}frame(fighter.lua_state_agent, 12.0);
if macros::is_excute(fighter) {
RUMBLE_HIT(fighter, Hash40::new("rbkind_pierces"), 0);
QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}frame(fighter.lua_state_agent, 26.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("hair"), Hash40::new("hair_normal"));
}frame(fighter.lua_state_agent, 27.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("front_hair"), Hash40::new("front_hair_normal"));
}frame(fighter.lua_state_agent, 30.0);
if macros::is_excute(fighter) {
VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("dragon"), Hash40::new("dragon_none"));
}