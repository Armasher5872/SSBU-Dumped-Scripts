unsafe extern "C" fn effect_escapebforesight(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ColorBlendModule::set_disable_camera_depth_influence(boma, true);
        COL_PRI(agent, 250);
        FLASH(agent, 0, 0.1, 0.6, 0.8);
        FLASH_SET_DIRECTION(agent, -1, 0, 0);
        EFFECT_FOLLOW(agent, Hash40::new("elight_foresight_move"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
        EFFECT(agent, Hash40::new("elight_foresight"), Hash40::new("top"), 0, 7.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        EFFECT(agent, Hash40::new("elight_foresight_lensflare"), Hash40::new("top"), 0, 7.5, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        EFFECT_FOLLOW(agent, Hash40::new("elight_foresight_body"), Hash40::new("hip"), 2, 0, 0, 0, 0, 90, 1, true);
    }
    wait(lua_state, 4.0);
    if is_excute(agent) {
        FOOT_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 0, 0, 0, 0, 180, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
    }
    wait(lua_state, 12.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 6, 0, 0.1, 0.6, 0);
    }
    wait(lua_state, 6.0);
    if is_excute(agent) {
        COL_NORMAL(agent);
        ColorBlendModule::set_disable_camera_depth_influence(boma, false);
    }
}

unsafe extern "C" fn sound_escapebforesight(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        PLAY_SEQUENCE(agent, Hash40::new("seq_elight_rnd_foresight"));
        PLAY_SE(agent, Hash40::new("se_elight_escapeforesight02"));
    }
    frame(lua_state, 27.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_elight_step_left_s"));
    }
    frame(lua_state, 34.0);
    if is_excute(agent) {
        PLAY_STEP(agent, Hash40::new("se_elight_step_left_m"));
    }
}

unsafe extern "C" fn expression_escapebforesight(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_79_special_escapeg"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 14.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 6);
    }
}