#[acmd_script( agent = "snake", script = "expression_appealhir", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_appealhir(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    frame(agent.lua_state_agent, 5.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3);
    }
    frame(agent.lua_state_agent, 8.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 3, true);
    }
    frame(agent.lua_state_agent, 12.0);
    if !macros::IS_EXIST_ARTICLE(agent, *FIGHTER_SNAKE_GENERATE_ARTICLE_CBOX) {
        if macros::is_excute(agent) {
            ArticleModule::generate_article(agent.module_accessor, *FIGHTER_SNAKE_GENERATE_ARTICLE_CBOX, false, -1);
            ArticleModule::have(agent.module_accessor, *FIGHTER_SNAKE_GENERATE_ARTICLE_CBOX, Hash40::new("haver"), ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL), *BATTLE_OBJECT_ID_INVALID as u32, false);
            ArticleModule::set_item_action(agent.module_accessor, *FIGHTER_SNAKE_GENERATE_ARTICLE_CBOX, *ITEM_SNAKECBOX_ACTION_ENABLE_PICKUP);
        }
    }
    frame(agent.lua_state_agent, 28.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohits"), 6, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}