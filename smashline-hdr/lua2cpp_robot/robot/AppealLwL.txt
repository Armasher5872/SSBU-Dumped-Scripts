unsafe extern "C" fn effect_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 52.0);
    for _ in 0..5 {
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_spin_wind_s"), Hash40::new("body"), 0.5, 0, 0, 0, 0, 90, 1.1, 2, 2, 2, 0, 0, 0, true);
        LAST_EFFECT_SET_ALPHA(agent, 0.4);
        LAST_EFFECT_SET_RATE(agent, 1.2);
    }
    wait(lua_state, 3.0);
}
}

unsafe extern "C" fn sound_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal04"));
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal01"));
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal03"));
    }
    frame(lua_state, 15.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
    frame(lua_state, 24.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_robot_appeal05"));
    }
    frame(lua_state, 47.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal01"));
    }
    frame(lua_state, 78.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
    frame(lua_state, 87.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal04"));
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal01"));
    }
    frame(lua_state, 93.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
    frame(lua_state, 97.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_robot_appeal03"));
    }
    frame(lua_state, 104.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
    }
}

unsafe extern "C" fn expression_appeallwl(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_TPART);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 5);
    }
    frame(lua_state, 5.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 48.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_elecattacks"), 26, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 87.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 10, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 96.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TPART, 5);
    }
    frame(lua_state, 98.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}