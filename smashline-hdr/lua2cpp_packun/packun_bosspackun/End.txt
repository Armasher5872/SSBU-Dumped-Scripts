unsafe extern "C" fn game_end(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 39.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attack_critical"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
        ATTACK(agent, 2, 0, Hash40::new("top"), 20.0, 40, 100, 0, 10, 20.0, 0.0, 10.0, 20.0, Some(0.0), Some(10.0), Some(35.0), 1.2, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
        ATTACK(agent, 3, 0, Hash40::new("top"), 20.0, 40, 100, 0, 10, 20.0, 0.0, 10.0, -20.0, Some(0.0), Some(10.0), Some(-35.0), 1.2, 1.0, *ATTACK_SETOFF_KIND_ON, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_BODY);
        AttackModule::set_final_finish_cut_in(boma, 2, true, true, -1, false);
        AttackModule::set_final_finish_cut_in(boma, 3, true, true, -1, false);
        QUAKE(agent, *CAMERA_QUAKE_KIND_L);
    }
    frame(lua_state, 40.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *WEAPON_PACKUN_BOSSPACKUN_STATUS_WORK_FLAG_END_CAPTURE);
    }
    wait(lua_state, 5.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
}

unsafe extern "C" fn effect_end(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 35.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("packun_final_iron_burn_l"), false, true);
        EFFECT_OFF_KIND(agent, Hash40::new("packun_final_iron_burn_r"), false, true);
    }
    frame(lua_state, 36.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_FLIP_ALPHA(agent, Hash40::new("packun_atk_air_lw_arc"), Hash40::new("packun_atk_air_lw_arc"), Hash40::new("top"), 20, 90, -50, 90, -15, 220, 4, true, *EF_FLIP_YZ, 1);
        EffectModule::set_disable_render_offset_last(boma);
        LAST_EFFECT_SET_RATE(agent, 0.95);
        EFFECT_FOLLOW_FLIP_ALPHA(agent, Hash40::new("packun_atk_air_lw_arc"), Hash40::new("packun_atk_air_lw_arc"), Hash40::new("top"), 20, 90, 50, 90, 15, 220, 4, true, *EF_FLIP_YZ, 1);
        EffectModule::set_disable_render_offset_last(boma);
        LAST_EFFECT_SET_RATE(agent, 0.95);
    }
    frame(lua_state, 39.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("packun_final_strike_ground"), Hash40::new("top"), -30, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.9);
        EFFECT(agent, Hash40::new("packun_final_strike_ground"), Hash40::new("top"), 30, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.9);
        LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), -30, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.5);
        LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 30, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, false);
        LAST_EFFECT_SET_RATE(agent, 0.5);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("packun_final_strike"), Hash40::new("top"), -30, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
            EFFECT(agent, Hash40::new("packun_final_strike"), Hash40::new("top"), 30, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
        else {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("packun_final_strike"), Hash40::new("top"), -30, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, false);
            EFFECT(agent, Hash40::new("packun_final_strike"), Hash40::new("top"), 30, 0, 0, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, false);
        }
    }
}
frame(lua_state, 44.0);
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 0, 0, -50, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, false);
        EFFECT(agent, Hash40::new("packun_final_end"), Hash40::new("top"), 0, 0, -50, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    else {
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 0, 0, -50, 0, 180, 0, 2, 0, 0, 0, 0, 0, 0, false);
        EFFECT(agent, Hash40::new("packun_final_end"), Hash40::new("top"), 0, 0, -50, 0, 180, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
}
}
}

unsafe extern "C" fn sound_end(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 27.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_packun_final03"));
    }
    frame(lua_state, 31.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_packun_final07"));
    }
}