methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=6)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 6)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=12)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 4, false)
	ControlModule::set_rumble()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=18)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 4, false)
	ControlModule::set_rumble()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=24)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohits"), 4, false)
	ControlModule::set_rumble()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=39)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 3, true)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=43)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x12c490()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_attackm"), 0, false)
	ControlModule::set_rumble()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=48)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 5)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
frame(Frame=53)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
}
