frame(Frame=5)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::on_flag(Flag=FIGHTER_STATUS_SUPER_JUMP_PUNCH_FLAG_REVERSE_LR)
	0x11a250()
}
frame(Frame=6)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.0, Angle=95, KBG=100, FKB=155, BKB=0, Size=8.5, X=0.0, Y=9.5, Z=10.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.4, SDI=0.5, Clang_Rebound=ATTACK_SETOFF_KIND_THRU, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_whip"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_WHIP)
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	AttackModule::set_no_damage_fly_smoke_all(true, false)
	0x11a250()
	0x11a250()
}
frame(Frame=7)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::on_flag(Flag=FIGHTER_MARTH_STATUS_SPECIAL_HI_FLAG_TRANS_MOVE)
	0x11a250()
	AttackModule::clear_all()
}
frame(Frame=9)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS)
	0x11a250()
	0x11a250()
	0x11a250()
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=1.5, Angle=367, KBG=100, FKB=80, BKB=0, Size=6.0, X=0.0, Y=26.0, Z=9.5, X2=0.0, Y2=6.0, Z2=7.5, Hitlag=0.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=true, ShieldDamage=0, Trip=0.0, Rehit=3, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_whip"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_WHIP)
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	AttackModule::set_no_damage_fly_smoke_all(true, false)
	0x11a250()
	0x11a250()
}
frame(Frame=20)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	notify_event_msc_cmd(0x2127e37c07, GROUND_CLIFF_CHECK_KIND_ALWAYS_BOTH_SIDES)
	0x11a250()
	0x11a250()
	0x11a250()
}
frame(Frame=21)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	AttackModule::clear(ID=0)
	0x11a250()
	ATTACK(ID=1, Part=1, Bone=hash40("top"), Damage=6.0, Angle=61, KBG=86, FKB=0, BKB=85, Size=6.0, X=0.0, Y=26.0, Z=9.5, X2=0.0, Y2=6.0, Z2=7.5, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_whip"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_WHIP)
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
	0x11a250()
}
frame(Frame=22)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	AttackModule::clear_all()
}
frame(Frame=32)
0x11a250()
0x11a250()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x11a250()){
	WorkModule::on_flag(Flag=FIGHTER_SIMON_STATUS_SPECIAL_HI_FLAG_MOVE)
	0x11a250()
}
