unsafe extern "C" fn game_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 40);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            FT_START_CUTIN(agent);
        }
    }
    frame(lua_state, 15.0);
    if is_excute(agent) {
        SlowModule::set_whole(boma, 3, 0);
    }
    frame(lua_state, 25.0);
    if is_excute(agent) {
        SlowModule::clear_whole(boma);
    }
    else {
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PostureModule::scale(boma, 3, 0);
        0x1cb400(-460198162, 2.0);
        CAM_ZOOM_IN_arg5(0, 0);
        FT_START_CUTIN(agent);
    }
}
frame(lua_state, 25.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 45.0);
if is_excute(agent) {
    WorkModule::on_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_FINAL_FLAG_START_CLIMAX_GAUGE);
}
frame(lua_state, 49.0);
if is_excute(agent) {
    WorkModule::on_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_FINAL_FLAG_SYNC);
}
}

unsafe extern "C" fn effect_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::req_screen(boma, Hash40::new("bg_bayonetta_final"), false, false, false);
        WorkModule::on_flag(boma, *FIGHTER_BAYONETTA_STATUS_WORK_ID_FINAL_FLAG_START_SCREEN_EFFECT);
    }
}

unsafe extern "C" fn sound_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_bayonetta_final01"));
        PLAY_SE(agent, Hash40::new("vc_bayonetta_final02"));
    }
}

unsafe extern "C" fn expression_final(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        START_INFO_FLASH_EYE(agent);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 64.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_63_witchtime"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}