methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	ItemModule::set_have_item_visibility(false)
	0x18e1e0()
}
frame(Frame=2)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 3)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	ItemModule::set_have_item_visibility(false)
	0x18e1e0()
}
frame(Frame=3)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 3, true)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	ItemModule::set_have_item_visibility(false)
	0x18e1e0()
}
frame(Frame=3)
0x18e1e0()
0x18e1e0()
execute(3)
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_TOP)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	ItemModule::set_have_item_visibility(false)
	0x18e1e0()
}
frame(Frame=5)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=12)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_impact"), 0, false)
	ControlModule::set_rumble()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_TOP, 2)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=13)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	RUMBLE_HIT(hash40("rbkind_attackl"), 5)
	0x18e1e0()
	0x18e1e0()
	QUAKE(CAMERA_QUAKE_KIND_M)
	0x18e1e0()
}
frame(Frame=45)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 4)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
}
