WorkModule::is_flag(fighter.module_accessor, *WEAPON_TRAIL_HOLE_INSTANCE_WORK_ID_FLAG_GROUND);
if(0x4ae890(false, true)){;
	for(6 Iterations){;
	if macros::is_excute(fighter) {
		macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
	}
	wait(fighter.lua_state_agent, 3.0);
}
frame(fighter.lua_state_agent, 30.0);
if macros::is_excute(fighter) {
	AttackModule::clear_all(fighter.module_accessor);
	WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *WEAPON_TRAIL_HOLE_STATUS_WORK_FLAG_PULL);
	WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_TRAIL_HOLE_STATUS_WORK_FLAG_SEND_ATTACK_END);
}
}
else{;
for(6 Iterations){;
if macros::is_excute(fighter) {
macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}
wait(fighter.lua_state_agent, 3.0);
}
frame(fighter.lua_state_agent, 30.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *WEAPON_TRAIL_HOLE_STATUS_WORK_FLAG_PULL);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *WEAPON_TRAIL_HOLE_STATUS_WORK_FLAG_SEND_ATTACK_END);
}
}
