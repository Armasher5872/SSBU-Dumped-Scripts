methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	SET_SPEED_EX(2, 1.2, KINETIC_ENERGY_RESERVE_ATTRIBUTE_MAIN)
	0x190e30()
	0x190e30()
	0x190e30()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	SET_SPEED_EX(0.5, 1.2, KINETIC_ENERGY_RESERVE_ATTRIBUTE_MAIN)
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=6)
for(2 Iterations){
	0x190e30()
	0x190e30()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x190e30()){
		ATTACK(ID=0, Part=0, Bone=hash40("haver"), Damage=0.8, Angle=90, KBG=100, FKB=1, BKB=0, Size=3.2, X=0.0, Y=-2.0, Z=0.0, X2=0.0, Y2=9.0, Z2=0.0, Hitlag=0.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_fire"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
	}
	wait(Frames=2)
	0x190e30()
	0x190e30()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x190e30()){
		AttackModule::clear_all()
	}
	wait(Frames=2)
	0x190e30()
	0x190e30()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x190e30()){
		ATTACK(ID=0, Part=0, Bone=hash40("haver"), Damage=0.8, Angle=285, KBG=100, FKB=10, BKB=0, Size=3.2, X=0.0, Y=-2.0, Z=0.0, X2=0.0, Y2=9.0, Z2=0.0, Hitlag=0.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_fire"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
		0x190e30()
	}
	wait(Frames=2)
	0x190e30()
	0x190e30()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x190e30()){
		AttackModule::clear_all()
	}
	wait(Frames=2)
	0x190e30()
	0x190e30()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	ATTACK(ID=0, Part=0, Bone=hash40("haver"), Damage=0.8, Angle=120, KBG=100, FKB=20, BKB=0, Size=4.0, X=0.0, Y=8.2, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_fire"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	ATTACK(ID=1, Part=0, Bone=hash40("haver"), Damage=0.8, Angle=45, KBG=100, FKB=25, BKB=0, Size=4.0, X=0.0, Y=-1.2, Z=0.0, X2=0.0, Y2=8.2, Z2=0.0, Hitlag=0.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_fire"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_CUTUP, Type=ATTACK_REGION_SWORD)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
wait(Frames=2)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	AttackModule::clear_all()
}
frame(Frame=25)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	KineticModule::add_speed(0, 2, 0.0)
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=33)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=8.0, Angle=40, KBG=105, FKB=0, BKB=58, Size=11.0, X=0.0, Y=10.0, Z=9.5, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.5, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_fire"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_SWORD)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
wait(Frames=2)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	AttackModule::clear_all()
}
