#[acmd_script( agent = "trail", script = "expression_appeallwl" , category = ACMD_EXPRESSION , low_priority)]
unsafe fn expression_appeallwl(fighter: &mut L2CAgentBase) {
	if macros::is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
	if macros::is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
	}
	frame(fighter.lua_state_agent, 19.0);
	if macros::is_excute(fighter) {
		methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll"), 0, false);
		ControlModule::set_rumble(fighter.module_accessor);
	}
	frame(fighter.lua_state_agent, 52.0);
	ItemModule::is_have_item(fighter.module_accessor, 0);
	if(0x4ae890(false, true)){;
		if macros::is_excute(fighter) {
			macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.03);
		}
	}
	frame(fighter.lua_state_agent, 50.0);
	if macros::is_excute(fighter) {
		macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.1);
	}
	frame(fighter.lua_state_agent, 54.0);
	if macros::is_excute(fighter) {
		macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.13);
	}
	frame(fighter.lua_state_agent, 57.0);
	if macros::is_excute(fighter) {
		macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.065);
	}
	frame(fighter.lua_state_agent, 58.0);
	if macros::is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, true);
	}
	frame(fighter.lua_state_agent, 62.0);
	if macros::is_excute(fighter) {
		macros::FT_MOTION_INTP_WAIT_ITEM(fighter, true, 0.02);
	}
