frame(Frame=4)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	ATTACK(ID=0, Part=0, Bone=hash40("vinel2"), Damage=5.5, Angle=30, KBG=65, FKB=0, BKB=50, Size=3.0, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_OBJECT)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	ATTACK(ID=1, Part=0, Bone=hash40("vinel3"), Damage=5.5, Angle=30, KBG=65, FKB=0, BKB=50, Size=3.5, X=0.0, Y=0.0, Z=0.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_OBJECT)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=5.5, Angle=30, KBG=65, FKB=0, BKB=50, Size=3.5, X=0.0, Y=3.5, Z=17.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_OBJECT)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	ATTACK(ID=3, Part=0, Bone=hash40("top"), Damage=5.5, Angle=30, KBG=65, FKB=0, BKB=50, Size=3.0, X=0.0, Y=3.2, Z=22.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.4, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_OBJECT)
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	0x103850()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0x103850()
	0x103850()
}
wait(Frames=3)
0x103850()
0x103850()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x103850()){
	AttackModule::clear_all()
}
frame(Frame=24)
0x103850()
0x103850()
FT_MOTION_RATE(FSM=0.5)
0x103850()
frame(Frame=40)
0x103850()
0x103850()
FT_MOTION_RATE(FSM=1)
0x103850()
