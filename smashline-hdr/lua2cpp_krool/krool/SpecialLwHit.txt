unsafe extern "C" fn game_speciallwhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_INVINCIBLE);
    }
    frame(lua_state, 2.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_LW_ATTACK_DAMAGE_REQUEST);
        WorkModule::on_flag(boma, *FIGHTER_KROOL_STATUS_SPECIAL_LW_FLAG_TURN);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 0.0, 45, 56, 0, 90, 12.0, 0.0, 12.5, 10.5, None, None, None, 1.2, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_BODY);
        AttackModule::set_force_reaction(boma, 0, true, false);
        ATTACK(agent, 1, 0, Hash40::new("top"), 0.0, 45, 50, 0, 80, 14.0, 0.0, 13.0, 18.0, None, None, None, 1.1, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 1, 0.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_BODY);
        AttackModule::set_force_reaction(boma, 1, true, false);
    }
    frame(lua_state, 7.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
        WorkModule::on_flag(boma, *FIGHTER_KROOL_STATUS_WORK_ID_FLAG_WAIST_DAMAGE_REQUEST);
    }
    frame(lua_state, 8.0);
    if is_excute(agent) {
        WHOLE_HIT(agent, *HIT_STATUS_NORMAL);
    }
    frame(lua_state, 18.0);
    FT_MOTION_RATE(agent, 0.7);
    frame(lua_state, 48.0);
    FT_MOTION_RATE(agent, 1.0);
}

unsafe extern "C" fn effect_speciallwhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("krool_counter_flash"), true, true);
        EFFECT_OFF_KIND(agent, Hash40::new("krool_counter_flash_l"), true, true);
        EFFECT_OFF_KIND(agent, Hash40::new("sys_guard_mark"), true, true);
        LANDING_EFFECT(agent, Hash40::new("sys_h_smoke_b"), Hash40::new("top"), -5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("krool_counter_success_body_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
        else {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("krool_counter_success_body"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
    }
}
if is_excute(agent) {
    EFFECT(agent, Hash40::new("krool_counter_success"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
}
WorkModule::is_flag(boma, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_LW_SPECIAL_EFFECT);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("sys_counter_flash"), Hash40::new("top"), 0, 9, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
}
frame(lua_state, 2.0);
if is_excute(agent) {
    EFFECT_OFF_KIND(agent, Hash40::new("krool_counter_success_body"), true, true);
    EFFECT_OFF_KIND(agent, Hash40::new("krool_counter_success_body_l"), true, true);
}
frame(lua_state, 3.0);
if is_excute(agent) {
    LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    LAST_EFFECT_SET_RATE(agent, 0.7);
}
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("krool_counter_attack_body_l"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
        EFFECT(agent, Hash40::new("krool_counter_attack"), Hash40::new("top"), 6, 14, 16, -90, 30, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
        EFFECT(agent, Hash40::new("krool_counter_attack2"), Hash40::new("top"), 6, 12, 22, 80, 25, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
    else {
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("krool_counter_attack_body"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
        EFFECT(agent, Hash40::new("krool_counter_attack"), Hash40::new("top"), -6, 14, 16, -90, -30, 0, 0.8, 0, 0, 0, 0, 0, 0, true);
        EFFECT(agent, Hash40::new("krool_counter_attack2"), Hash40::new("top"), -6, 12, 22, 80, -25, 0, 1, 0, 0, 0, 0, 0, 0, true);
    }
}
}
frame(lua_state, 8.0);
if is_excute(agent) {
EFFECT_OFF_KIND(agent, Hash40::new("krool_counter_attack2"), false, true);
}
}

unsafe extern "C" fn sound_speciallwhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    WorkModule::is_flag(boma, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_LW_HIT_ATTACK);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        frame(lua_state, 1.0);
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_krool_special_l02"));
        }
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_krool_special_l05"));
        PLAY_SE(agent, Hash40::new("vc_krool_special_l03"));
    }
    else {
    WorkModule::is_flag(boma, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_LW_HIT_REFLECT);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        frame(lua_state, 1.0);
        if is_excute(agent) {
            PLAY_SE(agent, Hash40::new("se_krool_special_l02"));
            PLAY_SE(agent, Hash40::new("vc_krool_special_l03"));
        }
    }
}
}

unsafe extern "C" fn expression_speciallwhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_counter"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 3.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackl"), 0);
    }
}