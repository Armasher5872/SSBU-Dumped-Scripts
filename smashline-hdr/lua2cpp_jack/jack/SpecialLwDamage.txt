unsafe extern "C" fn effect_speciallwdamage(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EffectModule::preset_limit_num(boma, 2);
        EFFECT_ALPHA(agent, Hash40::new("sys_spirits_up_s"), Hash40::new("top"), 0, 11, 2, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, true, 0.4);
        EffectModule::preset_limit_num(boma, 2);
        EFFECT_FOLLOW_ALPHA(agent, Hash40::new("jack_counter_smoke"), Hash40::new("top"), 0, 0, 2, 0, 0, 0, 1.5, true, 1);
        LAST_EFFECT_SET_RATE(agent, 1.3);
        EffectModule::preset_limit_num(boma, 2);
        EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("jack_counter_mask_fire"), Hash40::new("mask"), 0, 0, 0, 0, 0, 0, 1, false);
        FLASH(agent, 0.5, 0.7, 1, 0.5);
        BURN_COLOR(agent, 3, 6, 16, 0.8);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH(agent, 0, 0.3, 1, 0.3);
        BURN_COLOR_FRAME(agent, 2, 3, 6, 16, 0.05);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        FLASH(agent, 0, 0.3, 1, 0.1);
        BURN_COLOR_FRAME(agent, 1, 3, 6, 16, 0.1);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        BURN_COLOR_FRAME(agent, 1, 3, 6, 16, 0.5);
    }
}

unsafe extern "C" fn sound_speciallwdamage(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_jack_special_l01"));
    }
}

unsafe extern "C" fn expression_speciallwdamage(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_S);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_guard_lv2"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}