methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x13d360()
	0x13d360()
	0x13d360()
	FT_ATTACK_ABS_CAMERA_QUAKE(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, CAMERA_QUAKE_KIND_NONE)
	0x13d360()
	0x13d360()
}
frame(Frame=2)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 3)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
frame(Frame=21)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	RUMBLE_HIT(hash40("rbkind_attackm"), 0)
	0x13d360()
	0x13d360()
}
frame(Frame=22)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	InkPaintModule::set_special_paint(SPECIAL_PAINT_SQUID_TO_HUMAN)
	0x13d360()
}
frame(Frame=26)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	InkPaintModule::set_special_paint(SPECIAL_PAINT_SQUID_TO_HUMAN)
	0x13d360()
}
frame(Frame=30)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	InkPaintModule::set_special_paint(SPECIAL_PAINT_SQUID_TO_HUMAN)
	0x13d360()
	QUAKE(CAMERA_QUAKE_KIND_S)
	0x13d360()
}
frame(Frame=31)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 3)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
}
