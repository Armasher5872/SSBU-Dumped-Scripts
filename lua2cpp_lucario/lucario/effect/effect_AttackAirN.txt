frame(Frame=9)
0x102fa0()
0x102fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x102fa0()){
	EFFECT_FOLLOW(0x117f69aa9b, hash40("havel"), -2, 0, 0, 0, 0, 0, 0.9, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	EffectModule::enable_sync_init_pos_last()
	EFFECT_FOLLOW(0x117f69aa9b, hash40("haver"), 2, 0, 0, 0, 0, 0, 0.9, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	EffectModule::enable_sync_init_pos_last()
	EFFECT_FOLLOW(hash40("sys_spin_wind"), hash40("top"), 0, 14, 1.5, 15, 0, 10, 1.1, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	LAST_EFFECT_SET_RATE(1.3)
	0x102fa0()
}
frame(Frame=15)
0x102fa0()
0x102fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x102fa0()){
	EFFECT_FOLLOW(hash40("sys_spin_wind"), hash40("top"), 0, 14, 1, 10, 0, 20, 1.1, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	LAST_EFFECT_SET_RATE(1.2)
	0x102fa0()
}
frame(Frame=17)
0x102fa0()
0x102fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x102fa0()){
	EFFECT_FOLLOW(0x117f69aa9b, hash40("havel"), -2, 0, 0, 0, 0, 0, 0.8, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	EffectModule::enable_sync_init_pos_last()
	EFFECT_FOLLOW(0x117f69aa9b, hash40("haver"), 2, 0, 0, 0, 0, 0, 0.8, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	0x102fa0()
	EffectModule::enable_sync_init_pos_last()
}
frame(Frame=23)
0x102fa0()
0x102fa0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x102fa0()){
	EFFECT_OFF_KIND(hash40("sys_spin_wind"), false, true)
	0x102fa0()
	0x102fa0()
	0x102fa0()
}
