methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	WHOLE_HIT(HIT_STATUS_XLU)
	0x180150()
	WorkModule::off_flag(Flag=FIGHTER_CLOUD_STATUS_FINAL_FLAG_DISP_WINDOW)
	0x180150()
}
frame(Frame=6)
0x180150()
0x180150()
WorkModule::is_flag(FIGHTER_CLOUD_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT)
0x180150(false, true)
0x180150()
0x180150()
if(0x180150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x180150()){
		CAM_ZOOM_OUT()
	}
}
get_value_float(SO_VAR_FLOAT_LR)
0x180150(2001240, 0)
0x180150()
0x180150()
if(0x180150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x180150()){
		PostureModule::scale(220, 0)
		0x180150(0, 2.8)
		0x180150()
		CAM_ZOOM_IN_FINAL(20, -10, -20, 20, 160, true, FIGHTER_CLOUD_STATUS_FINAL_WORK_INT_ATTACK_HIT_OBJECT_ID, 0)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x180150()){
			PostureModule::scale(220, 0)
			0x180150(0, 2.4)
			0x180150()
			CAM_ZOOM_IN_FINAL(-20, -10, 20, 20, 160, true, FIGHTER_CLOUD_STATUS_FINAL_WORK_INT_ATTACK_HIT_OBJECT_ID, 0)
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
		}
	}
}
frame(Frame=7)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=8)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=19)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=20)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=32)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=33)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=49)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_02, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=50)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=74)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=75)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=88)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=89)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=105)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=106)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=125)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=126)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=143)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=144)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=161)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_02, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=162)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=186)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=187)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=195)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=196)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=203)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_01, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
}
frame(Frame=204)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
}
frame(Frame=214)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=2.2, Angle=90, KBG=100, FKB=35, BKB=0, Size=22.0, X=0.0, Y=5.0, Z=20.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.4, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=false, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_02, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
	WorkModule::on_flag(Flag=FIGHTER_CLOUD_STATUS_FINAL_FLAG_ATTACK_REQUEST_LOOP_DAMAGE_MOTION)
	0x180150()
	WorkModule::set_int64(hash40("fall_damage"), FIGHTER_CLOUD_STATUS_FINAL_WORK_INT_ATTACK_REQUEST_LOOP_DAMAGE_MOTION)
	0x180150()
	0x180150()
}
frame(Frame=216)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	AttackModule::clear_all()
	WorkModule::off_flag(Flag=FIGHTER_CLOUD_STATUS_FINAL_FLAG_ATTACK_REQUEST_LOOP_DAMAGE_MOTION)
	0x180150()
	notify_event_msc_cmd(0x296be39a69, 8, 70)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=217)
0x180150()
0x180150()
WorkModule::is_flag(FIGHTER_CLOUD_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT)
0x180150(false, true)
0x180150()
0x180150()
if(0x180150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x180150()){
		CAM_ZOOM_OUT()
	}
}
get_value_float(SO_VAR_FLOAT_LR)
0x180150(2001248, 0)
0x180150()
0x180150()
if(0x180150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x180150()){
		PostureModule::scale(30, 0)
		0x180150(0, 2.4)
		0x180150()
		CAM_ZOOM_IN_arg6(0.6, -0.6, true)
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 12)
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x180150()){
			PostureModule::scale(30, 0)
			0x180150(0, 2)
			0x180150()
			CAM_ZOOM_IN_arg6(0.2, 0.6, true)
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			0x180150()
			camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 12)
			0x180150()
			0x180150()
			0x180150()
			0x180150()
		}
	}
}
frame(Frame=220)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	notify_event_msc_cmd(0x348e125d20, 0x14d842c3f5, true, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	notify_event_msc_cmd(0x348e125d20, 0x10cf1285a2, true, true)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
}
frame(Frame=285)
0x180150()
0x180150()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x180150()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=5.0, Angle=70, KBG=100, FKB=0, BKB=50, Size=10.0, X=0.0, Y=5.0, Z=12.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_03, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=5.0, Angle=70, KBG=100, FKB=0, BKB=50, Size=12.0, X=0.0, Y=5.0, Z=24.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_03, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	ATTACK(ID=2, Part=0, Bone=hash40("top"), Damage=5.0, Angle=70, KBG=100, FKB=0, BKB=50, Size=14.0, X=0.0, Y=5.0, Z=38.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=hash40("no"), Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=true, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_NO_FLOOR, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_cutup"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_CLOUD_FINAL_03, Type=ATTACK_REGION_NONE)
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	0x180150()
	AttackModule::set_no_dead_all(true, false)
	0x180150()
	0x180150()
	WorkModule::on_flag(Flag=FIGHTER_CLOUD_STATUS_FINAL_FLAG_ATTACK_END_HIT)
	0x180150()
	WorkModule::on_flag(Flag=FIGHTER_CLOUD_STATUS_FINAL_FLAG_FALL_START)
	0x180150()
}
WorkModule::is_flag(FIGHTER_CLOUD_STATUS_FINAL_FLAG_HIT_ALL_OPPONENT)
0x180150(false, true)
0x180150()
0x180150()
if(0x180150()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x180150()){
		CAM_ZOOM_OUT()
		camera(MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0)
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		camera(MA_MSC_CMD_CAMERA_CAM_RECT, 0, 0, 10, 0)
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		CAM_ZOOM_IN_arg6(35, 0, 2.2, 0, 0, true)
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
		0x180150()
	}
}
