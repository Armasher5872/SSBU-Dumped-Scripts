#[acmd_script( agent = "ike", script = "expression_finalattack", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_finalattack(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 8.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 16);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 16, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 25.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 15);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 15, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 42.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 15);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 15, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 58.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 12);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 12, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 71.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 13);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 13, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 85.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 13);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 13, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 99.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 19);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitm"), 19, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 119.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 17);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 17, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 137.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 17);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 17, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 155.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 11);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 11, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 167.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 17);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 17, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 185.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 8);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 8, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 195.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 16);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitl"), 16, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 201.0);
    if is_excute(fighter) {
        AREA_WIND_2ND_arg10(fighter, 0, 2, 130, 2, 1, 0, 12, 30, 30, 100);
    }
    frame(lua_state, 212.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_smashhold1"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 263.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_erase"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 264.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohitll"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 269.0);
    if is_excute(fighter) {
        QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
    }
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_slashll"), 0);
    }
}