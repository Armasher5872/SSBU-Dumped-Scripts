#[acmd_script( agent = "littlemac", script = "expression_entryl", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_entryl(fighter: &mut L2CAgentBase) {
    macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_SWEATLITTLEMAC);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if macros::is_excute(fighter) {
            VisibilityModule::set_whole(fighter.module_accessor, false);
        }
    }
    if macros::is_excute(fighter) {
        ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_THROWSWEAT, false);
        VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("swet"), Hash40::new("swet_on"));
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), false);
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), false);
        WorkModule::on_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
    frame(fighter.lua_state_agent, 31.0);
    if macros::is_excute(fighter) {
        WorkModule::off_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_BACKSHIELD_INVISIBLE);
    }
    frame(fighter.lua_state_agent, 71.0);
    macros::IS_EXIST_ARTICLE(fighter, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_SWEATLITTLEMAC);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if macros::is_excute(fighter) {
            VisibilityModule::set_whole(fighter.module_accessor, true);
            ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_SWEATLITTLEMAC, false);
        }
    }
    if macros::is_excute(fighter) {
        VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("swet"), Hash40::new("swet_off"));
    }
    if !WorkModule::is_flag(fighter.module_accessor, *FIGHTER_LITTLEMAC_INSTANCE_WORK_ID_FLAG_IS_SWEAT_MODEL) {
        if macros::is_excute(fighter) {
            ArticleModule::set_visibility_whole(fighter.module_accessor, *FIGHTER_LITTLEMAC_GENERATE_ARTICLE_THROWSWEAT, true);
        }
    }
    frame(fighter.lua_state_agent, 72.0);
    if macros::is_excute(fighter) {
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x1f20a9d549), true);
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x24772eddef), true);
    }
    frame(fighter.lua_state_agent, 73.0);
    if macros::is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
    }
}