methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, ID=0, Damage=3.0, Angle=45, KBG=110, FKB=0, BKB=60, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	ATTACK_ABS(Kind=FIGHTER_ATTACK_ABSOLUTE_KIND_CATCH, ID=0, Damage=3.0, Angle=361, KBG=100, FKB=0, BKB=60, Hitlag=0.0, Unk=1.0, FacingRestrict=ATTACK_LR_CHECK_F, Unk=0.0, Unk=true, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_NONE, Type=ATTACK_REGION_THROW)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=11)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=3.0, Angle=40, KBG=100, FKB=0, BKB=70, Size=5.0, X=0.0, Y=9.0, Z=10.0, X2=LUA_VOID, Y2=LUA_VOID, Z2=LUA_VOID, Hitlag=0.8, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_KICK)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	AttackModule::set_catch_only_all(true, false)
	0x190e30()
	0x190e30()
}
frame(Frame=12)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	CHECK_FINISH_CAMERA(13, 1)
	0x190e30()
	0x190e30()
	FighterCutInManager::set_throw_finish_zoom_rate(1.5)
	0x190e30()
	FighterCutInManager::set_throw_finish_offset(5, 0, 0)
	0x190e30()
	0x190e30()
	0x190e30()
}
frame(Frame=13)
0x190e30()
0x190e30()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x190e30()){
	ATK_HIT_ABS(FIGHTER_ATTACK_ABSOLUTE_KIND_THROW, hash40("throw"), FIGHTER_STATUS_THROW_WORK_INT_TARGET_OBJECT, FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_GROUP, FIGHTER_STATUS_THROW_WORK_INT_TARGET_HIT_NO)
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	0x190e30()
	AttackModule::clear_all()
}
