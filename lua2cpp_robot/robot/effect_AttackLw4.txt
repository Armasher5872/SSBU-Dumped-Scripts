frame(Frame=1)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT(hash40("sys_smash_flash"), hash40("top"), 0, 5, 16, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
}
frame(Frame=6)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, -40, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, 140, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	LANDING_EFFECT_FLIP(hash40("sys_whirlwind_l"), hash40("sys_whirlwind_r"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
}
frame(Frame=9)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, -40, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, 140, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
frame(Frame=12)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, -40, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, 140, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
frame(Frame=15)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, -40, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	EFFECT_FOLLOW_FLIP(hash40("sys_attack_arc_d"), hash40("sys_attack_arc_d"), hash40("top"), 0, 7, 0, 0, 140, 0, 1.4, true, EF_FLIP_YZ)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	LAST_EFFECT_SET_RATE(3)
	0x104a50()
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 0)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.1, 0.01, 0)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 1)
0x104a50()
0x104a50()
if(0x104a50()){
	WorkModule::is_flag(FIGHTER_ROBOT_INSTANCE_WORK_ID_FLAG_REGION_JP)
	0x104a50(false, true)
	0x104a50()
	0x104a50()
	if(0x104a50()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x104a50()){
			LAST_EFFECT_SET_COLOR(0.196, 0.196, 0.216)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x104a50()){
				LAST_EFFECT_SET_COLOR(0.22, 0.059, 0.039)
				0x104a50()
				0x104a50()
				0x104a50()
			}
		}
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 2)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.176, 0.137, 0.059)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 3)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.235, 0.196, 0.255)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 4)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.157, 0.196)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 5)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.059, 0)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 6)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.098, 0.098, 0.157)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(FIGHTER_INSTANCE_WORK_ID_INT_COLOR, 7)
0x104a50()
0x104a50()
if(0x104a50()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x104a50()){
		LAST_EFFECT_SET_COLOR(0.118, 0.039, 0.051)
		0x104a50()
		0x104a50()
		0x104a50()
	}
}
0x104a50(0)
frame(Frame=16)
0x104a50()
0x104a50()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x104a50()){
	LANDING_EFFECT_FLIP(hash40("sys_whirlwind_l"), hash40("sys_whirlwind_r"), hash40("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
	0x104a50()
}
