frame(fighter.lua_state_agent, 1.0);
FT_MOTION_RATE(fighter, 0.75);
frame(fighter.lua_state_agent, 9.0);
FT_MOTION_RATE(fighter, 1);
if macros::is_excute(fighter) {
JostleModule::set_status(fighter.module_accessor, false);
}frame(fighter.lua_state_agent, 12.0);
if macros::is_excute(fighter) {
ATTACK(fighter, 0, 0, Hash40::new("top"), 0.0, 361, 0, 0, 0, 4.0, 0.0, 9.0, 8.8, 0.0, 5.0, 8.8, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_search"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
ATTACK(fighter, 1, 0, Hash40::new("top"), 0.0, 361, 0, 0, 0, 4.0, 0.0, 12.0, 8.8, 0.0, 5.0, 8.8, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, 0, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_search"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
WorkModule::on_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_CAPTAIN_STATUS_WORK_ID_FLAG_FALCON_KNUCKLE_HIT_CHECK_ONOFF);
}frame(fighter.lua_state_agent, 28.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(boma);
WorkModule::off_flag(fighter.module_accessor, /*Flag*/ *FIGHTER_CAPTAIN_STATUS_WORK_ID_FLAG_FALCON_KNUCKLE_HIT_CHECK_ONOFF);
JostleModule::set_status(fighter.module_accessor, true);
}