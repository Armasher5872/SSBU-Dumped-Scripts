unsafe extern "C" fn game_finalend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CAM_ZOOM_OUT(agent);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 0);
        ATTACK_ABS(agent, *FIGHTER_ATTACK_ABSOLUTE_KIND_SIMON_FINAL, 0, 10.0, 60, 145, 0, 95, 0.0, 1.0, *ATTACK_LR_CHECK_POS, 0.0, true, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
        WorkModule::on_flag(boma, *FIGHTER_SIMON_STATUS_FINAL_FLAG_ABS_SET);
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        WorkModule::on_flag(boma, *FIGHTER_STATUS_VISUAL_SCENE_FLAG_END_EXIT);
    }
}

unsafe extern "C" fn effect_finalend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("richter_final_cross"), true, true);
    }
}

unsafe extern "C" fn expression_finalend(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_attack_finish"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}