if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
}frame(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 3.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 4, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 4.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashs"), 9);
}frame(fighter.lua_state_agent, 8.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 7, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 16.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 7, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 24.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 7, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 32.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 7, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 43.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_erase"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 44.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_slashm"), 0);
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitll"), 0, false);
ControlModule::set_rumble(fighter.module_accessor);
}