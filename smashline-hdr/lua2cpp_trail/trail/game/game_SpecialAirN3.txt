#[acmd_script( agent = "trail", script = "game_specialairn3", category = ACMD_GAME, low_priority )]
unsafe fn game_specialairn3(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        WorkModule::on_flag(boma, *FIGHTER_TRAIL_INSTANCE_WORK_ID_FLAG_MAGIC_SELECT_FORBID);
    }
    frame(lua_state, 26.0);
    if is_excute(fighter) {
        WorkModule::set_int(boma, 0, FIGHTER_TRAIL_STATUS_SPECIAL_N3*_INT_THUNDER_NUM);
        ArticleModule::generate_article(boma, *FIGHTER_TRAIL_GENERATE_ARTICLE_CLOUD, false, -1);
        WorkModule::on_flag(boma, FIGHTER_TRAIL_STATUS_SPECIAL_N3*_FLAG_CHANGE_MAGIC);
    }
    wait(lua_state, 14.0);
    if is_excute(fighter) {
        WorkModule::set_int(boma, 1, FIGHTER_TRAIL_STATUS_SPECIAL_N3*_INT_THUNDER_NUM);
        ArticleModule::generate_article(boma, *FIGHTER_TRAIL_GENERATE_ARTICLE_CLOUD, false, -1);
    }
    wait(lua_state, 14.0);
    if is_excute(fighter) {
        WorkModule::set_int(boma, 2, FIGHTER_TRAIL_STATUS_SPECIAL_N3*_INT_THUNDER_NUM);
        ArticleModule::generate_article(boma, *FIGHTER_TRAIL_GENERATE_ARTICLE_CLOUD, false, -1);
    }
    frame(lua_state, 60.0);
    if is_excute(fighter) {
        WorkModule::off_flag(boma, *FIGHTER_TRAIL_INSTANCE_WORK_ID_FLAG_MAGIC_SELECT_FORBID);
    }
    frame(lua_state, 70.0);
    if is_excute(fighter) {
        KineticModule::change_kinetic(boma, *FIGHTER_KINETIC_TYPE_FALL);
    }
}