#[acmd_script( agent = "pikachu", script = "effect_speciallwhit", category = ACMD_EFFECT, low_priority )]
unsafe fn effect_speciallwhit(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("pikachu_cheek"), Hash40::new("head"), 0, 0, 0, 0, -90, -90, 1, true);
        LANDING_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    WorkModule::is_flag(boma, *FIGHTER_PIKACHU_STATUS_WORK_ID_FLAG_KAMINARI_ATTACK_HIT);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if is_excute(agent) {
            EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("pikachu_kaminari_hit2"), Hash40::new("top"), 0, -2, 0, 0, 90, 0, 1.3, true);
            EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("pikachu_kaminari_hit"), Hash40::new("top"), 0, -2, 0, 0, 90, 0, 1, true);
        }
    }
    if is_excute(agent) {
        FLASH(agent, 0, 0, 0, 0);
        BURN_COLOR(agent, 2, 2, 0.5, 0.9);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 2, 0, 0, 0, 0);
        BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0.7);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 2, 0, 0, 0, 0);
        BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        BURN_COLOR_NORMAL(agent);
        COL_NORMAL(agent);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("pikachu_kaminari_hit2"), false, true);
    }
    if is_excute(agent) {
        FLASH(agent, 0, 0, 0, 0);
        BURN_COLOR(agent, 2, 2, 0.5, 0.9);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 2, 0, 0, 0, 0);
        BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0.7);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        FLASH_FRM(agent, 2, 0, 0, 0, 0);
        BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        BURN_COLOR_NORMAL(agent);
        COL_NORMAL(agent);
    }
    wait(lua_state, 1.0);
    frame(lua_state, 15.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("pikachu_kaminari_hit"), false, true);
    }
    else{
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("pikachu_kaminari_hit2"), Hash40::new("top"), 0, 0, 0, 0, 90, 0, 0.9, true);
        EFFECT_FOLLOW(agent, Hash40::new("pikachu_kaminari_hit"), Hash40::new("top"), 0, 0, 0, 0, 90, 0, 1, true);
    }
}
for _ in 0..3 {
if is_excute(agent) {
    FLASH(agent, 0, 0, 0, 0);
    BURN_COLOR(agent, 2, 2, 0.5, 0.9);
}
wait(lua_state, 2.0);
if is_excute(agent) {
    FLASH_FRM(agent, 2, 0, 0, 0, 0);
    BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0.7);
}
wait(lua_state, 2.0);
if is_excute(agent) {
    FLASH_FRM(agent, 2, 0, 0, 0, 0);
    BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0);
}
wait(lua_state, 2.0);
if is_excute(agent) {
    BURN_COLOR_NORMAL(agent);
    COL_NORMAL(agent);
}
wait(lua_state, 1.0);
}
if is_excute(agent) {
EFFECT_OFF_KIND(agent, Hash40::new("pikachu_kaminari_hit2"), false, true);
}
if is_excute(agent) {
FLASH(agent, 0, 0, 0, 0);
BURN_COLOR(agent, 2, 2, 0.5, 0.9);
}
wait(lua_state, 2.0);
if is_excute(agent) {
FLASH_FRM(agent, 2, 0, 0, 0, 0);
BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0.7);
}
wait(lua_state, 2.0);
if is_excute(agent) {
FLASH_FRM(agent, 2, 0, 0, 0, 0);
BURN_COLOR_FRAME(agent, 2, 2, 2, 0.5, 0);
}
wait(lua_state, 2.0);
if is_excute(agent) {
BURN_COLOR_NORMAL(agent);
COL_NORMAL(agent);
}
wait(lua_state, 1.0);
frame(lua_state, 24.0);
if is_excute(agent) {
EFFECT_OFF_KIND(agent, Hash40::new("pikachu_kaminari_hit"), false, true);
}
frame(lua_state, 30.0);
if is_excute(agent) {
EFFECT_OFF_KIND(agent, Hash40::new("pikachu_cheek"), false, true);
}
frame(lua_state, 35.0);
if is_excute(agent) {
FOOT_EFFECT(agent, Hash40::new("sys_landing_smoke_s"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
}
}