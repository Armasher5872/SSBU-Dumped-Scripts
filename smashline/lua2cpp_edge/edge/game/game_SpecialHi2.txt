#[acmd_script( agent = "edge", script = "game_specialhi2", category = ACMD_GAME, low_priority )]
unsafe fn game_specialhi2(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        notify_event_msc_cmd!(fighter, Hash40::new_raw(0x2127e37c07), *GROUND_CLIFF_CHECK_KIND_NONE);
        battle_object_module_accessor();
        methodlib::L2CValue::L2CValue(void*)();
    }
    else{
    methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
set_special_hi_jostle_area();
frame(fighter.lua_state_agent, 2.0);
if macros::is_excute(fighter) {
    macros::ATTACK(fighter, 0, 0, Hash40::new("rot"), 2.3, 361, 100, 0, 0, 8.0, 0.0, 2.5, 1.0, Some(0.0), Some(-2.5), Some(1.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FIGHTER, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    macros::ATTACK(fighter, 1, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 8.0, 0.0, 2.5, 1.0, Some(0.0), Some(-2.5), Some(1.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    macros::ATTACK(fighter, 2, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    macros::ATTACK(fighter, 3, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    macros::ATTACK(fighter, 4, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 8.0, 0.0, 2.5, 1.0, Some(0.0), Some(-2.5), Some(1.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    macros::ATTACK(fighter, 5, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    macros::ATTACK(fighter, 6, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 0, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
    battle_object_module_accessor();
    methodlib::L2CValue::L2CValue(void*)();
}
else{
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 1, Hash40::new("rot"), &Vector2f{x: 30.0, y: -5.0}, 3);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 2, Hash40::new("rot"), &Vector2f{x: 26.0, y: -5.0}, 2);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 3, Hash40::new("rot"), &Vector2f{x: 20.0, y: -5.0}, 2);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 4, Hash40::new("rot"), &Vector2f{x: 5.0, y: 1.0}, 4);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 5, Hash40::new("rot"), &Vector2f{x: 15.0, y: 1.0}, 4);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 6, Hash40::new("rot"), &Vector2f{x: 20.0, y: 1.0}, 4);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 1, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 2, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 3, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 4, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 5, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 6, true, false);
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 4.0);
for _ in 0..6 {
if macros::is_excute(fighter) {
macros::ATTACK(fighter, 0, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 2.5, 0.0, Some(0.0), Some(-2.5), Some(0.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 1, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 2, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_A, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 3, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 2.5, 0.0, Some(0.0), Some(-2.5), Some(0.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 4, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 5.0, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 5, 0, Hash40::new("rot"), 2.3, 368, 100, 0, 0, 6.5, 0.0, 3.0, 20.5, Some(0.0), Some(-3.0), Some(20.5), 1.0, 0.5, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_G, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 6, 0, Hash40::new("rot"), 2.3, 60, 60, 0, 90, 6.5, 0.0, 3.0, 0.0, Some(0.0), Some(-3.0), Some(0.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_B, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
macros::ATTACK(fighter, 7, 0, Hash40::new("rot"), 2.3, 60, 60, 0, 90, 6.5, 0.0, 3.0, 10.0, Some(0.0), Some(-3.0), Some(10.0), 0.5, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_B, false, -1, -1.0, 2, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_cutup"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_CUTUP, *ATTACK_REGION_SWORD);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
}
else{
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 0, Hash40::new("rot"), &Vector2f{x: 30.0, y: 100.0}, 368);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 1, Hash40::new("rot"), &Vector2f{x: 26.0, y: -5.0}, 2);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 2, Hash40::new("rot"), &Vector2f{x: 20.0, y: -5.0}, 2);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 3, Hash40::new("rot"), &Vector2f{x: 5.0, y: 1.0}, 4);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 4, Hash40::new("rot"), &Vector2f{x: 15.0, y: 1.0}, 4);
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
FighterSpecializer_Edge::set_vec_target_pos(fighter.module_accessor, 5, Hash40::new("rot"), &Vector2f{x: 20.0, y: 1.0}, 4);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 0, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 1, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 2, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 3, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 4, true, false);
AttackModule::set_no_finish_camera_ex(fighter.module_accessor, 5, true, false);
AttackModule::set_no_finish_camera(fighter.module_accessor, 6, true, false);
AttackModule::set_no_finish_camera(fighter.module_accessor, 7, true, false);
wait(fighter.lua_state_agent, 1.0);
if macros::is_excute(fighter) {
AttackModule::clear_all(fighter.module_accessor);
}
wait(fighter.lua_state_agent, 1.0);
}
frame(fighter.lua_state_agent, 14.0);
if macros::is_excute(fighter) {
battle_object_module_accessor();
methodlib::L2CValue::L2CValue(void*)();
}
else{
methodlib::L2CValue::L2CValue(lib::L2CValueconst&)();
}
methodlib::L2CValue::as_pointer()const();
clear_special_hi_jostle_area();
}