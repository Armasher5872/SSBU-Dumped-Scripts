frame(Frame=15)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	LANDING_EFFECT_FLIP(hash40("sys_whirlwind_l"), hash40("sys_whirlwind_r"), hash40("top"), 3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false, EF_FLIP_NONE)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	LAST_EFFECT_SET_ALPHA(0.6)
	0x24ffc0()
}
frame(Frame=19)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	EFFECT_FOLLOW_FLIP(0x1134f3f0e4, 0x1134f3f0e4, hash40("top"), 0, 4.75, -3.8, 0, 180, 5, 1, true, EF_FLIP_YZ)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	LAST_EFFECT_SET_RATE(1.9)
	0x24ffc0()
}
frame(Frame=23)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	FOOT_EFFECT(hash40("sys_atk_smoke"), hash40("top"), -1, 0, 1, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, false)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
}
frame(Frame=24)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	EFFECT_FOLLOW_FLIP(0x1134f3f0e4, 0x1134f3f0e4, hash40("top"), 0, 5, 4, -2, -30, 6, 1.05, true, EF_FLIP_YZ)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	LAST_EFFECT_SET_RATE(1.5)
	0x24ffc0()
}
