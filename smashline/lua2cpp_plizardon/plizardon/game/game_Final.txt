#[acmd_script( agent = "plizardon", script = "game_final", category = ACMD_GAME, low_priority )]
unsafe fn game_final(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::CHECK_VALID_FINAL_START_CAMERA(agent, 0, 1, 20, 0, 0, 0);
        macros::SLOW_OPPONENT(agent, 5, 30);
    }
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(agent.lua_state_agent, 10.0);
        if macros::is_excute(agent) {
            macros::FT_SET_FINAL_FEAR_FACE(agent, 60);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            FT_START_CUTIN_arg1(true);
        }
        else{
        if macros::is_excute(agent) {
            PostureModule::scale(agent.module_accessor, 4, 0);
            0xdf7f0(389270630, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN_arg1(true);
        }
        frame(agent.lua_state_agent, 25.0);
        if macros::is_excute(agent) {
            macros::CAM_ZOOM_OUT(agent);
        }
    }
}
frame(agent.lua_state_agent, 30.0);
if macros::is_excute(agent) {
    macros::ATTACK(agent, 0, 1, Hash40::new("top"), 0.0, 40, 100, 100, 0, 20.0, 0.0, 10.0, 0.0, None, None, None, 0.9, 0.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_F, false, f32::NAN, 0.0, 0, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_NONE, *ATTACK_REGION_NONE);
}
frame(agent.lua_state_agent, 60.0);
if macros::is_excute(agent) {
    AttackModule::clear_all(agent.module_accessor);
    camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RESET);
}
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if macros::is_excute(agent) {
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, -60, 0, 0);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8);
    }
    else{
    if macros::is_excute(agent) {
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 60, 0, 0);
        camera!(agent, *MA_MSC_CMD_CAMERA_CAM_RECT, 60, -56, 18, -8);
    }
}
}
frame(agent.lua_state_agent, 58.0);
if macros::is_excute(agent) {
ArticleModule::generate_article(agent.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI, false, -1);
}
frame(agent.lua_state_agent, 95.0);
if macros::is_excute(agent) {
ArticleModule::generate_article(agent.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI, false, -1);
}
frame(agent.lua_state_agent, 130.0);
if macros::is_excute(agent) {
ArticleModule::generate_article(agent.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI, false, -1);
}
frame(agent.lua_state_agent, 167.0);
if macros::is_excute(agent) {
ArticleModule::generate_article(agent.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI, false, -1);
}
frame(agent.lua_state_agent, 205.0);
if macros::is_excute(agent) {
WorkModule::on_flag(agent.module_accessor, *FIGHTER_PLIZARDON_STATUS_FINAL_FLAG_LAST_DAIMONJI);
ArticleModule::generate_article(agent.module_accessor, *FIGHTER_PLIZARDON_GENERATE_ARTICLE_DAIMONJI, false, -1);
}
frame(agent.lua_state_agent, 317.0);
if macros::is_excute(agent) {
cancel(*MA_MSC_CMD_CANCEL_ENABLE_CANCEL);
}
}