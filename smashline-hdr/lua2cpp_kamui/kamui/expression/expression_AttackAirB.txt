#[acmd_script( agent = "kamui", script = "expression_attackairb", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_attackairb(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("dragon") as i64, hash40("dragon_wing_no_horn") as i64);
    }
    frame(lua_state, 2.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("dragon") as i64, hash40("dragon_wing") as i64);
    }
    frame(lua_state, 5.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("front_hair") as i64, hash40("front_hair_hide") as i64);
    }
    frame(lua_state, 6.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("hair") as i64, hash40("hair_hide") as i64);
    }
    frame(lua_state, 11.0);
    if is_excute(fighter) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohit_wing"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 13.0);
    if is_excute(fighter) {
        RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
    }
    frame(lua_state, 40.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("hair") as i64, hash40("hair_normal") as i64);
    }
    frame(lua_state, 41.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("front_hair") as i64, hash40("front_hair_normal") as i64);
    }
    frame(lua_state, 44.0);
    if is_excute(fighter) {
        VisibilityModule::set_int64(boma, hash40("dragon") as i64, hash40("dragon_wing_no_horn") as i64);
    }
}