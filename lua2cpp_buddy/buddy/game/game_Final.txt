methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	FT_SET_FINAL_SMASH_LIGHT(true)
	0x18e1e0()
	ArticleModule::generate_article(FIGHTER_BUDDY_GENERATE_ARTICLE_BIGBIRD)
	0x18e1e0()
	ArticleModule::generate_article(FIGHTER_BUDDY_GENERATE_ARTICLE_BIGBIRDBASE)
	0x18e1e0()
	CHECK_VALID_FINAL_START_CAMERA(0, 7, 20, 0, 0, 0)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	camera(MA_MSC_CMD_CAMERA_CAM_RECT, -5, -5, 15, -10)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	SLOW_OPPONENT(15, 30)
	0x18e1e0()
	0x18e1e0()
}
WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
0x18e1e0(false, false)
0x18e1e0()
0x18e1e0()
if(0x18e1e0()){
	frame(Frame=5)
	0x18e1e0()
	0x18e1e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x18e1e0()){
		FT_SET_FINAL_FEAR_FACE(75)
		0x18e1e0()
		REQ_FINAL_START_CAMERA_arg3(hash40("d04final.nuanmb"), false, false)
		0x18e1e0()
		0x18e1e0()
		0x18e1e0()
		FT_START_CUTIN()
		SlowModule::set_whole(2, 0)
		0x18e1e0()
		0x18e1e0()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x18e1e0()){
			PostureModule::scale(4, 0)
			0x18e1e0(0, 2.1)
			0x18e1e0()
			CAM_ZOOM_IN_arg5(0, 0)
			0x18e1e0()
			0x18e1e0()
			0x18e1e0()
			0x18e1e0()
			0x18e1e0()
			0x18e1e0()
			FT_START_CUTIN()
		}
	}
}
WorkModule::is_flag(FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA)
0x18e1e0(false, false)
0x18e1e0()
0x18e1e0()
if(0x18e1e0()){
	frame(Frame=13)
	0x18e1e0()
	0x18e1e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x18e1e0()){
		SlowModule::clear_whole()
		SlowModule::set_whole(4, 0)
		0x18e1e0()
		0x18e1e0()
	}
}
frame(Frame=18)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	SlowModule::clear_whole()
}
else{
	frame(Frame=25)
	0x18e1e0()
	0x18e1e0()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x18e1e0()){
		CAM_ZOOM_OUT()
	}
}
frame(Frame=30)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	QUAKE(CAMERA_QUAKE_KIND_L)
	0x18e1e0()
}
frame(Frame=31)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 13)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 9)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 18)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 8)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 4)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 4.5)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=32)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 13)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 9)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 30)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 8)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 4)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=33)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 11)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 35)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 8)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 4)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=34)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 11)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 35)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	PostureModule::scale(1, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 8)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 4)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 20)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 10)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=35)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 11)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 40)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=36)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 11)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 45)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=37)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 11)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 45)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
frame(Frame=38)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	PostureModule::scale(0, 0, hash40("top"), 10.0, 70, 100, 100, 0)
	0x18e1e0(0, 15)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 11)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 0)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 55)
	0x18e1e0()
	PostureModule::scale()
	0x18e1e0(0, 26)
	0x18e1e0()
	ATTACK(0.2, 1.0, ATTACK_SETOFF_KIND_OFF, ATTACK_LR_CHECK_SPEED, false, hash40("no"), 0.0, 0, false, false, false, false, true, COLLISION_SITUATION_MASK_GA, COLLISION_CATEGORY_MASK_FIGHTER, COLLISION_PART_MASK_ALL, false, hash40("collision_attr_normal"), ATTACK_SOUND_LEVEL_M, COLLISION_SOUND_ATTR_KICK, ATTACK_REGION_NONE)
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	0x18e1e0()
	AttackModule::set_no_dead_all(true, false)
	0x18e1e0()
	0x18e1e0()
}
wait(Frames=2)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	AttackModule::clear_all()
	REMOVE_FINAL_SCREEN_EFFECT(0)
	0x18e1e0()
}
frame(Frame=120)
0x18e1e0()
0x18e1e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x18e1e0()){
	CAM_ZOOM_OUT()
}
