frame(Frame=0)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	WorkModule::on_flag(Flag=FIGHTER_DOLLY_INSTANCE_WORK_ID_FLAG_FINAL_HIT_CANCEL)
	0x24ffc0()
}
WorkModule::is_flag(FIGHTER_DOLLY_STATUS_SPECIAL_S_WORK_FLAG_AIR_ATTACK)
0x24ffc0(false, true)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	0x24ffc0(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_INT_STRENGTH, FIGHTER_DOLLY_STRENGTH_W)
	0x24ffc0()
	0x24ffc0()
	if(0x24ffc0()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x24ffc0()){
			MotionModule::set_rate(1.5)
		}
		else{
			0x24ffc0(FIGHTER_DOLLY_STRENGTH_W, FIGHTER_DOLLY_STRENGTH_W)
			0x24ffc0()
			0x24ffc0()
			if(0x24ffc0()){
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x24ffc0()){
					MotionModule::set_rate(1.2)
				}
				else{
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x24ffc0()){
						MotionModule::set_rate(1.5)
						0x24ffc0()
					}
				}
			}
		}
	}
}
WorkModule::is_flag(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_FLAG_COMMAND)
0x24ffc0(false, true)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		HIT_NODE(hash40("shoulderl"), HIT_STATUS_XLU)
		0x24ffc0()
		0x24ffc0()
		HIT_NODE(hash40("arml"), HIT_STATUS_XLU)
		0x24ffc0()
		0x24ffc0()
	}
}
0x24ffc0(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_INT_STRENGTH, FIGHTER_DOLLY_STRENGTH_W)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=16.0, Angle=40, KBG=72, FKB=0, BKB=55, Size=4.8, X=0.0, Y=11.0, Z=14.0, X2=0.0, Y2=11.0, Z2=8.0, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DOLLY_PUNCH, Type=ATTACK_REGION_PUNCH)
	}
	else{
		0x24ffc0(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_INT_STRENGTH, FIGHTER_DOLLY_STRENGTH_W)
		0x24ffc0()
		0x24ffc0()
		if(0x24ffc0()){
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x24ffc0()){
				ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=13.0, Angle=40, KBG=74, FKB=0, BKB=67, Size=4.3, X=0.0, Y=11.0, Z=13.0, X2=0.0, Y2=11.0, Z2=8.0, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DOLLY_PUNCH, Type=ATTACK_REGION_PUNCH)
			}
			else{
				methodlib::L2CValue::operatorbool()const(is_excute)
				if(0x24ffc0()){
					ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=14.0, Angle=40, KBG=74, FKB=0, BKB=65, Size=4.3, X=0.0, Y=11.0, Z=13.0, X2=0.0, Y2=11.0, Z2=8.0, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DOLLY_PUNCH, Type=ATTACK_REGION_PUNCH)
				}
				else{
					methodlib::L2CValue::operatorbool()const(is_excute)
					if(0x24ffc0()){
						ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=17.0, Angle=40, KBG=67, FKB=0, BKB=65, Size=4.8, X=0.0, Y=11.0, Z=14.0, X2=0.0, Y2=11.0, Z2=8.0, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DOLLY_CRITICAL, Type=ATTACK_REGION_PUNCH)
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
						0x24ffc0()
					}
				}
			}
		}
	}
}
frame(Frame=7)
0x24ffc0()
0x24ffc0()
WorkModule::is_flag(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_FLAG_COMMAND)
0x24ffc0(false, true)
0x24ffc0()
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=12.0, Angle=40, KBG=78, FKB=0, BKB=50, Size=4.3, X=0.0, Y=11.0, Z=13.0, X2=0.0, Y2=11.0, Z2=8.0, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DOLLY_PUNCH, Type=ATTACK_REGION_PUNCH)
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
	0x24ffc0()
}
frame(Frame=9)
0x24ffc0()
0x24ffc0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x24ffc0()){
	WorkModule::off_flag(Flag=FIGHTER_DOLLY_INSTANCE_WORK_ID_FLAG_FINAL_HIT_CANCEL)
	0x24ffc0()
}
WorkModule::is_flag(FIGHTER_DOLLY_STATUS_SPECIAL_COMMON_WORK_FLAG_COMMAND)
0x24ffc0(false, true)
0x24ffc0()
0x24ffc0()
if(0x24ffc0()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x24ffc0()){
		HIT_NODE(hash40("shoulderl"), HIT_STATUS_NORMAL)
		0x24ffc0()
		0x24ffc0()
		HIT_NODE(hash40("arml"), HIT_STATUS_NORMAL)
		0x24ffc0()
		0x24ffc0()
		ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=14.0, Angle=40, KBG=78, FKB=0, BKB=52, Size=4.8, X=0.0, Y=11.0, Z=14.0, X2=0.0, Y2=11.0, Z2=8.0, Hitlag=1.2, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_OFF, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=20, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_L, SFXType=COLLISION_SOUND_ATTR_DOLLY_PUNCH, Type=ATTACK_REGION_PUNCH)
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
		0x24ffc0()
	}
}
