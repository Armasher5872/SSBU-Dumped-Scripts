if macros::is_excute(fighter) {
	ItemModule::set_have_item_visibility(fighter.module_accessor, false);
}
frame(fighter.lua_state_agent, 0.0);
if macros::is_excute(fighter) {
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("sholder_l"), Hash40::new("sholder_l_on"));
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("sholder_r"), Hash40::new("sholder_r_on"));
	VisibilityModule::set_int64(fighter.module_accessor, Hash40::new("item"), Hash40::new("item_ironball"));
}
frame(fighter.lua_state_agent, 3.0);
execute(3);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
if(0x11ab40(false, true)){;
	if macros::is_excute(fighter) {
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_NONE);
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	}
}
frame(fighter.lua_state_agent, 11.0);
if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 5);
}
frame(fighter.lua_state_agent, 15.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_impact"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
	macros::QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
}
frame(fighter.lua_state_agent, 51.0);
if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_NONE, 8);
}
