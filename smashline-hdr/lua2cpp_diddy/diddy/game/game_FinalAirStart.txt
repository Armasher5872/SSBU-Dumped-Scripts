#[acmd_script( agent = "diddy", script = "game_finalairstart", category = ACMD_GAME, low_priority )]
unsafe fn game_finalairstart(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        CHECK_VALID_FINAL_START_CAMERA(agent, 0, 7, 20, 0, 0, 0);
        SLOW_OPPONENT(agent, 4, 30);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){
        frame(lua_state, 10.0);
        if is_excute(agent) {
            FT_SET_FINAL_FEAR_FACE(agent, 60);
            REQ_FINAL_START_CAMERA(agent, Hash40::new("d04finalstart.nuanmb"), false);
        }
        else{
        if is_excute(agent) {
            PostureModule::scale(boma, 5, 0);
            0x148390(95671436, 2.1);
            CAM_ZOOM_IN_arg5(0, 0);
            FT_START_CUTIN(agent);
        }
    }
}
if is_excute(agent) {
    ArticleModule::set_visibility_whole(boma, *FIGHTER_DIDDY_GENERATE_ARTICLE_BARRELJETS, false, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
frame(lua_state, 13.0);
if is_excute(agent) {
    ArticleModule::set_visibility_whole(boma, *FIGHTER_DIDDY_GENERATE_ARTICLE_BARRELJETS, true, ArticleOperationTarget(*ARTICLE_OPE_TARGET_ALL));
}
frame(lua_state, 25.0);
if is_excute(agent) {
    ATTACK(agent, 0, 0, Hash40::new("waist"), 1.0, 85, 50, 0, 10, 4.0, -3.0, 0.0, -5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
    ATTACK(agent, 1, 0, Hash40::new("waist"), 1.0, 85, 50, 0, 10, 4.0, -3.0, 0.0, 5.0, None, None, None, 1.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_S, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
    AttackModule::set_force_reaction(boma, 0, true, false);
    AttackModule::set_force_reaction(boma, 1, true, false);
    AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
    AttackModule::set_final_finish_cut_in(boma, 1, true, true, -1, false);
}
frame(lua_state, 30.0);
if is_excute(agent) {
    CAM_ZOOM_OUT(agent);
}
frame(lua_state, 58.0);
if is_excute(agent) {
    AttackModule::clear(boma, 0, false);
    AttackModule::clear(boma, 1, false);
    ATTACK(agent, 2, 0, Hash40::new("waist"), 10.0, 60, 100, 0, 75, 10.0, 0.0, 0.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_POS, false, f32::NAN, 0.0, 6, false, false, false, false, false, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_ALL, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_fire"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_FIRE, *ATTACK_REGION_OBJECT);
    AttackModule::set_force_reaction(boma, 2, true, false);
    AttackModule::set_final_finish_cut_in(boma, 2, true, true, -1, false);
}
}