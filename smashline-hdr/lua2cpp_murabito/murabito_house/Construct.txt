unsafe extern "C" fn game_construct(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    FT_MOTION_RATE(agent, 0.83);
    frame(lua_state, 104.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 10.0, 361, 60, 0, 65, 18.0, 0.0, 11.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_LR, false, f32::NAN, 0.0, 40, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_M, *COLLISION_SOUND_ATTR_PUNCH, *ATTACK_REGION_NONE);
        AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
    }
    frame(lua_state, 210.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
    }
    frame(lua_state, 215.0);
    FT_MOTION_RATE(agent, 1.58);
    frame(lua_state, 275.0);
    FT_MOTION_RATE(agent, 1.0);
    frame(lua_state, 298.0);
    if is_excute(agent) {
        ATTACK(agent, 0, 0, Hash40::new("top"), 15.0, 45, 115, 0, 80, 25.0, 0.0, 11.0, 0.0, None, None, None, 0.0, 1.0, *ATTACK_SETOFF_KIND_OFF, *ATTACK_LR_CHECK_LR, false, f32::NAN, 0.0, 40, false, false, false, false, true, *COLLISION_SITUATION_MASK_GA, *COLLISION_CATEGORY_MASK_NO_FLOOR, *COLLISION_PART_MASK_ALL, false, Hash40::new("collision_attr_normal"), *ATTACK_SOUND_LEVEL_L, *COLLISION_SOUND_ATTR_KICK, *ATTACK_REGION_NONE);
        AttackModule::set_final_finish_cut_in(boma, 0, true, true, -1, false);
    }
    frame(lua_state, 303.0);
    if is_excute(agent) {
        AttackModule::clear_all(boma);
        AREA_WIND_2ND_RAD_arg9(agent, 0, 3, 0.02, 1000, 1, 3, 15, 55, 80);
    }
    wait(lua_state, 20.0);
    if is_excute(agent) {
        AreaModule::erase_wind(boma, 0);
    }
}

unsafe extern "C" fn effect_construct(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 70.0);
    if is_excute(agent) {
        EFFECT_FOLLOW_RND(agent, Hash40::new("murabito_final_house_smoke"), Hash40::new("top"), 0, 5, 0, 0, 0, 0, 1.1, 0, 1, 0, 0, 0, 0, true);
    }
    frame(lua_state, 90.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("step1") as i64, hash40("step1_on") as i64);
    }
    frame(lua_state, 150.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("step2") as i64, hash40("step2_on") as i64);
    }
    frame(lua_state, 200.0);
    if is_excute(agent) {
        VisibilityModule::set_int64(boma, hash40("step3") as i64, hash40("step3_on") as i64);
    }
    frame(lua_state, 215.0);
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("murabito_final_house_smoke"), false, false);
    }
    frame(lua_state, 220.0);
    if is_excute(agent) {
        EFFECT(agent, Hash40::new("murabito_final_house_completion"), Hash40::new("top"), 0, -2, -4, 0, 0, 0, 1.05, 0, 1, 0, 0, 0, 0, false);
    }
    frame(lua_state, 300.0);
    if is_excute(agent) {
        VisibilityModule::set_whole(boma, false);
        methodlib::L2CValue::as_hash()const(Hash40::new("critical_hit"), Hash40::new("top"), 5, 5, 0, 10, 0, true);
        methodlib::L2CValue::as_hash()const();
        EffectModule::request_post_effect_line_circle(boma);
        EFFECT(agent, 0, Hash40::new("murabito_final_house_explosion"), Hash40::new("top"), 0, 0, -5, 0, 90, 0, 1.2, 0, 1, 0, 0, 0, 0, false);
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        EffectModule::remove_post_effect_line(boma, 5, true);
    }
}

unsafe extern "C" fn sound_construct(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 70.0);
    if is_excute(agent) {
        PLAY_STATUS(agent, Hash40::new("se_murabito_final03"));
    }
    frame(lua_state, 220.0);
    if is_excute(agent) {
        sound!(agent, *MA_MSC_CMD_SOUND_STOP_SE_STATUS);
        PLAY_SE(agent, Hash40::new("se_murabito_final04"));
    }
    wait(lua_state, 78.0);
    if is_excute(agent) {
        PLAY_SE_REMAIN(agent, Hash40::new("se_murabito_final05"));
    }
}