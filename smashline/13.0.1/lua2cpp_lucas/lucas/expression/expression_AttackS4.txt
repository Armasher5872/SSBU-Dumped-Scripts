if macros::is_excute(fighter) {
	ItemModule::set_have_item_visibility(fighter.module_accessor, false);
	slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_R);
}
frame(fighter.lua_state_agent, 8.0);
execute(8);
WorkModule::is_flag(fighter.module_accessor, *FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){;
	if macros::is_excute(fighter) {
		ItemModule::set_have_item_visibility(fighter.module_accessor, false);
		slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_R);
	}
}
frame(fighter.lua_state_agent, 9.0);
if macros::is_excute(fighter) {
	slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 5);
}
frame(fighter.lua_state_agent, 12.0);
if macros::is_excute(fighter) {
	methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitl"), 0, false);
	ControlModule::set_rumble(fighter.module_accessor);
}
frame(fighter.lua_state_agent, 14.0);
if macros::is_excute(fighter) {
	macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
	AREA_WIND_2ND_arg10(0, 1, 0, 3, 0.2, 12, 5, 24, 10, 80);
}
frame(fighter.lua_state_agent, 22.0);
if macros::is_excute(fighter) {
	AreaModule::erase_wind(fighter.module_accessor, 0);
}
frame(fighter.lua_state_agent, 45.0);
if macros::is_excute(fighter) {
	ItemModule::set_have_item_visibility(fighter.module_accessor, true);
}
