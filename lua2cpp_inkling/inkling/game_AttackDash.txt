WorkModule::is_flag(FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID)
0x13d360(false, false)
0x13d360()
0x13d360()
if(0x13d360()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x13d360()){
		ArticleModule::generate_article(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID)
		0x13d360()
	}
}
MotionModule::motion_kind()
MotionModule::frame(0x00000002b0)
MotionModule::rate(-1305339890)
methodlib::L2CValue::as_hash()const(-1305339890, FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false)
ArticleModule::change_motion()
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	ArticleModule::set_frame(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID)
	0x13d360()
	ArticleModule::set_rate(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID)
	0x13d360()
	ArticleModule::set_visibility_whole(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false)
	0x13d360()
	0x13d360()
	WorkModule::on_flag(Flag=FIGHTER_INKLING_INSTANCE_WORK_ID_FLAG_EXIST_SQUID)
	0x13d360()
	StatusModule::status_kind()
	0x13d360(0, FIGHTER_STATUS_KIND_REBIRTH)
	0x13d360()
	0x13d360()
	WorkModule::on_flag(Flag=FIGHTER_INSTANCE_WORK_ID_FLAG_FORCE_LOUPE)
	0x13d360()
}
0x13d360(0)
0x13d360()
0x13d360()
0x13d360()
get_value_float(SO_VAR_FLOAT_LR)
0x13d360(0, 0)
0x13d360()
0x13d360()
if(0x13d360()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x13d360()){
		methodlib::L2CValue::as_hash()const(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, hash40("attack_dash_l"))
		ArticleModule::change_motion()
	}
	else{
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x13d360()){
			methodlib::L2CValue::as_hash()const(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, hash40("attack_dash_r"))
			ArticleModule::change_motion()
			0x13d360()
			0x13d360()
		}
	}
}
frame(Frame=1)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	VisibilityModule::set_whole(true)
	0x13d360()
	ArticleModule::set_visibility_whole(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, true)
	0x13d360()
	0x13d360()
}
frame(Frame=6)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	ArticleModule::set_visibility_whole(FIGHTER_INKLING_GENERATE_ARTICLE_SQUID, false)
	0x13d360()
	0x13d360()
}
frame(Frame=8)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=8.0, Angle=60, KBG=43, FKB=0, BKB=110, Size=4.0, X=0.0, Y=7.0, Z=4.0, X2=0.0, Y2=7.0, Z2=6.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_ELBOW)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	ATK_SET_SHIELD_SETOFF_MUL(ID=0, ShieldstunMul=1.5)
	0x13d360()
	0x13d360()
}
wait(Frames=2)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=6.0, Angle=60, KBG=43, FKB=0, BKB=100, Size=3.0, X=0.0, Y=7.0, Z=4.0, X2=0.0, Y2=7.0, Z2=6.0, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_F, SetWeight=false, ShieldDamage=1, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_GA, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_S, SFXType=COLLISION_SOUND_ATTR_KICK, Type=ATTACK_REGION_ELBOW)
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	0x13d360()
	ATK_SET_SHIELD_SETOFF_MUL(ID=0, ShieldstunMul=1.5)
	0x13d360()
	0x13d360()
}
wait(Frames=4)
0x13d360()
0x13d360()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x13d360()){
	AttackModule::clear_all()
}
