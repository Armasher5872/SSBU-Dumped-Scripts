#[acmd_script( agent = "mewtwo", script = "game_final", category = ACMD_GAME, low_priority )]
unsafe fn game_final(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        WHOLE_HIT(fighter, *HIT_STATUS_INVINCIBLE);
        SLOW_OPPONENT(fighter, 10, 90);
        CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 20, 18, 0, 0);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false);
    if is_excute(fighter) {
        PostureModule::scale(boma, 5, 0);
        0xe77b0(-1411323488, 2);
        CAM_ZOOM_IN_arg5(0, 0);
        camera!(fighter, *MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 2);
        FT_START_CUTIN(fighter);
    }
    frame(lua_state, 5.0);
    if is_excute(fighter) {
        WorkModule::on_flag(boma, *FIGHTER_MEWTWO_STATUS_FINAL_FLAG_FINAL_CHANGE);
    }
    if !WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA) {
        frame(lua_state, 10.0);
        if is_excute(fighter) {
            FT_SET_FINAL_FEAR_FACE(fighter, 60);
            REQ_FINAL_START_CAMERA_arg3(Hash40::new("d04final.nuanmb"), false, false);
            FT_START_CUTIN(fighter);
        }
    }
    frame(lua_state, 30.0);
    if is_excute(fighter) {
        SlowModule::set_whole(boma, 2, 0);
    }
    else{
    frame(lua_state, 30.0);
    if is_excute(fighter) {
        CAM_ZOOM_OUT(fighter);
    }
}
frame(lua_state, 50.0);
if is_excute(fighter) {
    SlowModule::clear_whole(boma);
}
}