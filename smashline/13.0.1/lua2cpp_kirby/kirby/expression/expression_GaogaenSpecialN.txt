if macros::is_excute(fighter) {
slope(*MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
}frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackl"), 0);
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 11, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 17.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 11, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 29.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 11, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 41.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 11, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 50.0);
if macros::is_excute(fighter) {
macros::RUMBLE_HIT(fighter, Hash40::new("rbkind_attackm"), 0);
}frame(fighter.lua_state_agent, 53.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 6, false);
ControlModule::set_rumble(fighter.module_accessor);
}frame(fighter.lua_state_agent, 60.0);
if macros::is_excute(fighter) {
methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_grapple"), 6, false);
ControlModule::set_rumble(fighter.module_accessor);
}