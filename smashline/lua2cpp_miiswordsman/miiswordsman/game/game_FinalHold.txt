#[acmd_script( agent = "miiswordsman", script = "game_finalhold", category = ACMD_GAME, low_priority)]
unsafe fn game_finalhold(fighter: &mut L2CAgentBase) {
    frame(fighter.lua_state_agent, 1.0);
    frame(fighter.lua_state_agent, 4.0);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 25, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -25, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -25, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 25, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    frame(fighter.lua_state_agent, 60.0);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 25, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    for(49 Iterations){
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -20, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 15, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 0, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, 10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 2);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -5, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 5);
    if macros::is_excute(fighter) {
        WorkModule::set_float(fighter.module_accessor, -10, *FIGHTER_MIISWORDSMAN_STATUS_FINAL_WORK_ID_FLOAT_WAVE_ANGLE);
        ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_MIISWORDSMAN_GENERATE_ARTICLE_WAVE);
    }
    wait(0, 4);
}
}