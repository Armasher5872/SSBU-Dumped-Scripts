#[acmd_script( agent = "pfushigisou", script = "expression_appealsr", category = ACMD_EXPRESSION, low_priority)]
unsafe fn expression_appealsr(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_TOP, 5);
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk_hv"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 27.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk_hv"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 44.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk_hv"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 58.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_walk_hv"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
    frame(fighter.lua_state_agent, 76.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_nohitm"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
        slope(*MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 10);
    }
    frame(fighter.lua_state_agent, 86.0);
    if macros::is_excute(fighter) {
        methodlib::L2CValue::as_hash()const(Hash40::new("rbkind_landl"), 0, false);
        ControlModule::set_rumble(fighter.module_accessor);
    }
}