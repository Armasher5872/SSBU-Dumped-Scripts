#[acmd_script( agent = "krool", script = "expression_specialairnspitb", category = ACMD_EXPRESSION, low_priority )]
unsafe fn expression_specialairnspitb(fighter: &mut L2CAgentBase) {
    let lua_state = fighter.lua_state_agent;
    let boma = fighter.boma();
    if is_excute(fighter) {
        slope!(fighter, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false);
        VisibilityModule::set_int64(boma, hash40("crown") as i64, hash40("crown_hide") as i64);
    }
    IS_EXIST_ARTICLE(fighter, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
        if is_excute(fighter) {
            ArticleModule::set_visibility_whole(boma, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT, true);
        }
    }
    frame(lua_state, 23.0);
    if WorkModule::is_flag(boma, *FIGHTER_KROOL_INSTANCE_WORK_ID_FLAG_SPECIAL_N_SUCTION_IRONBALL) {
        if is_excute(fighter) {
            QUAKE(fighter, *CAMERA_QUAKE_KIND_S);
        }
        else{
        if is_excute(fighter) {
            QUAKE(fighter, *CAMERA_QUAKE_KIND_M);
        }
    }
}
if is_excute(fighter) {
    ControlModule::set_rumble(boma, Hash40::new("rbkind_explosion"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
frame(lua_state, 60.0);
if is_excute(fighter) {
    VisibilityModule::set_int64(boma, hash40("crown") as i64, hash40("crown_normal") as i64);
}
IS_EXIST_ARTICLE(fighter, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT);
if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, true)){
    if is_excute(fighter) {
        ArticleModule::set_visibility_whole(boma, *FIGHTER_KROOL_GENERATE_ARTICLE_PIRATEHAT, false);
    }
}
frame(lua_state, 70.0);
if is_excute(fighter) {
    ItemModule::set_have_item_visibility(boma, true);
    notify_event_msc_cmd!(fighter, Hash40::new_raw(0x23c33f3bdc));
}
}