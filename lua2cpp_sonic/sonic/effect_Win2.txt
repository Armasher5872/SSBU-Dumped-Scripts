get_value_float(SO_VAR_FLOAT_LR)
for(16 Iterations){
	0x12c490(0, 0)
	0x12c490()
	0x12c490()
	if(0x12c490()){
		methodlib::L2CValue::operatorbool()const(is_excute)
		if(0x12c490()){
			EFFECT_FOLLOW_arg11(0x0e8655e3ba, hash40("throw"), 0, 0, 0, 180, 180, 0, -1, true, FIGHTER_INSTANCE_WORK_ID_INT_COLOR)
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			0x12c490()
			LAST_EFFECT_SET_RATE(1.09)
		}
		else{
			methodlib::L2CValue::operatorbool()const(is_excute)
			if(0x12c490()){
				EFFECT_FOLLOW_arg11(0x0e8655e3ba, hash40("throw"), 0, 0, 0, 0, 180, 0, 1, true, FIGHTER_INSTANCE_WORK_ID_INT_COLOR)
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				0x12c490()
				LAST_EFFECT_SET_RATE(1.09)
				0x12c490()
			}
		}
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12c490()){
		LAST_EFFECT_SET_WORK_INT(FIGHTER_STATUS_WIN_WORK_INT_EFFECT_HANDLE)
		0x12c490()
	}
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12c490()){
		FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("throw"), 5, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true)
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		LAST_EFFECT_SET_RATE(1.5)
		0x12c490()
	}
	wait(Frames=2)
	0x12c490()
	0x12c490()
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x12c490()){
		FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("throw"), 5, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true)
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		0x12c490()
		LAST_EFFECT_SET_RATE(1.5)
		0x12c490()
	}
	wait(Frames=2)
	0x12c490()
	0x12c490()
}
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	EFFECT_OFF_HANDLE(FIGHTER_STATUS_WIN_WORK_INT_EFFECT_HANDLE)
	0x12c490()
	0x12c490()
}
frame(Frame=65)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("throw"), 4, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	LAST_EFFECT_SET_RATE(1.1)
	0x12c490()
}
frame(Frame=70)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	FOOT_EFFECT(hash40("sys_turn_smoke"), hash40("throw"), 7, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	LAST_EFFECT_SET_RATE(0.9)
	0x12c490()
}
frame(Frame=96)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	EFFECT(hash40("sys_whirlwind_r"), hash40("top"), 1.5, 0, 0, 0, 0, 0, 0.675, 0, 0, 0, 0, 0, 0, true)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	LAST_EFFECT_SET_RATE(0.78)
	0x12c490()
}
frame(Frame=112)
0x12c490()
0x12c490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x12c490()){
	EFFECT(hash40("sys_smash_flash_s"), hash40("haver"), -1, 1, 1, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, true)
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	0x12c490()
	LAST_EFFECT_SET_RATE(0.7)
	0x12c490()
}
