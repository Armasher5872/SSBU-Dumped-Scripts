unsafe extern "C" fn effect_appealhir(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 16.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("null"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 0, true);
        EFFECT_FOLLOW(agent, Hash40::new("brave_tension"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(lua_state, 17.0);
    if is_excute(agent) {
        BURN_COLOR(agent, 2, 0.15, 2.2, 0);
    }
    wait(lua_state, 2.0);
    if is_excute(agent) {
        BURN_COLOR_FRAME(agent, 32, 2, 0.15, 2.2, 1);
    }
    wait(lua_state, 32.0);
    frame(lua_state, 44.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_down_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
        BURN_COLOR(agent, 2, 0.15, 2.2, 1);
    }
    wait(lua_state, 1.0);
    if is_excute(agent) {
        BURN_COLOR_FRAME(agent, 12, 2, 0.15, 2.2, 0);
    }
    wait(lua_state, 12.0);
    if is_excute(agent) {
        BURN_COLOR_NORMAL(agent);
    }
}

unsafe extern "C" fn sound_appealhir(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 15.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_brave_appeal_h01"));
    }
    frame(lua_state, 16.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_brave_appeal01"));
    }
    frame(lua_state, 46.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_brave_appeal_h02"));
    }
}

unsafe extern "C" fn expression_appealhir(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 18.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_elecattacks"), 28, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 48.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_nohits"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}