#[acmd_script( agent = "reflet", script = "game_finalstart" , category = ACMD_GAME , low_priority)]
unsafe fn game_finalstart(fighter: &mut L2CAgentBase) {
    if macros::is_excute(fighter) {
        macros::WHOLE_HIT(fighter, *HIT_STATUS_XLU);
    }
    frame(fighter.lua_state_agent, 1.0);
    if macros::is_excute(fighter) {
        macros::CHECK_VALID_FINAL_START_CAMERA(fighter, 0, 7, 40, 0, 0, 0);
        macros::SLOW_OPPONENT(fighter, 8, 50);
    }
    WorkModule::is_flag(fighter.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_DISABLE_FINAL_START_CAMERA);
    if(methodlib::L2CValue::operator==(lib::L2CValueconst&)const(false, false)){;
        frame(fighter.lua_state_agent, 5.0);
        if macros::is_excute(fighter) {
            ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_REFLET_GENERATE_ARTICLE_CHROM);
            macros::FT_SET_FINAL_FEAR_FACE(fighter, 30);
            macros::REQ_FINAL_START_CAMERA(fighter, Hash40::new("d04finalstart.nuanmb"), false);
            macros::FT_START_CUTIN(fighter);
        }
    }
    frame(fighter.lua_state_agent, 20.0);
    if macros::is_excute(fighter) {
        SlowModule::set_whole(fighter.module_accessor, 6, 0);
    }
    else{;
    if macros::is_excute(fighter) {
        PostureModule::scale(fighter.module_accessor, 3, 0);
        0x144300(1831911710, 2);
        CAM_ZOOM_IN_arg5(0, 0);
        camera(*MA_MSC_CMD_CAMERA_CAM_OFFSET, 0, 6);
        macros::FT_START_CUTIN(fighter);
    }
}
frame(fighter.lua_state_agent, 5.0);
if macros::is_excute(fighter) {
    ArticleModule::generate_article(fighter.module_accessor, *FIGHTER_REFLET_GENERATE_ARTICLE_CHROM);
}
frame(fighter.lua_state_agent, 25.0);
if macros::is_excute(fighter) {
    SlowModule::clear_whole(fighter.module_accessor);
    macros::CAM_ZOOM_OUT(fighter);
}
frame(fighter.lua_state_agent, 28.0);
if macros::is_excute(fighter) {
    WorkModule::on_flag(fighter.module_accessor, *FIGHTER_REFLET_STATUS_FINAL_FLAG_SWORD_THROW_START);
}
frame(fighter.lua_state_agent, 45.0);
if macros::is_excute(fighter) {
    WorkModule::on_flag(fighter.module_accessor, *FIGHTER_REFLET_STATUS_FINAL_FLAG_GOTO_MOVE);
}
}