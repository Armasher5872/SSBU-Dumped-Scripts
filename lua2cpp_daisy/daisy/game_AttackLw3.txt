frame(Frame=1)
0xe41e0()
0xe41e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe41e0()){
	FighterAreaModuleImpl::enable_fix_jostle_area(1, 4)
	0xe41e0()
	0xe41e0()
}
frame(Frame=6)
0xe41e0()
0xe41e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe41e0()){
	FighterAreaModuleImpl::enable_fix_jostle_area(3, 6)
	0xe41e0()
	0xe41e0()
}
frame(Frame=8)
0xe41e0()
0xe41e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe41e0()){
	ATTACK(ID=0, Part=0, Bone=hash40("top"), Damage=7.0, Angle=275, KBG=105, FKB=0, BKB=60, Size=3.8, X=0.0, Y=3.2, Z=6.5, X2=0.0, Y2=2.8, Z2=10.2, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_G, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_KICK)
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	ATTACK(ID=1, Part=0, Bone=hash40("top"), Damage=7.0, Angle=80, KBG=105, FKB=0, BKB=15, Size=3.8, X=0.0, Y=3.2, Z=6.5, X2=0.0, Y2=2.8, Z2=10.2, Hitlag=1.0, SDI=1.0, Clang_Rebound=ATTACK_SETOFF_KIND_ON, FacingRestrict=ATTACK_LR_CHECK_POS, SetWeight=false, ShieldDamage=0, Trip=0.0, Rehit=0, Reflectable=false, Absorbable=false, Flinchless=false, DisableHitlag=false, Direct_Hitbox=true, Ground_or_Air=COLLISION_SITUATION_MASK_A, Hitbits=COLLISION_CATEGORY_MASK_ALL, CollisionPart=COLLISION_PART_MASK_ALL, FriendlyFire=false, Effect=hash40("collision_attr_normal"), SFXLevel=ATTACK_SOUND_LEVEL_M, SFXType=COLLISION_SOUND_ATTR_PUNCH, Type=ATTACK_REGION_KICK)
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	0xe41e0()
	AttackModule::set_attack_height_all(ATTACK_HEIGHT_LOW, false)
	0xe41e0()
	0xe41e0()
}
frame(Frame=10)
0xe41e0()
0xe41e0()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0xe41e0()){
	AttackModule::clear_all()
	FighterAreaModuleImpl::enable_fix_jostle_area(3, 3)
	0xe41e0()
	0xe41e0()
}
