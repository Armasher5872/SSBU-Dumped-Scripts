if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("haver"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
}
frame(Frame=1)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 5, false)
	ControlModule::set_rumble()
}
frame(Frame=2)
if(is_excute){
	RUMBLE_HIT(hash40("rbkind_slashm"), 5)
}
frame(Frame=13)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("top"), ATTACK_DIRECTION_X_MINUS, ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y)
	AttackModule::set_attack_reference_joint_id()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 5, false)
	ControlModule::set_rumble()
}
frame(Frame=22)
if(is_excute){
	methodlib::L2CValue::as_hash()const(hash40("haver"), ATTACK_DIRECTION_Z, ATTACK_DIRECTION_Y, ATTACK_DIRECTION_X)
	AttackModule::set_attack_reference_joint_id()
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitl"), 0, false)
	ControlModule::set_rumble()
}
frame(Frame=25)
if(is_excute){
	QUAKE(CAMERA_QUAKE_KIND_L)
}
frame(Frame=26)
if(is_excute){
	RUMBLE_HIT(hash40("rbkind_slashll"), 0)
}
