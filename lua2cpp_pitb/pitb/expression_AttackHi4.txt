methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	VisibilityModule::set_status_default_int64(hash40("weapon"), hash40("weapon_normal"))
	0x10d490()
	0x10d490()
	slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
	0x10d490()
	0x10d490()
	0x10d490()
	ItemModule::set_have_item_visibility(false)
	0x10d490()
}
frame(Frame=2)
0x10d490()
0x10d490()
execute(2)
0x10d490()
WorkModule::is_flag(FIGHTER_STATUS_ATTACK_FLAG_SMASH_SMASH_HOLD_TO_ATTACK)
0x10d490(false, true)
0x10d490()
0x10d490()
if(0x10d490()){
	methodlib::L2CValue::operatorbool()const(is_excute)
	if(0x10d490()){
		ItemModule::set_have_item_visibility(false)
		0x10d490()
		VisibilityModule::set_status_default_int64(hash40("weapon"), hash40("weapon_normal"))
		0x10d490()
		0x10d490()
		slope(MA_MSC_CMD_SLOPE_SLOPE, SLOPE_STATUS_LR)
		0x10d490()
		0x10d490()
		0x10d490()
	}
}
frame(Frame=4)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_NONE, 4)
	0x10d490()
	0x10d490()
	0x10d490()
	0x10d490()
}
frame(Frame=5)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 3, false)
	ControlModule::set_rumble()
	0x10d490()
	0x10d490()
	0x10d490()
}
frame(Frame=6)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	RUMBLE_HIT(hash40("rbkind_slashs"), 7)
	0x10d490()
	0x10d490()
}
frame(Frame=9)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_nohitm"), 6, false)
	ControlModule::set_rumble()
	0x10d490()
	0x10d490()
	0x10d490()
}
frame(Frame=16)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	RUMBLE_HIT(hash40("rbkind_nohitm"), 0)
	0x10d490()
	0x10d490()
}
frame(Frame=18)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_slashm"), 0, false)
	ControlModule::set_rumble()
	0x10d490()
	0x10d490()
	0x10d490()
}
frame(Frame=34)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	slope(MA_MSC_CMD_SLOPE_SLOPE_INTP, SLOPE_STATUS_LR, 6)
	0x10d490()
	0x10d490()
	0x10d490()
	0x10d490()
}
frame(Frame=40)
0x10d490()
0x10d490()
methodlib::L2CValue::operatorbool()const(is_excute)
if(0x10d490()){
	methodlib::L2CValue::as_hash()const(hash40("rbkind_lands"), 0, false)
	ControlModule::set_rumble()
	0x10d490()
	0x10d490()
	0x10d490()
}
